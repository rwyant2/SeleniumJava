<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="4" ignored="24" total="60" passed="32">
  <reporter-output>
  </reporter-output>
  <suite name="dynamic suite for linux and chrome" duration-ms="21417" started-at="2018-07-10T12:45:01Z" finished-at="2018-07-10T12:45:23Z">
    <groups>
    </groups>
    <test name="dynamic test 1" duration-ms="9311" started-at="2018-07-10T12:45:01Z" finished-at="2018-07-10T12:45:11Z">
      <class name="cases.TextFieldCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextFieldCase@4f4a7090]" name="beforeClass" is-config="true" duration-ms="1647" started-at="2018-07-10T12:45:07Z" finished-at="2018-07-10T12:45:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@4f4a7090]" name="beforeMethod" is-config="true" duration-ms="182" started-at="2018-07-10T12:45:08Z" finished-at="2018-07-10T12:45:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="intentionalFailTextField()[pri:2, instance:cases.TextFieldCase@4f4a7090]" name="intentionalFailTextField" duration-ms="472" started-at="2018-07-10T12:45:08Z" finished-at="2018-07-10T12:45:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [This should fail] but found [Please fail]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [This should fail] but found [Please fail]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at cases.TextFieldCase.intentionalFailTextField(TextFieldCase.java:31)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailTextField -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@4f4a7090]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:10Z" finished-at="2018-07-10T12:45:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@4f4a7090]" name="beforeMethod" is-config="true" duration-ms="117" started-at="2018-07-10T12:45:10Z" finished-at="2018-07-10T12:45:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testTextField()[pri:2, instance:cases.TextFieldCase@4f4a7090]" name="testTextField" duration-ms="229" started-at="2018-07-10T12:45:10Z" finished-at="2018-07-10T12:45:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTextField -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@4f4a7090]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:10Z" finished-at="2018-07-10T12:45:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextFieldCase@4f4a7090]" name="afterClass" is-config="true" duration-ms="414" started-at="2018-07-10T12:45:10Z" finished-at="2018-07-10T12:45:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.TextFieldCase -->
      <class name="cases.CheckBoxCase">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:01Z" finished-at="2018-07-10T12:45:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="beforeClass" is-config="true" duration-ms="2495" started-at="2018-07-10T12:45:01Z" finished-at="2018-07-10T12:45:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="beforeMethod" is-config="true" duration-ms="180" started-at="2018-07-10T12:45:04Z" finished-at="2018-07-10T12:45:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxAll()[pri:2, instance:cases.CheckBoxCase@52d455b8]" name="checkBoxAll" duration-ms="389" started-at="2018-07-10T12:45:04Z" finished-at="2018-07-10T12:45:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxAll -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:05Z" finished-at="2018-07-10T12:45:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="beforeMethod" is-config="true" duration-ms="140" started-at="2018-07-10T12:45:05Z" finished-at="2018-07-10T12:45:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxNone()[pri:2, instance:cases.CheckBoxCase@52d455b8]" name="checkBoxNone" duration-ms="137" started-at="2018-07-10T12:45:05Z" finished-at="2018-07-10T12:45:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxNone -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:05Z" finished-at="2018-07-10T12:45:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="beforeMethod" is-config="true" duration-ms="124" started-at="2018-07-10T12:45:05Z" finished-at="2018-07-10T12:45:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxOneThree()[pri:2, instance:cases.CheckBoxCase@52d455b8]" name="checkBoxOneThree" duration-ms="283" started-at="2018-07-10T12:45:05Z" finished-at="2018-07-10T12:45:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneThree -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:05Z" finished-at="2018-07-10T12:45:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="beforeMethod" is-config="true" duration-ms="117" started-at="2018-07-10T12:45:05Z" finished-at="2018-07-10T12:45:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxOneTwo()[pri:2, instance:cases.CheckBoxCase@52d455b8]" name="checkBoxOneTwo" duration-ms="281" started-at="2018-07-10T12:45:05Z" finished-at="2018-07-10T12:45:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneTwo -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:06Z" finished-at="2018-07-10T12:45:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="beforeMethod" is-config="true" duration-ms="120" started-at="2018-07-10T12:45:06Z" finished-at="2018-07-10T12:45:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxTwoThree()[pri:2, instance:cases.CheckBoxCase@52d455b8]" name="checkBoxTwoThree" duration-ms="284" started-at="2018-07-10T12:45:06Z" finished-at="2018-07-10T12:45:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxTwoThree -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:06Z" finished-at="2018-07-10T12:45:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="beforeMethod" is-config="true" duration-ms="122" started-at="2018-07-10T12:45:06Z" finished-at="2018-07-10T12:45:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="intentionalFailcheckBox()[pri:2, instance:cases.CheckBoxCase@52d455b8]" name="intentionalFailcheckBox" duration-ms="290" started-at="2018-07-10T12:45:06Z" finished-at="2018-07-10T12:45:06Z">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:86)
at org.junit.Assert.assertTrue(Assert.java:41)
at org.junit.Assert.assertTrue(Assert.java:52)
at cases.CheckBoxCase.intentionalFailcheckBox(CheckBoxCase.java:59)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailcheckBox -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-10T12:45:07Z" finished-at="2018-07-10T12:45:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="afterClass" is-config="true" duration-ms="74" started-at="2018-07-10T12:45:07Z" finished-at="2018-07-10T12:45:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="afterTest" is-config="true" duration-ms="1" started-at="2018-07-10T12:45:11Z" finished-at="2018-07-10T12:45:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- cases.CheckBoxCase -->
    </test> <!-- dynamic test 1 -->
    <test name="dynamic test 2" duration-ms="11784" started-at="2018-07-10T12:45:11Z" finished-at="2018-07-10T12:45:23Z">
      <class name="cases.DropDownCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.DropDownCase@75412c2f]" name="beforeClass" is-config="true" duration-ms="2291" started-at="2018-07-10T12:45:15Z" finished-at="2018-07-10T12:45:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@75412c2f]" name="beforeMethod" is-config="true" duration-ms="153" started-at="2018-07-10T12:45:17Z" finished-at="2018-07-10T12:45:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownDefault()[pri:0, instance:cases.DropDownCase@75412c2f]" name="dropDownDefault" duration-ms="157" started-at="2018-07-10T12:45:17Z" finished-at="2018-07-10T12:45:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownDefault -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@75412c2f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:17Z" finished-at="2018-07-10T12:45:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@75412c2f]" name="beforeMethod" is-config="true" duration-ms="99" started-at="2018-07-10T12:45:17Z" finished-at="2018-07-10T12:45:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownMustard()[pri:0, instance:cases.DropDownCase@75412c2f]" name="dropDownMustard" duration-ms="183" started-at="2018-07-10T12:45:18Z" finished-at="2018-07-10T12:45:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownMustard -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@75412c2f]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-10T12:45:18Z" finished-at="2018-07-10T12:45:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@75412c2f]" name="beforeMethod" is-config="true" duration-ms="103" started-at="2018-07-10T12:45:18Z" finished-at="2018-07-10T12:45:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownOnion()[pri:0, instance:cases.DropDownCase@75412c2f]" name="dropDownOnion" duration-ms="222" started-at="2018-07-10T12:45:18Z" finished-at="2018-07-10T12:45:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownOnion -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@75412c2f]" name="beforeMethod" is-config="true" duration-ms="110" started-at="2018-07-10T12:45:18Z" finished-at="2018-07-10T12:45:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@75412c2f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:18Z" finished-at="2018-07-10T12:45:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="dropDownTomato()[pri:0, instance:cases.DropDownCase@75412c2f]" name="dropDownTomato" duration-ms="208" started-at="2018-07-10T12:45:18Z" finished-at="2018-07-10T12:45:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownTomato -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@75412c2f]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-10T12:45:18Z" finished-at="2018-07-10T12:45:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.DropDownCase@75412c2f]" name="afterClass" is-config="true" duration-ms="64" started-at="2018-07-10T12:45:18Z" finished-at="2018-07-10T12:45:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.DropDownCase -->
      <class name="cases.TextAreaCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextAreaCase@282ba1e]" name="beforeClass" is-config="true" duration-ms="2425" started-at="2018-07-10T12:45:18Z" finished-at="2018-07-10T12:45:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@282ba1e]" name="beforeMethod" is-config="true" duration-ms="200" started-at="2018-07-10T12:45:21Z" finished-at="2018-07-10T12:45:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textAreaLongString()[pri:0, instance:cases.TextAreaCase@282ba1e]" name="textAreaLongString" duration-ms="940" started-at="2018-07-10T12:45:21Z" finished-at="2018-07-10T12:45:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaLongString -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@282ba1e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:22Z" finished-at="2018-07-10T12:45:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@282ba1e]" name="beforeMethod" is-config="true" duration-ms="106" started-at="2018-07-10T12:45:22Z" finished-at="2018-07-10T12:45:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textAreaWithEnter()[pri:0, instance:cases.TextAreaCase@282ba1e]" name="textAreaWithEnter" duration-ms="746" started-at="2018-07-10T12:45:22Z" finished-at="2018-07-10T12:45:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaWithEnter -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@282ba1e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:23Z" finished-at="2018-07-10T12:45:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextAreaCase@282ba1e]" name="afterClass" is-config="true" duration-ms="63" started-at="2018-07-10T12:45:23Z" finished-at="2018-07-10T12:45:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.TextAreaCase -->
      <class name="cases.RadioButtonCase">
        <test-method status="PASS" signature="beforeSuite(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="beforeSuite" is-config="true" duration-ms="29" started-at="2018-07-10T12:45:01Z" finished-at="2018-07-10T12:45:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[linux]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[localhost]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="beforeTest" is-config="true" duration-ms="1" started-at="2018-07-10T12:45:11Z" finished-at="2018-07-10T12:45:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="beforeClass" is-config="true" duration-ms="2397" started-at="2018-07-10T12:45:11Z" finished-at="2018-07-10T12:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="beforeMethod" is-config="true" duration-ms="155" started-at="2018-07-10T12:45:13Z" finished-at="2018-07-10T12:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceA()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="radioChoiceA" duration-ms="217" started-at="2018-07-10T12:45:14Z" finished-at="2018-07-10T12:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceA -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:14Z" finished-at="2018-07-10T12:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="beforeMethod" is-config="true" duration-ms="110" started-at="2018-07-10T12:45:14Z" finished-at="2018-07-10T12:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceB()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="radioChoiceB" duration-ms="192" started-at="2018-07-10T12:45:14Z" finished-at="2018-07-10T12:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceB -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="beforeMethod" is-config="true" duration-ms="118" started-at="2018-07-10T12:45:14Z" finished-at="2018-07-10T12:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:14Z" finished-at="2018-07-10T12:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="radioChoiceC()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="radioChoiceC" duration-ms="206" started-at="2018-07-10T12:45:14Z" finished-at="2018-07-10T12:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceC -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:14Z" finished-at="2018-07-10T12:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="beforeMethod" is-config="true" duration-ms="110" started-at="2018-07-10T12:45:14Z" finished-at="2018-07-10T12:45:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioDefault()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="radioDefault" duration-ms="132" started-at="2018-07-10T12:45:15Z" finished-at="2018-07-10T12:45:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioDefault -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:15Z" finished-at="2018-07-10T12:45:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="afterClass" is-config="true" duration-ms="65" started-at="2018-07-10T12:45:15Z" finished-at="2018-07-10T12:45:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:23Z" finished-at="2018-07-10T12:45:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="afterSuite" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:23Z" finished-at="2018-07-10T12:45:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- cases.RadioButtonCase -->
    </test> <!-- dynamic test 2 -->
  </suite> <!-- dynamic suite for linux and chrome -->
  <suite name="dynamic suite for linux and firefox" duration-ms="43105" started-at="2018-07-10T12:45:23Z" finished-at="2018-07-10T12:46:06Z">
    <groups>
    </groups>
    <test name="dynamic test 1" duration-ms="19623" started-at="2018-07-10T12:45:23Z" finished-at="2018-07-10T12:45:43Z">
      <class name="cases.TextFieldCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextFieldCase@21a06946]" name="beforeClass" is-config="true" duration-ms="4100" started-at="2018-07-10T12:45:34Z" finished-at="2018-07-10T12:45:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@21a06946]" name="beforeMethod" is-config="true" duration-ms="219" started-at="2018-07-10T12:45:38Z" finished-at="2018-07-10T12:45:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="intentionalFailTextField()[pri:2, instance:cases.TextFieldCase@21a06946]" name="intentionalFailTextField" duration-ms="226" started-at="2018-07-10T12:45:38Z" finished-at="2018-07-10T12:45:39Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [This should fail] but found [Please fail]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [This should fail] but found [Please fail]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at cases.TextFieldCase.intentionalFailTextField(TextFieldCase.java:31)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailTextField -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@21a06946]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:39Z" finished-at="2018-07-10T12:45:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@21a06946]" name="beforeMethod" is-config="true" duration-ms="124" started-at="2018-07-10T12:45:39Z" finished-at="2018-07-10T12:45:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testTextField()[pri:2, instance:cases.TextFieldCase@21a06946]" name="testTextField" duration-ms="174" started-at="2018-07-10T12:45:39Z" finished-at="2018-07-10T12:45:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTextField -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@21a06946]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:39Z" finished-at="2018-07-10T12:45:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextFieldCase@21a06946]" name="afterClass" is-config="true" duration-ms="3555" started-at="2018-07-10T12:45:39Z" finished-at="2018-07-10T12:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.TextFieldCase -->
      <class name="cases.CheckBoxCase">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="beforeTest" is-config="true" duration-ms="1" started-at="2018-07-10T12:45:23Z" finished-at="2018-07-10T12:45:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="beforeClass" is-config="true" duration-ms="4477" started-at="2018-07-10T12:45:23Z" finished-at="2018-07-10T12:45:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="beforeMethod" is-config="true" duration-ms="203" started-at="2018-07-10T12:45:27Z" finished-at="2018-07-10T12:45:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxAll()[pri:2, instance:cases.CheckBoxCase@483bf400]" name="checkBoxAll" duration-ms="918" started-at="2018-07-10T12:45:28Z" finished-at="2018-07-10T12:45:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxAll -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:28Z" finished-at="2018-07-10T12:45:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="beforeMethod" is-config="true" duration-ms="148" started-at="2018-07-10T12:45:28Z" finished-at="2018-07-10T12:45:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxNone()[pri:2, instance:cases.CheckBoxCase@483bf400]" name="checkBoxNone" duration-ms="89" started-at="2018-07-10T12:45:29Z" finished-at="2018-07-10T12:45:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxNone -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:29Z" finished-at="2018-07-10T12:45:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="beforeMethod" is-config="true" duration-ms="224" started-at="2018-07-10T12:45:29Z" finished-at="2018-07-10T12:45:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxOneThree()[pri:2, instance:cases.CheckBoxCase@483bf400]" name="checkBoxOneThree" duration-ms="715" started-at="2018-07-10T12:45:29Z" finished-at="2018-07-10T12:45:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneThree -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:30Z" finished-at="2018-07-10T12:45:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="beforeMethod" is-config="true" duration-ms="122" started-at="2018-07-10T12:45:30Z" finished-at="2018-07-10T12:45:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxOneTwo()[pri:2, instance:cases.CheckBoxCase@483bf400]" name="checkBoxOneTwo" duration-ms="649" started-at="2018-07-10T12:45:30Z" finished-at="2018-07-10T12:45:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneTwo -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="beforeMethod" is-config="true" duration-ms="1114" started-at="2018-07-10T12:45:30Z" finished-at="2018-07-10T12:45:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:30Z" finished-at="2018-07-10T12:45:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkBoxTwoThree()[pri:2, instance:cases.CheckBoxCase@483bf400]" name="checkBoxTwoThree" duration-ms="566" started-at="2018-07-10T12:45:32Z" finished-at="2018-07-10T12:45:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxTwoThree -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:32Z" finished-at="2018-07-10T12:45:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="beforeMethod" is-config="true" duration-ms="109" started-at="2018-07-10T12:45:32Z" finished-at="2018-07-10T12:45:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="intentionalFailcheckBox()[pri:2, instance:cases.CheckBoxCase@483bf400]" name="intentionalFailcheckBox" duration-ms="582" started-at="2018-07-10T12:45:32Z" finished-at="2018-07-10T12:45:33Z">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:86)
at org.junit.Assert.assertTrue(Assert.java:41)
at org.junit.Assert.assertTrue(Assert.java:52)
at cases.CheckBoxCase.intentionalFailcheckBox(CheckBoxCase.java:59)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailcheckBox -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="afterClass" is-config="true" duration-ms="1101" started-at="2018-07-10T12:45:33Z" finished-at="2018-07-10T12:45:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:33Z" finished-at="2018-07-10T12:45:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="afterTest" is-config="true" duration-ms="1" started-at="2018-07-10T12:45:43Z" finished-at="2018-07-10T12:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- cases.CheckBoxCase -->
    </test> <!-- dynamic test 1 -->
    <test name="dynamic test 2" duration-ms="23477" started-at="2018-07-10T12:45:43Z" finished-at="2018-07-10T12:46:06Z">
      <class name="cases.DropDownCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.DropDownCase@4b6995df]" name="beforeClass" is-config="true" duration-ms="3300" started-at="2018-07-10T12:45:52Z" finished-at="2018-07-10T12:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@4b6995df]" name="beforeMethod" is-config="true" duration-ms="157" started-at="2018-07-10T12:45:56Z" finished-at="2018-07-10T12:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownDefault()[pri:0, instance:cases.DropDownCase@4b6995df]" name="dropDownDefault" duration-ms="284" started-at="2018-07-10T12:45:56Z" finished-at="2018-07-10T12:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownDefault -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@4b6995df]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:56Z" finished-at="2018-07-10T12:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@4b6995df]" name="beforeMethod" is-config="true" duration-ms="142" started-at="2018-07-10T12:45:56Z" finished-at="2018-07-10T12:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownMustard()[pri:0, instance:cases.DropDownCase@4b6995df]" name="dropDownMustard" duration-ms="222" started-at="2018-07-10T12:45:56Z" finished-at="2018-07-10T12:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownMustard -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@4b6995df]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:56Z" finished-at="2018-07-10T12:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@4b6995df]" name="beforeMethod" is-config="true" duration-ms="279" started-at="2018-07-10T12:45:56Z" finished-at="2018-07-10T12:45:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownOnion()[pri:0, instance:cases.DropDownCase@4b6995df]" name="dropDownOnion" duration-ms="545" started-at="2018-07-10T12:45:57Z" finished-at="2018-07-10T12:45:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownOnion -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@4b6995df]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:57Z" finished-at="2018-07-10T12:45:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@4b6995df]" name="beforeMethod" is-config="true" duration-ms="180" started-at="2018-07-10T12:45:57Z" finished-at="2018-07-10T12:45:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownTomato()[pri:0, instance:cases.DropDownCase@4b6995df]" name="dropDownTomato" duration-ms="1392" started-at="2018-07-10T12:45:57Z" finished-at="2018-07-10T12:45:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownTomato -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@4b6995df]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:59Z" finished-at="2018-07-10T12:45:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.DropDownCase@4b6995df]" name="afterClass" is-config="true" duration-ms="1083" started-at="2018-07-10T12:45:59Z" finished-at="2018-07-10T12:46:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.DropDownCase -->
      <class name="cases.TextAreaCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextAreaCase@2fc14f68]" name="beforeClass" is-config="true" duration-ms="3281" started-at="2018-07-10T12:46:00Z" finished-at="2018-07-10T12:46:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@2fc14f68]" name="beforeMethod" is-config="true" duration-ms="211" started-at="2018-07-10T12:46:03Z" finished-at="2018-07-10T12:46:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textAreaLongString()[pri:0, instance:cases.TextAreaCase@2fc14f68]" name="textAreaLongString" duration-ms="424" started-at="2018-07-10T12:46:03Z" finished-at="2018-07-10T12:46:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaLongString -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@2fc14f68]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:46:04Z" finished-at="2018-07-10T12:46:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@2fc14f68]" name="beforeMethod" is-config="true" duration-ms="126" started-at="2018-07-10T12:46:04Z" finished-at="2018-07-10T12:46:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textAreaWithEnter()[pri:0, instance:cases.TextAreaCase@2fc14f68]" name="textAreaWithEnter" duration-ms="614" started-at="2018-07-10T12:46:04Z" finished-at="2018-07-10T12:46:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaWithEnter -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextAreaCase@2fc14f68]" name="afterClass" is-config="true" duration-ms="1501" started-at="2018-07-10T12:46:04Z" finished-at="2018-07-10T12:46:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@2fc14f68]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:46:04Z" finished-at="2018-07-10T12:46:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- cases.TextAreaCase -->
      <class name="cases.RadioButtonCase">
        <test-method status="PASS" signature="beforeSuite(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="beforeSuite" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:23Z" finished-at="2018-07-10T12:45:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[linux]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[localhost]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:43Z" finished-at="2018-07-10T12:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="beforeClass" is-config="true" duration-ms="4016" started-at="2018-07-10T12:45:43Z" finished-at="2018-07-10T12:45:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="beforeMethod" is-config="true" duration-ms="259" started-at="2018-07-10T12:45:47Z" finished-at="2018-07-10T12:45:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceA()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="radioChoiceA" duration-ms="413" started-at="2018-07-10T12:45:47Z" finished-at="2018-07-10T12:45:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceA -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:47Z" finished-at="2018-07-10T12:45:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="beforeMethod" is-config="true" duration-ms="182" started-at="2018-07-10T12:45:47Z" finished-at="2018-07-10T12:45:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceB()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="radioChoiceB" duration-ms="361" started-at="2018-07-10T12:45:47Z" finished-at="2018-07-10T12:45:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceB -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:48Z" finished-at="2018-07-10T12:45:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="beforeMethod" is-config="true" duration-ms="152" started-at="2018-07-10T12:45:48Z" finished-at="2018-07-10T12:45:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceC()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="radioChoiceC" duration-ms="535" started-at="2018-07-10T12:45:48Z" finished-at="2018-07-10T12:45:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceC -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:48Z" finished-at="2018-07-10T12:45:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="beforeMethod" is-config="true" duration-ms="112" started-at="2018-07-10T12:45:48Z" finished-at="2018-07-10T12:45:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioDefault()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="radioDefault" duration-ms="74" started-at="2018-07-10T12:45:49Z" finished-at="2018-07-10T12:45:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioDefault -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="afterClass" is-config="true" duration-ms="3622" started-at="2018-07-10T12:45:49Z" finished-at="2018-07-10T12:45:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-10T12:45:49Z" finished-at="2018-07-10T12:45:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="afterTest" is-config="true" duration-ms="1" started-at="2018-07-10T12:46:06Z" finished-at="2018-07-10T12:46:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="afterSuite" is-config="true" duration-ms="0" started-at="2018-07-10T12:46:06Z" finished-at="2018-07-10T12:46:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- cases.RadioButtonCase -->
    </test> <!-- dynamic test 2 -->
  </suite> <!-- dynamic suite for linux and firefox -->
</testng-results>
