<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="12" total="30" passed="16">
  <reporter-output>
  </reporter-output>
  <suite name="text and checkbox" duration-ms="53051" started-at="2018-05-17T22:24:24Z" finished-at="2018-05-17T22:25:17Z">
    <groups>
    </groups>
    <test name="text field and check box" duration-ms="26996" started-at="2018-05-17T22:24:24Z" finished-at="2018-05-17T22:24:51Z">
      <class name="cases.TextFieldCase">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.TextFieldCase@1ce92674]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-05-17T22:24:24Z" finished-at="2018-05-17T22:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextFieldCase@1ce92674]" name="beforeClass" is-config="true" duration-ms="12699" started-at="2018-05-17T22:24:24Z" finished-at="2018-05-17T22:24:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@1ce92674]" name="beforeMethod" is-config="true" duration-ms="2944" started-at="2018-05-17T22:24:37Z" finished-at="2018-05-17T22:24:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="intentionalFailTextField()[pri:2, instance:cases.TextFieldCase@1ce92674]" name="intentionalFailTextField" duration-ms="732" started-at="2018-05-17T22:24:39Z" finished-at="2018-05-17T22:24:40Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [This should fail] but found [Please fail]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [This should fail] but found [Please fail]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at cases.TextFieldCase.intentionalFailTextField(TextFieldCase.java:31)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailTextField -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@1ce92674]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-17T22:24:40Z" finished-at="2018-05-17T22:24:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@1ce92674]" name="beforeMethod" is-config="true" duration-ms="127" started-at="2018-05-17T22:24:40Z" finished-at="2018-05-17T22:24:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testTextField()[pri:2, instance:cases.TextFieldCase@1ce92674]" name="testTextField" duration-ms="133" started-at="2018-05-17T22:24:40Z" finished-at="2018-05-17T22:24:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTextField -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@1ce92674]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-05-17T22:24:41Z" finished-at="2018-05-17T22:24:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextFieldCase@1ce92674]" name="afterClass" is-config="true" duration-ms="1215" started-at="2018-05-17T22:24:41Z" finished-at="2018-05-17T22:24:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.TextFieldCase@1ce92674]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-05-17T22:24:51Z" finished-at="2018-05-17T22:24:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- cases.TextFieldCase -->
      <class name="cases.CheckBoxCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.CheckBoxCase@5700d6b1]" name="beforeClass" is-config="true" duration-ms="3491" started-at="2018-05-17T22:24:42Z" finished-at="2018-05-17T22:24:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@5700d6b1]" name="beforeMethod" is-config="true" duration-ms="164" started-at="2018-05-17T22:24:45Z" finished-at="2018-05-17T22:24:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxAll()[pri:2, instance:cases.CheckBoxCase@5700d6b1]" name="checkBoxAll" duration-ms="877" started-at="2018-05-17T22:24:45Z" finished-at="2018-05-17T22:24:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxAll -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@5700d6b1]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-17T22:24:46Z" finished-at="2018-05-17T22:24:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@5700d6b1]" name="beforeMethod" is-config="true" duration-ms="79" started-at="2018-05-17T22:24:46Z" finished-at="2018-05-17T22:24:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxNone()[pri:2, instance:cases.CheckBoxCase@5700d6b1]" name="checkBoxNone" duration-ms="74" started-at="2018-05-17T22:24:46Z" finished-at="2018-05-17T22:24:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxNone -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@5700d6b1]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-05-17T22:24:46Z" finished-at="2018-05-17T22:24:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@5700d6b1]" name="beforeMethod" is-config="true" duration-ms="82" started-at="2018-05-17T22:24:47Z" finished-at="2018-05-17T22:24:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxOneThree()[pri:2, instance:cases.CheckBoxCase@5700d6b1]" name="checkBoxOneThree" duration-ms="624" started-at="2018-05-17T22:24:47Z" finished-at="2018-05-17T22:24:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneThree -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@5700d6b1]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-17T22:24:47Z" finished-at="2018-05-17T22:24:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@5700d6b1]" name="beforeMethod" is-config="true" duration-ms="86" started-at="2018-05-17T22:24:47Z" finished-at="2018-05-17T22:24:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxOneTwo()[pri:2, instance:cases.CheckBoxCase@5700d6b1]" name="checkBoxOneTwo" duration-ms="610" started-at="2018-05-17T22:24:47Z" finished-at="2018-05-17T22:24:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneTwo -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@5700d6b1]" name="beforeMethod" is-config="true" duration-ms="81" started-at="2018-05-17T22:24:48Z" finished-at="2018-05-17T22:24:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@5700d6b1]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-17T22:24:48Z" finished-at="2018-05-17T22:24:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkBoxTwoThree()[pri:2, instance:cases.CheckBoxCase@5700d6b1]" name="checkBoxTwoThree" duration-ms="603" started-at="2018-05-17T22:24:48Z" finished-at="2018-05-17T22:24:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxTwoThree -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@5700d6b1]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-17T22:24:49Z" finished-at="2018-05-17T22:24:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@5700d6b1]" name="beforeMethod" is-config="true" duration-ms="73" started-at="2018-05-17T22:24:49Z" finished-at="2018-05-17T22:24:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="intentionalFailcheckBox()[pri:2, instance:cases.CheckBoxCase@5700d6b1]" name="intentionalFailcheckBox" duration-ms="596" started-at="2018-05-17T22:24:49Z" finished-at="2018-05-17T22:24:49Z">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:86)
at org.junit.Assert.assertTrue(Assert.java:41)
at org.junit.Assert.assertTrue(Assert.java:52)
at cases.CheckBoxCase.intentionalFailcheckBox(CheckBoxCase.java:58)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailcheckBox -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.CheckBoxCase@5700d6b1]" name="afterClass" is-config="true" duration-ms="1490" started-at="2018-05-17T22:24:49Z" finished-at="2018-05-17T22:24:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@5700d6b1]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-17T22:24:49Z" finished-at="2018-05-17T22:24:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- cases.CheckBoxCase -->
    </test> <!-- text field and check box -->
    <test name="everything else" duration-ms="26039" started-at="2018-05-17T22:24:51Z" finished-at="2018-05-17T22:25:17Z">
      <class name="cases.DropDownCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.DropDownCase@1e127982]" name="beforeClass" is-config="true" duration-ms="3798" started-at="2018-05-17T22:25:00Z" finished-at="2018-05-17T22:25:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@1e127982]" name="beforeMethod" is-config="true" duration-ms="147" started-at="2018-05-17T22:25:04Z" finished-at="2018-05-17T22:25:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownDefault()[pri:0, instance:cases.DropDownCase@1e127982]" name="dropDownDefault" duration-ms="99" started-at="2018-05-17T22:25:04Z" finished-at="2018-05-17T22:25:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownDefault -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@1e127982]" name="beforeMethod" is-config="true" duration-ms="80" started-at="2018-05-17T22:25:05Z" finished-at="2018-05-17T22:25:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@1e127982]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-17T22:25:05Z" finished-at="2018-05-17T22:25:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="dropDownMustard()[pri:0, instance:cases.DropDownCase@1e127982]" name="dropDownMustard" duration-ms="105" started-at="2018-05-17T22:25:05Z" finished-at="2018-05-17T22:25:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownMustard -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@1e127982]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-05-17T22:25:05Z" finished-at="2018-05-17T22:25:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@1e127982]" name="beforeMethod" is-config="true" duration-ms="75" started-at="2018-05-17T22:25:05Z" finished-at="2018-05-17T22:25:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownOnion()[pri:0, instance:cases.DropDownCase@1e127982]" name="dropDownOnion" duration-ms="397" started-at="2018-05-17T22:25:05Z" finished-at="2018-05-17T22:25:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownOnion -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@1e127982]" name="beforeMethod" is-config="true" duration-ms="84" started-at="2018-05-17T22:25:05Z" finished-at="2018-05-17T22:25:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@1e127982]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-17T22:25:05Z" finished-at="2018-05-17T22:25:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="dropDownTomato()[pri:0, instance:cases.DropDownCase@1e127982]" name="dropDownTomato" duration-ms="346" started-at="2018-05-17T22:25:05Z" finished-at="2018-05-17T22:25:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownTomato -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@1e127982]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-17T22:25:06Z" finished-at="2018-05-17T22:25:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.DropDownCase@1e127982]" name="afterClass" is-config="true" duration-ms="2007" started-at="2018-05-17T22:25:06Z" finished-at="2018-05-17T22:25:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.DropDownCase -->
      <class name="cases.TextAreaCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextAreaCase@60c6f5b]" name="beforeClass" is-config="true" duration-ms="3474" started-at="2018-05-17T22:25:08Z" finished-at="2018-05-17T22:25:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@60c6f5b]" name="beforeMethod" is-config="true" duration-ms="165" started-at="2018-05-17T22:25:11Z" finished-at="2018-05-17T22:25:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textAreaLongString()[pri:0, instance:cases.TextAreaCase@60c6f5b]" name="textAreaLongString" duration-ms="578" started-at="2018-05-17T22:25:11Z" finished-at="2018-05-17T22:25:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaLongString -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@60c6f5b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-05-17T22:25:12Z" finished-at="2018-05-17T22:25:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@60c6f5b]" name="beforeMethod" is-config="true" duration-ms="71" started-at="2018-05-17T22:25:12Z" finished-at="2018-05-17T22:25:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textAreaWithEnter()[pri:0, instance:cases.TextAreaCase@60c6f5b]" name="textAreaWithEnter" duration-ms="633" started-at="2018-05-17T22:25:12Z" finished-at="2018-05-17T22:25:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaWithEnter -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@60c6f5b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-17T22:25:13Z" finished-at="2018-05-17T22:25:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextAreaCase@60c6f5b]" name="afterClass" is-config="true" duration-ms="4295" started-at="2018-05-17T22:25:13Z" finished-at="2018-05-17T22:25:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.TextAreaCase -->
      <class name="cases.RadioButtonCase">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:cases.RadioButtonCase@617faa95]" name="beforeSuite" is-config="true" duration-ms="16" started-at="2018-05-17T22:24:24Z" finished-at="2018-05-17T22:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.RadioButtonCase@617faa95]" name="beforeTest" is-config="true" duration-ms="1" started-at="2018-05-17T22:24:51Z" finished-at="2018-05-17T22:24:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.RadioButtonCase@617faa95]" name="beforeClass" is-config="true" duration-ms="3264" started-at="2018-05-17T22:24:51Z" finished-at="2018-05-17T22:24:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@617faa95]" name="beforeMethod" is-config="true" duration-ms="141" started-at="2018-05-17T22:24:54Z" finished-at="2018-05-17T22:24:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceA()[pri:0, instance:cases.RadioButtonCase@617faa95]" name="radioChoiceA" duration-ms="472" started-at="2018-05-17T22:24:54Z" finished-at="2018-05-17T22:24:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceA -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@617faa95]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-05-17T22:24:55Z" finished-at="2018-05-17T22:24:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@617faa95]" name="beforeMethod" is-config="true" duration-ms="78" started-at="2018-05-17T22:24:55Z" finished-at="2018-05-17T22:24:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceB()[pri:0, instance:cases.RadioButtonCase@617faa95]" name="radioChoiceB" duration-ms="469" started-at="2018-05-17T22:24:55Z" finished-at="2018-05-17T22:24:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceB -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@617faa95]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-17T22:24:55Z" finished-at="2018-05-17T22:24:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@617faa95]" name="beforeMethod" is-config="true" duration-ms="79" started-at="2018-05-17T22:24:55Z" finished-at="2018-05-17T22:24:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceC()[pri:0, instance:cases.RadioButtonCase@617faa95]" name="radioChoiceC" duration-ms="1378" started-at="2018-05-17T22:24:55Z" finished-at="2018-05-17T22:24:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceC -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@617faa95]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-05-17T22:24:57Z" finished-at="2018-05-17T22:24:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@617faa95]" name="beforeMethod" is-config="true" duration-ms="85" started-at="2018-05-17T22:24:57Z" finished-at="2018-05-17T22:24:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioDefault()[pri:0, instance:cases.RadioButtonCase@617faa95]" name="radioDefault" duration-ms="58" started-at="2018-05-17T22:24:57Z" finished-at="2018-05-17T22:24:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioDefault -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.RadioButtonCase@617faa95]" name="afterClass" is-config="true" duration-ms="3644" started-at="2018-05-17T22:24:57Z" finished-at="2018-05-17T22:25:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@617faa95]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-17T22:24:57Z" finished-at="2018-05-17T22:24:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.RadioButtonCase@617faa95]" name="afterTest" is-config="true" duration-ms="1" started-at="2018-05-17T22:25:17Z" finished-at="2018-05-17T22:25:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:cases.RadioButtonCase@617faa95]" name="afterSuite" is-config="true" duration-ms="1" started-at="2018-05-17T22:25:17Z" finished-at="2018-05-17T22:25:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- cases.RadioButtonCase -->
    </test> <!-- everything else -->
  </suite> <!-- text and checkbox -->
</testng-results>
