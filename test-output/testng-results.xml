<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="54" failed="10" ignored="96" total="240" passed="80">
  <reporter-output>
  </reporter-output>
  <suite name="dynamic suite for linux and firefox (1)" duration-ms="15" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
    <groups>
    </groups>
    <test name="dynamic test 1" duration-ms="3" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
      <class name="cases.TextFieldCase">
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:cases.TextFieldCase@5e025e70]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@5e025e70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="intentionalFailTextField()[pri:2, instance:cases.TextFieldCase@5e025e70]" name="intentionalFailTextField" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailTextField -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@5e025e70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@5e025e70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.TextFieldCase@5e025e70]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="testTextField()[pri:2, instance:cases.TextFieldCase@5e025e70]" name="testTextField" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTextField -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@5e025e70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
      </class> <!-- cases.TextFieldCase -->
      <class name="cases.CheckBoxCase">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.CheckBoxCase@11531931]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@11531931]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="checkBoxAll()[pri:2, instance:cases.CheckBoxCase@11531931]" name="checkBoxAll" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxAll -->
        <test-method status="FAIL" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@11531931]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="checkBoxNone()[pri:2, instance:cases.CheckBoxCase@11531931]" name="checkBoxNone" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxNone -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@11531931]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.CheckBoxCase@11531931]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@11531931]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@11531931]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@11531931]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@11531931]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@11531931]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@11531931]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="intentionalFailcheckBox()[pri:2, instance:cases.CheckBoxCase@11531931]" name="intentionalFailcheckBox" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailcheckBox -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@11531931]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@11531931]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="checkBoxTwoThree()[pri:2, instance:cases.CheckBoxCase@11531931]" name="checkBoxTwoThree" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxTwoThree -->
        <test-method status="SKIP" signature="checkBoxOneThree()[pri:2, instance:cases.CheckBoxCase@11531931]" name="checkBoxOneThree" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneThree -->
        <test-method status="SKIP" signature="checkBoxOneTwo()[pri:2, instance:cases.CheckBoxCase@11531931]" name="checkBoxOneTwo" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneTwo -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.CheckBoxCase@11531931]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@11531931]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:cases.CheckBoxCase@11531931]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- cases.CheckBoxCase -->
    </test> <!-- dynamic test 1 -->
    <test name="dynamic test 2" duration-ms="4" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
      <class name="cases.DropDownCase">
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:cases.DropDownCase@5ba23b66]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.DropDownCase@5ba23b66]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="dropDownDefault()[pri:0, instance:cases.DropDownCase@5ba23b66]" name="dropDownDefault" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownDefault -->
        <test-method status="SKIP" signature="dropDownMustard()[pri:0, instance:cases.DropDownCase@5ba23b66]" name="dropDownMustard" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownMustard -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@5ba23b66]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@5ba23b66]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@5ba23b66]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.DropDownCase@5ba23b66]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="dropDownTomato()[pri:0, instance:cases.DropDownCase@5ba23b66]" name="dropDownTomato" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownTomato -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.DropDownCase@5ba23b66]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.DropDownCase@5ba23b66]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.DropDownCase@5ba23b66]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="dropDownOnion()[pri:0, instance:cases.DropDownCase@5ba23b66]" name="dropDownOnion" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownOnion -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@5ba23b66]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
      </class> <!-- cases.DropDownCase -->
      <class name="cases.TextAreaCase">
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:cases.TextAreaCase@2ff4f00f]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@2ff4f00f]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@2ff4f00f]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@2ff4f00f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="textAreaLongString()[pri:0, instance:cases.TextAreaCase@2ff4f00f]" name="textAreaLongString" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaLongString -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@2ff4f00f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="textAreaWithEnter()[pri:0, instance:cases.TextAreaCase@2ff4f00f]" name="textAreaWithEnter" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaWithEnter -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.TextAreaCase@2ff4f00f]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.TextAreaCase -->
      <class name="cases.RadioButtonCase">
        <test-method status="PASS" signature="beforeSuite(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="beforeSuite" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[linux]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dooper]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="beforeClass" is-config="true" duration-ms="1" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="radioChoiceB()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="radioChoiceB" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceB -->
        <test-method status="FAIL" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="radioChoiceA()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="radioChoiceA" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceA -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="radioDefault()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="radioDefault" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioDefault -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="radioChoiceC()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="radioChoiceC" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceC -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="SKIP" signature="afterSuite()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="afterSuite" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- cases.RadioButtonCase -->
    </test> <!-- dynamic test 2 -->
  </suite> <!-- dynamic suite for linux and firefox (1) -->
  <suite name="dynamic suite for linux and firefox (0)" duration-ms="35454" started-at="2018-07-28T23:46:54Z" finished-at="2018-07-28T23:47:29Z">
    <groups>
    </groups>
    <test name="dynamic test 1" duration-ms="14270" started-at="2018-07-28T23:46:54Z" finished-at="2018-07-28T23:47:08Z">
      <class name="cases.TextFieldCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextFieldCase@2eee9593]" name="beforeClass" is-config="true" duration-ms="3183" started-at="2018-07-28T23:47:03Z" finished-at="2018-07-28T23:47:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@2eee9593]" name="beforeMethod" is-config="true" duration-ms="267" started-at="2018-07-28T23:47:06Z" finished-at="2018-07-28T23:47:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="intentionalFailTextField()[pri:2, instance:cases.TextFieldCase@2eee9593]" name="intentionalFailTextField" duration-ms="186" started-at="2018-07-28T23:47:06Z" finished-at="2018-07-28T23:47:06Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [This should fail] but found [Please fail]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [This should fail] but found [Please fail]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at cases.TextFieldCase.intentionalFailTextField(TextFieldCase.java:31)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailTextField -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@2eee9593]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-28T23:47:06Z" finished-at="2018-07-28T23:47:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@2eee9593]" name="beforeMethod" is-config="true" duration-ms="191" started-at="2018-07-28T23:47:06Z" finished-at="2018-07-28T23:47:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testTextField()[pri:2, instance:cases.TextFieldCase@2eee9593]" name="testTextField" duration-ms="228" started-at="2018-07-28T23:47:07Z" finished-at="2018-07-28T23:47:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTextField -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextFieldCase@2eee9593]" name="afterClass" is-config="true" duration-ms="1328" started-at="2018-07-28T23:47:07Z" finished-at="2018-07-28T23:47:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@2eee9593]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:07Z" finished-at="2018-07-28T23:47:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- cases.TextFieldCase -->
      <class name="cases.CheckBoxCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="beforeClass" is-config="true" duration-ms="3184" started-at="2018-07-28T23:46:54Z" finished-at="2018-07-28T23:46:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:54Z" finished-at="2018-07-28T23:46:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="beforeMethod" is-config="true" duration-ms="168" started-at="2018-07-28T23:46:57Z" finished-at="2018-07-28T23:46:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxAll()[pri:2, instance:cases.CheckBoxCase@3ab39c39]" name="checkBoxAll" duration-ms="950" started-at="2018-07-28T23:46:57Z" finished-at="2018-07-28T23:46:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxAll -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="beforeMethod" is-config="true" duration-ms="119" started-at="2018-07-28T23:46:58Z" finished-at="2018-07-28T23:46:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:58Z" finished-at="2018-07-28T23:46:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkBoxNone()[pri:2, instance:cases.CheckBoxCase@3ab39c39]" name="checkBoxNone" duration-ms="67" started-at="2018-07-28T23:46:58Z" finished-at="2018-07-28T23:46:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxNone -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="beforeMethod" is-config="true" duration-ms="113" started-at="2018-07-28T23:46:58Z" finished-at="2018-07-28T23:46:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:58Z" finished-at="2018-07-28T23:46:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkBoxOneThree()[pri:2, instance:cases.CheckBoxCase@3ab39c39]" name="checkBoxOneThree" duration-ms="655" started-at="2018-07-28T23:46:58Z" finished-at="2018-07-28T23:46:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneThree -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="beforeMethod" is-config="true" duration-ms="127" started-at="2018-07-28T23:46:59Z" finished-at="2018-07-28T23:46:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:59Z" finished-at="2018-07-28T23:46:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkBoxOneTwo()[pri:2, instance:cases.CheckBoxCase@3ab39c39]" name="checkBoxOneTwo" duration-ms="617" started-at="2018-07-28T23:46:59Z" finished-at="2018-07-28T23:47:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneTwo -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:00Z" finished-at="2018-07-28T23:47:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="beforeMethod" is-config="true" duration-ms="114" started-at="2018-07-28T23:47:00Z" finished-at="2018-07-28T23:47:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxTwoThree()[pri:2, instance:cases.CheckBoxCase@3ab39c39]" name="checkBoxTwoThree" duration-ms="681" started-at="2018-07-28T23:47:00Z" finished-at="2018-07-28T23:47:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxTwoThree -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="beforeMethod" is-config="true" duration-ms="112" started-at="2018-07-28T23:47:01Z" finished-at="2018-07-28T23:47:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:01Z" finished-at="2018-07-28T23:47:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="intentionalFailcheckBox()[pri:2, instance:cases.CheckBoxCase@3ab39c39]" name="intentionalFailcheckBox" duration-ms="643" started-at="2018-07-28T23:47:01Z" finished-at="2018-07-28T23:47:01Z">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:86)
at org.junit.Assert.assertTrue(Assert.java:41)
at org.junit.Assert.assertTrue(Assert.java:52)
at cases.CheckBoxCase.intentionalFailcheckBox(CheckBoxCase.java:60)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailcheckBox -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="afterClass" is-config="true" duration-ms="1131" started-at="2018-07-28T23:47:02Z" finished-at="2018-07-28T23:47:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:02Z" finished-at="2018-07-28T23:47:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:08Z" finished-at="2018-07-28T23:47:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- cases.CheckBoxCase -->
    </test> <!-- dynamic test 1 -->
    <test name="dynamic test 2" duration-ms="21179" started-at="2018-07-28T23:47:08Z" finished-at="2018-07-28T23:47:29Z">
      <class name="cases.DropDownCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.DropDownCase@725bef66]" name="beforeClass" is-config="true" duration-ms="3656" started-at="2018-07-28T23:47:16Z" finished-at="2018-07-28T23:47:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@725bef66]" name="beforeMethod" is-config="true" duration-ms="192" started-at="2018-07-28T23:47:20Z" finished-at="2018-07-28T23:47:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownDefault()[pri:0, instance:cases.DropDownCase@725bef66]" name="dropDownDefault" duration-ms="198" started-at="2018-07-28T23:47:20Z" finished-at="2018-07-28T23:47:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownDefault -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@725bef66]" name="beforeMethod" is-config="true" duration-ms="163" started-at="2018-07-28T23:47:20Z" finished-at="2018-07-28T23:47:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@725bef66]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:20Z" finished-at="2018-07-28T23:47:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="dropDownMustard()[pri:0, instance:cases.DropDownCase@725bef66]" name="dropDownMustard" duration-ms="463" started-at="2018-07-28T23:47:20Z" finished-at="2018-07-28T23:47:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownMustard -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@725bef66]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:21Z" finished-at="2018-07-28T23:47:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@725bef66]" name="beforeMethod" is-config="true" duration-ms="190" started-at="2018-07-28T23:47:21Z" finished-at="2018-07-28T23:47:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownOnion()[pri:0, instance:cases.DropDownCase@725bef66]" name="dropDownOnion" duration-ms="489" started-at="2018-07-28T23:47:21Z" finished-at="2018-07-28T23:47:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownOnion -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@725bef66]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-28T23:47:21Z" finished-at="2018-07-28T23:47:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@725bef66]" name="beforeMethod" is-config="true" duration-ms="154" started-at="2018-07-28T23:47:21Z" finished-at="2018-07-28T23:47:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownTomato()[pri:0, instance:cases.DropDownCase@725bef66]" name="dropDownTomato" duration-ms="400" started-at="2018-07-28T23:47:21Z" finished-at="2018-07-28T23:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownTomato -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.DropDownCase@725bef66]" name="afterClass" is-config="true" duration-ms="1409" started-at="2018-07-28T23:47:22Z" finished-at="2018-07-28T23:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@725bef66]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:22Z" finished-at="2018-07-28T23:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- cases.DropDownCase -->
      <class name="cases.TextAreaCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextAreaCase@2aaf7cc2]" name="beforeClass" is-config="true" duration-ms="3108" started-at="2018-07-28T23:47:23Z" finished-at="2018-07-28T23:47:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@2aaf7cc2]" name="beforeMethod" is-config="true" duration-ms="218" started-at="2018-07-28T23:47:26Z" finished-at="2018-07-28T23:47:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textAreaLongString()[pri:0, instance:cases.TextAreaCase@2aaf7cc2]" name="textAreaLongString" duration-ms="529" started-at="2018-07-28T23:47:27Z" finished-at="2018-07-28T23:47:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaLongString -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@2aaf7cc2]" name="afterMethod" is-config="true" duration-ms="2" started-at="2018-07-28T23:47:27Z" finished-at="2018-07-28T23:47:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@2aaf7cc2]" name="beforeMethod" is-config="true" duration-ms="282" started-at="2018-07-28T23:47:27Z" finished-at="2018-07-28T23:47:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textAreaWithEnter()[pri:0, instance:cases.TextAreaCase@2aaf7cc2]" name="textAreaWithEnter" duration-ms="480" started-at="2018-07-28T23:47:27Z" finished-at="2018-07-28T23:47:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaWithEnter -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextAreaCase@2aaf7cc2]" name="afterClass" is-config="true" duration-ms="1391" started-at="2018-07-28T23:47:28Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@2aaf7cc2]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:28Z" finished-at="2018-07-28T23:47:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- cases.TextAreaCase -->
      <class name="cases.RadioButtonCase">
        <test-method status="PASS" signature="beforeSuite(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="beforeSuite" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:54Z" finished-at="2018-07-28T23:46:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[linux]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[127.0.0.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:08Z" finished-at="2018-07-28T23:47:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="beforeClass" is-config="true" duration-ms="3175" started-at="2018-07-28T23:47:08Z" finished-at="2018-07-28T23:47:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="beforeMethod" is-config="true" duration-ms="148" started-at="2018-07-28T23:47:11Z" finished-at="2018-07-28T23:47:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceA()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="radioChoiceA" duration-ms="421" started-at="2018-07-28T23:47:11Z" finished-at="2018-07-28T23:47:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceA -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="beforeMethod" is-config="true" duration-ms="154" started-at="2018-07-28T23:47:12Z" finished-at="2018-07-28T23:47:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:12Z" finished-at="2018-07-28T23:47:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="radioChoiceB()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="radioChoiceB" duration-ms="412" started-at="2018-07-28T23:47:12Z" finished-at="2018-07-28T23:47:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceB -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:12Z" finished-at="2018-07-28T23:47:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="beforeMethod" is-config="true" duration-ms="593" started-at="2018-07-28T23:47:12Z" finished-at="2018-07-28T23:47:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceC()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="radioChoiceC" duration-ms="901" started-at="2018-07-28T23:47:13Z" finished-at="2018-07-28T23:47:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceC -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:14Z" finished-at="2018-07-28T23:47:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="beforeMethod" is-config="true" duration-ms="989" started-at="2018-07-28T23:47:14Z" finished-at="2018-07-28T23:47:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioDefault()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="radioDefault" duration-ms="62" started-at="2018-07-28T23:47:15Z" finished-at="2018-07-28T23:47:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioDefault -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:15Z" finished-at="2018-07-28T23:47:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="afterClass" is-config="true" duration-ms="992" started-at="2018-07-28T23:47:15Z" finished-at="2018-07-28T23:47:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="afterTest" is-config="true" duration-ms="1" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="afterSuite" is-config="true" duration-ms="1" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- cases.RadioButtonCase -->
    </test> <!-- dynamic test 2 -->
  </suite> <!-- dynamic suite for linux and firefox (0) -->
  <suite name="dynamic suite for linux and chrome" duration-ms="15428" started-at="2018-07-28T23:45:50Z" finished-at="2018-07-28T23:46:05Z">
    <groups>
    </groups>
    <test name="dynamic test 1" duration-ms="6663" started-at="2018-07-28T23:45:50Z" finished-at="2018-07-28T23:45:56Z">
      <class name="cases.TextFieldCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextFieldCase@4f4a7090]" name="beforeClass" is-config="true" duration-ms="1531" started-at="2018-07-28T23:45:54Z" finished-at="2018-07-28T23:45:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@4f4a7090]" name="beforeMethod" is-config="true" duration-ms="131" started-at="2018-07-28T23:45:55Z" finished-at="2018-07-28T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="intentionalFailTextField()[pri:2, instance:cases.TextFieldCase@4f4a7090]" name="intentionalFailTextField" duration-ms="240" started-at="2018-07-28T23:45:56Z" finished-at="2018-07-28T23:45:56Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [This should fail] but found [Please fail]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [This should fail] but found [Please fail]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at cases.TextFieldCase.intentionalFailTextField(TextFieldCase.java:31)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailTextField -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@4f4a7090]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:45:56Z" finished-at="2018-07-28T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@4f4a7090]" name="beforeMethod" is-config="true" duration-ms="99" started-at="2018-07-28T23:45:56Z" finished-at="2018-07-28T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testTextField()[pri:2, instance:cases.TextFieldCase@4f4a7090]" name="testTextField" duration-ms="215" started-at="2018-07-28T23:45:56Z" finished-at="2018-07-28T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTextField -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@4f4a7090]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:45:56Z" finished-at="2018-07-28T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextFieldCase@4f4a7090]" name="afterClass" is-config="true" duration-ms="68" started-at="2018-07-28T23:45:56Z" finished-at="2018-07-28T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.TextFieldCase -->
      <class name="cases.CheckBoxCase">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-28T23:45:50Z" finished-at="2018-07-28T23:45:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="beforeClass" is-config="true" duration-ms="2095" started-at="2018-07-28T23:45:50Z" finished-at="2018-07-28T23:45:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="beforeMethod" is-config="true" duration-ms="150" started-at="2018-07-28T23:45:52Z" finished-at="2018-07-28T23:45:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxAll()[pri:2, instance:cases.CheckBoxCase@52d455b8]" name="checkBoxAll" duration-ms="339" started-at="2018-07-28T23:45:52Z" finished-at="2018-07-28T23:45:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxAll -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="beforeMethod" is-config="true" duration-ms="98" started-at="2018-07-28T23:45:52Z" finished-at="2018-07-28T23:45:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:45:52Z" finished-at="2018-07-28T23:45:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkBoxNone()[pri:2, instance:cases.CheckBoxCase@52d455b8]" name="checkBoxNone" duration-ms="113" started-at="2018-07-28T23:45:52Z" finished-at="2018-07-28T23:45:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxNone -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-28T23:45:52Z" finished-at="2018-07-28T23:45:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="beforeMethod" is-config="true" duration-ms="95" started-at="2018-07-28T23:45:52Z" finished-at="2018-07-28T23:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxOneThree()[pri:2, instance:cases.CheckBoxCase@52d455b8]" name="checkBoxOneThree" duration-ms="235" started-at="2018-07-28T23:45:53Z" finished-at="2018-07-28T23:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneThree -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:45:53Z" finished-at="2018-07-28T23:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="beforeMethod" is-config="true" duration-ms="95" started-at="2018-07-28T23:45:53Z" finished-at="2018-07-28T23:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxOneTwo()[pri:2, instance:cases.CheckBoxCase@52d455b8]" name="checkBoxOneTwo" duration-ms="227" started-at="2018-07-28T23:45:53Z" finished-at="2018-07-28T23:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneTwo -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:45:53Z" finished-at="2018-07-28T23:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="beforeMethod" is-config="true" duration-ms="93" started-at="2018-07-28T23:45:53Z" finished-at="2018-07-28T23:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxTwoThree()[pri:2, instance:cases.CheckBoxCase@52d455b8]" name="checkBoxTwoThree" duration-ms="235" started-at="2018-07-28T23:45:53Z" finished-at="2018-07-28T23:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxTwoThree -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:45:53Z" finished-at="2018-07-28T23:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="beforeMethod" is-config="true" duration-ms="96" started-at="2018-07-28T23:45:53Z" finished-at="2018-07-28T23:45:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="intentionalFailcheckBox()[pri:2, instance:cases.CheckBoxCase@52d455b8]" name="intentionalFailcheckBox" duration-ms="228" started-at="2018-07-28T23:45:54Z" finished-at="2018-07-28T23:45:54Z">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:86)
at org.junit.Assert.assertTrue(Assert.java:41)
at org.junit.Assert.assertTrue(Assert.java:52)
at cases.CheckBoxCase.intentionalFailcheckBox(CheckBoxCase.java:60)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailcheckBox -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-28T23:45:54Z" finished-at="2018-07-28T23:45:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="afterClass" is-config="true" duration-ms="76" started-at="2018-07-28T23:45:54Z" finished-at="2018-07-28T23:45:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="afterTest" is-config="true" duration-ms="1" started-at="2018-07-28T23:45:56Z" finished-at="2018-07-28T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- cases.CheckBoxCase -->
    </test> <!-- dynamic test 1 -->
    <test name="dynamic test 2" duration-ms="8748" started-at="2018-07-28T23:45:56Z" finished-at="2018-07-28T23:46:05Z">
      <class name="cases.DropDownCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.DropDownCase@75412c2f]" name="beforeClass" is-config="true" duration-ms="1747" started-at="2018-07-28T23:45:59Z" finished-at="2018-07-28T23:46:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@75412c2f]" name="beforeMethod" is-config="true" duration-ms="131" started-at="2018-07-28T23:46:01Z" finished-at="2018-07-28T23:46:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownDefault()[pri:0, instance:cases.DropDownCase@75412c2f]" name="dropDownDefault" duration-ms="143" started-at="2018-07-28T23:46:01Z" finished-at="2018-07-28T23:46:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownDefault -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@75412c2f]" name="beforeMethod" is-config="true" duration-ms="112" started-at="2018-07-28T23:46:01Z" finished-at="2018-07-28T23:46:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@75412c2f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:01Z" finished-at="2018-07-28T23:46:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="dropDownMustard()[pri:0, instance:cases.DropDownCase@75412c2f]" name="dropDownMustard" duration-ms="187" started-at="2018-07-28T23:46:01Z" finished-at="2018-07-28T23:46:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownMustard -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@75412c2f]" name="beforeMethod" is-config="true" duration-ms="116" started-at="2018-07-28T23:46:01Z" finished-at="2018-07-28T23:46:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@75412c2f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:01Z" finished-at="2018-07-28T23:46:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="dropDownOnion()[pri:0, instance:cases.DropDownCase@75412c2f]" name="dropDownOnion" duration-ms="197" started-at="2018-07-28T23:46:01Z" finished-at="2018-07-28T23:46:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownOnion -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@75412c2f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:02Z" finished-at="2018-07-28T23:46:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@75412c2f]" name="beforeMethod" is-config="true" duration-ms="94" started-at="2018-07-28T23:46:02Z" finished-at="2018-07-28T23:46:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownTomato()[pri:0, instance:cases.DropDownCase@75412c2f]" name="dropDownTomato" duration-ms="196" started-at="2018-07-28T23:46:02Z" finished-at="2018-07-28T23:46:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownTomato -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@75412c2f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:02Z" finished-at="2018-07-28T23:46:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.DropDownCase@75412c2f]" name="afterClass" is-config="true" duration-ms="159" started-at="2018-07-28T23:46:02Z" finished-at="2018-07-28T23:46:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.DropDownCase -->
      <class name="cases.TextAreaCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextAreaCase@282ba1e]" name="beforeClass" is-config="true" duration-ms="1420" started-at="2018-07-28T23:46:02Z" finished-at="2018-07-28T23:46:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@282ba1e]" name="beforeMethod" is-config="true" duration-ms="137" started-at="2018-07-28T23:46:04Z" finished-at="2018-07-28T23:46:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textAreaLongString()[pri:0, instance:cases.TextAreaCase@282ba1e]" name="textAreaLongString" duration-ms="517" started-at="2018-07-28T23:46:04Z" finished-at="2018-07-28T23:46:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaLongString -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@282ba1e]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-28T23:46:04Z" finished-at="2018-07-28T23:46:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@282ba1e]" name="beforeMethod" is-config="true" duration-ms="96" started-at="2018-07-28T23:46:04Z" finished-at="2018-07-28T23:46:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textAreaWithEnter()[pri:0, instance:cases.TextAreaCase@282ba1e]" name="textAreaWithEnter" duration-ms="603" started-at="2018-07-28T23:46:04Z" finished-at="2018-07-28T23:46:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaWithEnter -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@282ba1e]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-28T23:46:05Z" finished-at="2018-07-28T23:46:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextAreaCase@282ba1e]" name="afterClass" is-config="true" duration-ms="159" started-at="2018-07-28T23:46:05Z" finished-at="2018-07-28T23:46:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.TextAreaCase -->
      <class name="cases.RadioButtonCase">
        <test-method status="PASS" signature="beforeSuite(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="beforeSuite" is-config="true" duration-ms="40" started-at="2018-07-28T23:45:50Z" finished-at="2018-07-28T23:45:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[linux]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[localhost]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="beforeTest" is-config="true" duration-ms="1" started-at="2018-07-28T23:45:56Z" finished-at="2018-07-28T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="beforeClass" is-config="true" duration-ms="1495" started-at="2018-07-28T23:45:56Z" finished-at="2018-07-28T23:45:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="beforeMethod" is-config="true" duration-ms="133" started-at="2018-07-28T23:45:58Z" finished-at="2018-07-28T23:45:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceA()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="radioChoiceA" duration-ms="194" started-at="2018-07-28T23:45:58Z" finished-at="2018-07-28T23:45:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceA -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="beforeMethod" is-config="true" duration-ms="96" started-at="2018-07-28T23:45:58Z" finished-at="2018-07-28T23:45:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:45:58Z" finished-at="2018-07-28T23:45:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="radioChoiceB()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="radioChoiceB" duration-ms="164" started-at="2018-07-28T23:45:58Z" finished-at="2018-07-28T23:45:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceB -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="beforeMethod" is-config="true" duration-ms="96" started-at="2018-07-28T23:45:58Z" finished-at="2018-07-28T23:45:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:45:58Z" finished-at="2018-07-28T23:45:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="radioChoiceC()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="radioChoiceC" duration-ms="181" started-at="2018-07-28T23:45:59Z" finished-at="2018-07-28T23:45:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceC -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="beforeMethod" is-config="true" duration-ms="102" started-at="2018-07-28T23:45:59Z" finished-at="2018-07-28T23:45:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:45:59Z" finished-at="2018-07-28T23:45:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="radioDefault()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="radioDefault" duration-ms="106" started-at="2018-07-28T23:45:59Z" finished-at="2018-07-28T23:45:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioDefault -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="afterClass" is-config="true" duration-ms="158" started-at="2018-07-28T23:45:59Z" finished-at="2018-07-28T23:45:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:45:59Z" finished-at="2018-07-28T23:45:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:05Z" finished-at="2018-07-28T23:46:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="afterSuite" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:05Z" finished-at="2018-07-28T23:46:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- cases.RadioButtonCase -->
    </test> <!-- dynamic test 2 -->
  </suite> <!-- dynamic suite for linux and chrome -->
  <suite name="dynamic suite for linux and firefox (2)" duration-ms="15" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
    <groups>
    </groups>
    <test name="dynamic test 1" duration-ms="3" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
      <class name="cases.TextFieldCase">
        <test-method status="SKIP" signature="testTextField()[pri:2, instance:cases.TextFieldCase@4c203ea1]" name="testTextField" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTextField -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@4c203ea1]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@4c203ea1]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:cases.TextFieldCase@4c203ea1]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@4c203ea1]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.TextFieldCase@4c203ea1]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="intentionalFailTextField()[pri:2, instance:cases.TextFieldCase@4c203ea1]" name="intentionalFailTextField" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailTextField -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@4c203ea1]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
      </class> <!-- cases.TextFieldCase -->
      <class name="cases.CheckBoxCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="checkBoxNone()[pri:2, instance:cases.CheckBoxCase@7c75222b]" name="checkBoxNone" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxNone -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="checkBoxAll()[pri:2, instance:cases.CheckBoxCase@7c75222b]" name="checkBoxAll" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxAll -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="checkBoxOneTwo()[pri:2, instance:cases.CheckBoxCase@7c75222b]" name="checkBoxOneTwo" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneTwo -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="checkBoxOneThree()[pri:2, instance:cases.CheckBoxCase@7c75222b]" name="checkBoxOneThree" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneThree -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="checkBoxTwoThree()[pri:2, instance:cases.CheckBoxCase@7c75222b]" name="checkBoxTwoThree" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxTwoThree -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="intentionalFailcheckBox()[pri:2, instance:cases.CheckBoxCase@7c75222b]" name="intentionalFailcheckBox" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailcheckBox -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- cases.CheckBoxCase -->
    </test> <!-- dynamic test 1 -->
    <test name="dynamic test 2" duration-ms="5" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
      <class name="cases.DropDownCase">
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:cases.DropDownCase@43a25848]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.DropDownCase@43a25848]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="dropDownMustard()[pri:0, instance:cases.DropDownCase@43a25848]" name="dropDownMustard" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownMustard -->
        <test-method status="SKIP" signature="dropDownOnion()[pri:0, instance:cases.DropDownCase@43a25848]" name="dropDownOnion" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownOnion -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.DropDownCase@43a25848]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="dropDownDefault()[pri:0, instance:cases.DropDownCase@43a25848]" name="dropDownDefault" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownDefault -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@43a25848]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@43a25848]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.DropDownCase@43a25848]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@43a25848]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.DropDownCase@43a25848]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@43a25848]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.DropDownCase@43a25848]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="dropDownTomato()[pri:0, instance:cases.DropDownCase@43a25848]" name="dropDownTomato" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownTomato -->
      </class> <!-- cases.DropDownCase -->
      <class name="cases.TextAreaCase">
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@3ac3fd8b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@3ac3fd8b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@3ac3fd8b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="textAreaLongString()[pri:0, instance:cases.TextAreaCase@3ac3fd8b]" name="textAreaLongString" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaLongString -->
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:cases.TextAreaCase@3ac3fd8b]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@3ac3fd8b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="textAreaWithEnter()[pri:0, instance:cases.TextAreaCase@3ac3fd8b]" name="textAreaWithEnter" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaWithEnter -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.TextAreaCase@3ac3fd8b]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.TextAreaCase -->
      <class name="cases.RadioButtonCase">
        <test-method status="PASS" signature="beforeSuite(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="beforeSuite" is-config="true" duration-ms="1" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[linux]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[localhost]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[vaya con dios]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="radioChoiceA()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="radioChoiceA" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceA -->
        <test-method status="SKIP" signature="radioChoiceB()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="radioChoiceB" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceB -->
        <test-method status="SKIP" signature="radioDefault()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="radioDefault" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioDefault -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="radioChoiceC()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="radioChoiceC" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeMethod(PapaBless.java:341)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceC -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="SKIP" signature="afterSuite()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="afterSuite" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- cases.RadioButtonCase -->
    </test> <!-- dynamic test 2 -->
  </suite> <!-- dynamic suite for linux and firefox (2) -->
  <suite name="dynamic suite for linux and pooper" duration-ms="33353" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:48:03Z">
    <groups>
    </groups>
    <test name="dynamic test 1" duration-ms="14429" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:44Z">
      <class name="cases.TextFieldCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextFieldCase@2c8d66b2]" name="beforeClass" is-config="true" duration-ms="3094" started-at="2018-07-28T23:47:38Z" finished-at="2018-07-28T23:47:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@2c8d66b2]" name="beforeMethod" is-config="true" duration-ms="180" started-at="2018-07-28T23:47:41Z" finished-at="2018-07-28T23:47:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="intentionalFailTextField()[pri:2, instance:cases.TextFieldCase@2c8d66b2]" name="intentionalFailTextField" duration-ms="237" started-at="2018-07-28T23:47:42Z" finished-at="2018-07-28T23:47:42Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [This should fail] but found [Please fail]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [This should fail] but found [Please fail]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at cases.TextFieldCase.intentionalFailTextField(TextFieldCase.java:31)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailTextField -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@2c8d66b2]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-28T23:47:42Z" finished-at="2018-07-28T23:47:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@2c8d66b2]" name="beforeMethod" is-config="true" duration-ms="227" started-at="2018-07-28T23:47:42Z" finished-at="2018-07-28T23:47:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testTextField()[pri:2, instance:cases.TextFieldCase@2c8d66b2]" name="testTextField" duration-ms="324" started-at="2018-07-28T23:47:42Z" finished-at="2018-07-28T23:47:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTextField -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@2c8d66b2]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:42Z" finished-at="2018-07-28T23:47:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextFieldCase@2c8d66b2]" name="afterClass" is-config="true" duration-ms="1314" started-at="2018-07-28T23:47:43Z" finished-at="2018-07-28T23:47:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.TextFieldCase -->
      <class name="cases.CheckBoxCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="beforeClass" is-config="true" duration-ms="3286" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="beforeMethod" is-config="true" duration-ms="227" started-at="2018-07-28T23:47:33Z" finished-at="2018-07-28T23:47:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxAll()[pri:2, instance:cases.CheckBoxCase@35bbe5e8]" name="checkBoxAll" duration-ms="906" started-at="2018-07-28T23:47:33Z" finished-at="2018-07-28T23:47:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxAll -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:34Z" finished-at="2018-07-28T23:47:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="beforeMethod" is-config="true" duration-ms="113" started-at="2018-07-28T23:47:34Z" finished-at="2018-07-28T23:47:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxNone()[pri:2, instance:cases.CheckBoxCase@35bbe5e8]" name="checkBoxNone" duration-ms="72" started-at="2018-07-28T23:47:34Z" finished-at="2018-07-28T23:47:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxNone -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:34Z" finished-at="2018-07-28T23:47:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="beforeMethod" is-config="true" duration-ms="143" started-at="2018-07-28T23:47:34Z" finished-at="2018-07-28T23:47:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxOneThree()[pri:2, instance:cases.CheckBoxCase@35bbe5e8]" name="checkBoxOneThree" duration-ms="638" started-at="2018-07-28T23:47:34Z" finished-at="2018-07-28T23:47:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneThree -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-28T23:47:35Z" finished-at="2018-07-28T23:47:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="beforeMethod" is-config="true" duration-ms="129" started-at="2018-07-28T23:47:35Z" finished-at="2018-07-28T23:47:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxOneTwo()[pri:2, instance:cases.CheckBoxCase@35bbe5e8]" name="checkBoxOneTwo" duration-ms="613" started-at="2018-07-28T23:47:35Z" finished-at="2018-07-28T23:47:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneTwo -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="beforeMethod" is-config="true" duration-ms="112" started-at="2018-07-28T23:47:36Z" finished-at="2018-07-28T23:47:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:36Z" finished-at="2018-07-28T23:47:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkBoxTwoThree()[pri:2, instance:cases.CheckBoxCase@35bbe5e8]" name="checkBoxTwoThree" duration-ms="652" started-at="2018-07-28T23:47:36Z" finished-at="2018-07-28T23:47:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxTwoThree -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="beforeMethod" is-config="true" duration-ms="124" started-at="2018-07-28T23:47:36Z" finished-at="2018-07-28T23:47:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:36Z" finished-at="2018-07-28T23:47:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="intentionalFailcheckBox()[pri:2, instance:cases.CheckBoxCase@35bbe5e8]" name="intentionalFailcheckBox" duration-ms="623" started-at="2018-07-28T23:47:36Z" finished-at="2018-07-28T23:47:37Z">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:86)
at org.junit.Assert.assertTrue(Assert.java:41)
at org.junit.Assert.assertTrue(Assert.java:52)
at cases.CheckBoxCase.intentionalFailcheckBox(CheckBoxCase.java:60)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailcheckBox -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="afterClass" is-config="true" duration-ms="1209" started-at="2018-07-28T23:47:37Z" finished-at="2018-07-28T23:47:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:37Z" finished-at="2018-07-28T23:47:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:44Z" finished-at="2018-07-28T23:47:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- cases.CheckBoxCase -->
    </test> <!-- dynamic test 1 -->
    <test name="dynamic test 2" duration-ms="18922" started-at="2018-07-28T23:47:44Z" finished-at="2018-07-28T23:48:03Z">
      <class name="cases.DropDownCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.DropDownCase@2f7c7260]" name="beforeClass" is-config="true" duration-ms="3372" started-at="2018-07-28T23:47:50Z" finished-at="2018-07-28T23:47:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@2f7c7260]" name="beforeMethod" is-config="true" duration-ms="176" started-at="2018-07-28T23:47:53Z" finished-at="2018-07-28T23:47:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownDefault()[pri:0, instance:cases.DropDownCase@2f7c7260]" name="dropDownDefault" duration-ms="197" started-at="2018-07-28T23:47:54Z" finished-at="2018-07-28T23:47:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownDefault -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@2f7c7260]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:54Z" finished-at="2018-07-28T23:47:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@2f7c7260]" name="beforeMethod" is-config="true" duration-ms="184" started-at="2018-07-28T23:47:54Z" finished-at="2018-07-28T23:47:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownMustard()[pri:0, instance:cases.DropDownCase@2f7c7260]" name="dropDownMustard" duration-ms="292" started-at="2018-07-28T23:47:54Z" finished-at="2018-07-28T23:47:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownMustard -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@2f7c7260]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:54Z" finished-at="2018-07-28T23:47:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@2f7c7260]" name="beforeMethod" is-config="true" duration-ms="143" started-at="2018-07-28T23:47:54Z" finished-at="2018-07-28T23:47:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownOnion()[pri:0, instance:cases.DropDownCase@2f7c7260]" name="dropDownOnion" duration-ms="430" started-at="2018-07-28T23:47:54Z" finished-at="2018-07-28T23:47:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownOnion -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@2f7c7260]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:55Z" finished-at="2018-07-28T23:47:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@2f7c7260]" name="beforeMethod" is-config="true" duration-ms="143" started-at="2018-07-28T23:47:55Z" finished-at="2018-07-28T23:47:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownTomato()[pri:0, instance:cases.DropDownCase@2f7c7260]" name="dropDownTomato" duration-ms="416" started-at="2018-07-28T23:47:55Z" finished-at="2018-07-28T23:47:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownTomato -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@2f7c7260]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:55Z" finished-at="2018-07-28T23:47:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.DropDownCase@2f7c7260]" name="afterClass" is-config="true" duration-ms="1586" started-at="2018-07-28T23:47:55Z" finished-at="2018-07-28T23:47:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.DropDownCase -->
      <class name="cases.TextAreaCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextAreaCase@2d209079]" name="beforeClass" is-config="true" duration-ms="3086" started-at="2018-07-28T23:47:57Z" finished-at="2018-07-28T23:48:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@2d209079]" name="beforeMethod" is-config="true" duration-ms="202" started-at="2018-07-28T23:48:00Z" finished-at="2018-07-28T23:48:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textAreaLongString()[pri:0, instance:cases.TextAreaCase@2d209079]" name="textAreaLongString" duration-ms="369" started-at="2018-07-28T23:48:00Z" finished-at="2018-07-28T23:48:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaLongString -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@2d209079]" name="beforeMethod" is-config="true" duration-ms="159" started-at="2018-07-28T23:48:01Z" finished-at="2018-07-28T23:48:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@2d209079]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:01Z" finished-at="2018-07-28T23:48:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="textAreaWithEnter()[pri:0, instance:cases.TextAreaCase@2d209079]" name="textAreaWithEnter" duration-ms="501" started-at="2018-07-28T23:48:01Z" finished-at="2018-07-28T23:48:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaWithEnter -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@2d209079]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:01Z" finished-at="2018-07-28T23:48:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextAreaCase@2d209079]" name="afterClass" is-config="true" duration-ms="1488" started-at="2018-07-28T23:48:01Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.TextAreaCase -->
      <class name="cases.RadioButtonCase">
        <test-method status="PASS" signature="beforeSuite(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="beforeSuite" is-config="true" duration-ms="1" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[linux]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[localhost]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[pooper]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="beforeClass" is-config="true" duration-ms="3292" started-at="2018-07-28T23:47:44Z" finished-at="2018-07-28T23:47:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:44Z" finished-at="2018-07-28T23:47:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="beforeMethod" is-config="true" duration-ms="187" started-at="2018-07-28T23:47:47Z" finished-at="2018-07-28T23:47:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceA()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="radioChoiceA" duration-ms="395" started-at="2018-07-28T23:47:47Z" finished-at="2018-07-28T23:47:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceA -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="beforeMethod" is-config="true" duration-ms="148" started-at="2018-07-28T23:47:48Z" finished-at="2018-07-28T23:47:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:48Z" finished-at="2018-07-28T23:47:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="radioChoiceB()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="radioChoiceB" duration-ms="374" started-at="2018-07-28T23:47:48Z" finished-at="2018-07-28T23:47:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceB -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:48Z" finished-at="2018-07-28T23:47:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="beforeMethod" is-config="true" duration-ms="115" started-at="2018-07-28T23:47:48Z" finished-at="2018-07-28T23:47:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceC()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="radioChoiceC" duration-ms="396" started-at="2018-07-28T23:47:48Z" finished-at="2018-07-28T23:47:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceC -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="beforeMethod" is-config="true" duration-ms="118" started-at="2018-07-28T23:47:49Z" finished-at="2018-07-28T23:47:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:49Z" finished-at="2018-07-28T23:47:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="radioDefault()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="radioDefault" duration-ms="58" started-at="2018-07-28T23:47:49Z" finished-at="2018-07-28T23:47:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioDefault -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="afterClass" is-config="true" duration-ms="1089" started-at="2018-07-28T23:47:49Z" finished-at="2018-07-28T23:47:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:49Z" finished-at="2018-07-28T23:47:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="afterSuite" is-config="true" duration-ms="0" started-at="2018-07-28T23:48:03Z" finished-at="2018-07-28T23:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- cases.RadioButtonCase -->
    </test> <!-- dynamic test 2 -->
  </suite> <!-- dynamic suite for linux and pooper -->
  <suite name="dynamic suite for linux and chrome (0)" duration-ms="14844" started-at="2018-07-28T23:46:39Z" finished-at="2018-07-28T23:46:54Z">
    <groups>
    </groups>
    <test name="dynamic test 1" duration-ms="6487" started-at="2018-07-28T23:46:39Z" finished-at="2018-07-28T23:46:45Z">
      <class name="cases.TextFieldCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextFieldCase@63d4e2ba]" name="beforeClass" is-config="true" duration-ms="1627" started-at="2018-07-28T23:46:43Z" finished-at="2018-07-28T23:46:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@63d4e2ba]" name="beforeMethod" is-config="true" duration-ms="131" started-at="2018-07-28T23:46:45Z" finished-at="2018-07-28T23:46:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="intentionalFailTextField()[pri:2, instance:cases.TextFieldCase@63d4e2ba]" name="intentionalFailTextField" duration-ms="235" started-at="2018-07-28T23:46:45Z" finished-at="2018-07-28T23:46:45Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [This should fail] but found [Please fail]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [This should fail] but found [Please fail]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at cases.TextFieldCase.intentionalFailTextField(TextFieldCase.java:31)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailTextField -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@63d4e2ba]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:45Z" finished-at="2018-07-28T23:46:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@63d4e2ba]" name="beforeMethod" is-config="true" duration-ms="96" started-at="2018-07-28T23:46:45Z" finished-at="2018-07-28T23:46:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testTextField()[pri:2, instance:cases.TextFieldCase@63d4e2ba]" name="testTextField" duration-ms="265" started-at="2018-07-28T23:46:45Z" finished-at="2018-07-28T23:46:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTextField -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@63d4e2ba]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:45Z" finished-at="2018-07-28T23:46:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextFieldCase@63d4e2ba]" name="afterClass" is-config="true" duration-ms="158" started-at="2018-07-28T23:46:45Z" finished-at="2018-07-28T23:46:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.TextFieldCase -->
      <class name="cases.CheckBoxCase">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="beforeTest" is-config="true" duration-ms="1" started-at="2018-07-28T23:46:39Z" finished-at="2018-07-28T23:46:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="beforeClass" is-config="true" duration-ms="1705" started-at="2018-07-28T23:46:39Z" finished-at="2018-07-28T23:46:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="beforeMethod" is-config="true" duration-ms="135" started-at="2018-07-28T23:46:41Z" finished-at="2018-07-28T23:46:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxAll()[pri:2, instance:cases.CheckBoxCase@233c0b17]" name="checkBoxAll" duration-ms="312" started-at="2018-07-28T23:46:41Z" finished-at="2018-07-28T23:46:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxAll -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="beforeMethod" is-config="true" duration-ms="94" started-at="2018-07-28T23:46:41Z" finished-at="2018-07-28T23:46:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:41Z" finished-at="2018-07-28T23:46:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkBoxNone()[pri:2, instance:cases.CheckBoxCase@233c0b17]" name="checkBoxNone" duration-ms="106" started-at="2018-07-28T23:46:41Z" finished-at="2018-07-28T23:46:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxNone -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-28T23:46:41Z" finished-at="2018-07-28T23:46:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="beforeMethod" is-config="true" duration-ms="90" started-at="2018-07-28T23:46:41Z" finished-at="2018-07-28T23:46:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxOneThree()[pri:2, instance:cases.CheckBoxCase@233c0b17]" name="checkBoxOneThree" duration-ms="248" started-at="2018-07-28T23:46:41Z" finished-at="2018-07-28T23:46:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneThree -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="beforeMethod" is-config="true" duration-ms="89" started-at="2018-07-28T23:46:42Z" finished-at="2018-07-28T23:46:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:42Z" finished-at="2018-07-28T23:46:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkBoxOneTwo()[pri:2, instance:cases.CheckBoxCase@233c0b17]" name="checkBoxOneTwo" duration-ms="224" started-at="2018-07-28T23:46:42Z" finished-at="2018-07-28T23:46:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneTwo -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-28T23:46:42Z" finished-at="2018-07-28T23:46:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="beforeMethod" is-config="true" duration-ms="97" started-at="2018-07-28T23:46:42Z" finished-at="2018-07-28T23:46:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxTwoThree()[pri:2, instance:cases.CheckBoxCase@233c0b17]" name="checkBoxTwoThree" duration-ms="229" started-at="2018-07-28T23:46:42Z" finished-at="2018-07-28T23:46:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxTwoThree -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-28T23:46:42Z" finished-at="2018-07-28T23:46:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="beforeMethod" is-config="true" duration-ms="93" started-at="2018-07-28T23:46:42Z" finished-at="2018-07-28T23:46:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="intentionalFailcheckBox()[pri:2, instance:cases.CheckBoxCase@233c0b17]" name="intentionalFailcheckBox" duration-ms="220" started-at="2018-07-28T23:46:42Z" finished-at="2018-07-28T23:46:43Z">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:86)
at org.junit.Assert.assertTrue(Assert.java:41)
at org.junit.Assert.assertTrue(Assert.java:52)
at cases.CheckBoxCase.intentionalFailcheckBox(CheckBoxCase.java:60)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailcheckBox -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="afterClass" is-config="true" duration-ms="159" started-at="2018-07-28T23:46:43Z" finished-at="2018-07-28T23:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:43Z" finished-at="2018-07-28T23:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="afterTest" is-config="true" duration-ms="1" started-at="2018-07-28T23:46:45Z" finished-at="2018-07-28T23:46:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- cases.CheckBoxCase -->
    </test> <!-- dynamic test 1 -->
    <test name="dynamic test 2" duration-ms="8353" started-at="2018-07-28T23:46:45Z" finished-at="2018-07-28T23:46:54Z">
      <class name="cases.DropDownCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.DropDownCase@17d99928]" name="beforeClass" is-config="true" duration-ms="1490" started-at="2018-07-28T23:46:48Z" finished-at="2018-07-28T23:46:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@17d99928]" name="beforeMethod" is-config="true" duration-ms="130" started-at="2018-07-28T23:46:50Z" finished-at="2018-07-28T23:46:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownDefault()[pri:0, instance:cases.DropDownCase@17d99928]" name="dropDownDefault" duration-ms="135" started-at="2018-07-28T23:46:50Z" finished-at="2018-07-28T23:46:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownDefault -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@17d99928]" name="beforeMethod" is-config="true" duration-ms="100" started-at="2018-07-28T23:46:50Z" finished-at="2018-07-28T23:46:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@17d99928]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:50Z" finished-at="2018-07-28T23:46:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="dropDownMustard()[pri:0, instance:cases.DropDownCase@17d99928]" name="dropDownMustard" duration-ms="180" started-at="2018-07-28T23:46:50Z" finished-at="2018-07-28T23:46:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownMustard -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@17d99928]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:50Z" finished-at="2018-07-28T23:46:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@17d99928]" name="beforeMethod" is-config="true" duration-ms="110" started-at="2018-07-28T23:46:50Z" finished-at="2018-07-28T23:46:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownOnion()[pri:0, instance:cases.DropDownCase@17d99928]" name="dropDownOnion" duration-ms="189" started-at="2018-07-28T23:46:50Z" finished-at="2018-07-28T23:46:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownOnion -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@17d99928]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:50Z" finished-at="2018-07-28T23:46:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@17d99928]" name="beforeMethod" is-config="true" duration-ms="93" started-at="2018-07-28T23:46:50Z" finished-at="2018-07-28T23:46:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownTomato()[pri:0, instance:cases.DropDownCase@17d99928]" name="dropDownTomato" duration-ms="192" started-at="2018-07-28T23:46:51Z" finished-at="2018-07-28T23:46:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownTomato -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@17d99928]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:51Z" finished-at="2018-07-28T23:46:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.DropDownCase@17d99928]" name="afterClass" is-config="true" duration-ms="158" started-at="2018-07-28T23:46:51Z" finished-at="2018-07-28T23:46:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.DropDownCase -->
      <class name="cases.TextAreaCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextAreaCase@3834d63f]" name="beforeClass" is-config="true" duration-ms="1472" started-at="2018-07-28T23:46:51Z" finished-at="2018-07-28T23:46:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@3834d63f]" name="beforeMethod" is-config="true" duration-ms="129" started-at="2018-07-28T23:46:52Z" finished-at="2018-07-28T23:46:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textAreaLongString()[pri:0, instance:cases.TextAreaCase@3834d63f]" name="textAreaLongString" duration-ms="521" started-at="2018-07-28T23:46:52Z" finished-at="2018-07-28T23:46:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaLongString -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@3834d63f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:53Z" finished-at="2018-07-28T23:46:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@3834d63f]" name="beforeMethod" is-config="true" duration-ms="121" started-at="2018-07-28T23:46:53Z" finished-at="2018-07-28T23:46:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textAreaWithEnter()[pri:0, instance:cases.TextAreaCase@3834d63f]" name="textAreaWithEnter" duration-ms="590" started-at="2018-07-28T23:46:53Z" finished-at="2018-07-28T23:46:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaWithEnter -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextAreaCase@3834d63f]" name="afterClass" is-config="true" duration-ms="159" started-at="2018-07-28T23:46:54Z" finished-at="2018-07-28T23:46:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@3834d63f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:54Z" finished-at="2018-07-28T23:46:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- cases.TextAreaCase -->
      <class name="cases.RadioButtonCase">
        <test-method status="PASS" signature="beforeSuite(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="beforeSuite" is-config="true" duration-ms="2" started-at="2018-07-28T23:46:39Z" finished-at="2018-07-28T23:46:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[linux]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[127.0.0.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="beforeTest" is-config="true" duration-ms="1" started-at="2018-07-28T23:46:45Z" finished-at="2018-07-28T23:46:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="beforeClass" is-config="true" duration-ms="1374" started-at="2018-07-28T23:46:45Z" finished-at="2018-07-28T23:46:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="beforeMethod" is-config="true" duration-ms="133" started-at="2018-07-28T23:46:47Z" finished-at="2018-07-28T23:46:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceA()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="radioChoiceA" duration-ms="194" started-at="2018-07-28T23:46:47Z" finished-at="2018-07-28T23:46:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceA -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="beforeMethod" is-config="true" duration-ms="97" started-at="2018-07-28T23:46:47Z" finished-at="2018-07-28T23:46:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:47Z" finished-at="2018-07-28T23:46:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="radioChoiceB()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="radioChoiceB" duration-ms="162" started-at="2018-07-28T23:46:47Z" finished-at="2018-07-28T23:46:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceB -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-28T23:46:47Z" finished-at="2018-07-28T23:46:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="beforeMethod" is-config="true" duration-ms="91" started-at="2018-07-28T23:46:47Z" finished-at="2018-07-28T23:46:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceC()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="radioChoiceC" duration-ms="172" started-at="2018-07-28T23:46:48Z" finished-at="2018-07-28T23:46:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceC -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:48Z" finished-at="2018-07-28T23:46:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="beforeMethod" is-config="true" duration-ms="93" started-at="2018-07-28T23:46:48Z" finished-at="2018-07-28T23:46:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioDefault()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="radioDefault" duration-ms="104" started-at="2018-07-28T23:46:48Z" finished-at="2018-07-28T23:46:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioDefault -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:48Z" finished-at="2018-07-28T23:46:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="afterClass" is-config="true" duration-ms="157" started-at="2018-07-28T23:46:48Z" finished-at="2018-07-28T23:46:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:54Z" finished-at="2018-07-28T23:46:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="afterSuite" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:54Z" finished-at="2018-07-28T23:46:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- cases.RadioButtonCase -->
    </test> <!-- dynamic test 2 -->
  </suite> <!-- dynamic suite for linux and chrome (0) -->
  <suite name="dynamic suite for linux and firefox" duration-ms="33901" started-at="2018-07-28T23:46:05Z" finished-at="2018-07-28T23:46:39Z">
    <groups>
    </groups>
    <test name="dynamic test 1" duration-ms="14195" started-at="2018-07-28T23:46:05Z" finished-at="2018-07-28T23:46:19Z">
      <class name="cases.TextFieldCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextFieldCase@21a06946]" name="beforeClass" is-config="true" duration-ms="3250" started-at="2018-07-28T23:46:14Z" finished-at="2018-07-28T23:46:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@21a06946]" name="beforeMethod" is-config="true" duration-ms="154" started-at="2018-07-28T23:46:17Z" finished-at="2018-07-28T23:46:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="intentionalFailTextField()[pri:2, instance:cases.TextFieldCase@21a06946]" name="intentionalFailTextField" duration-ms="235" started-at="2018-07-28T23:46:17Z" finished-at="2018-07-28T23:46:17Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [This should fail] but found [Please fail]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [This should fail] but found [Please fail]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at cases.TextFieldCase.intentionalFailTextField(TextFieldCase.java:31)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailTextField -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@21a06946]" name="beforeMethod" is-config="true" duration-ms="170" started-at="2018-07-28T23:46:18Z" finished-at="2018-07-28T23:46:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@21a06946]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:18Z" finished-at="2018-07-28T23:46:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="testTextField()[pri:2, instance:cases.TextFieldCase@21a06946]" name="testTextField" duration-ms="160" started-at="2018-07-28T23:46:18Z" finished-at="2018-07-28T23:46:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTextField -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@21a06946]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:18Z" finished-at="2018-07-28T23:46:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextFieldCase@21a06946]" name="afterClass" is-config="true" duration-ms="1387" started-at="2018-07-28T23:46:18Z" finished-at="2018-07-28T23:46:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.TextFieldCase -->
      <class name="cases.CheckBoxCase">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="beforeTest" is-config="true" duration-ms="1" started-at="2018-07-28T23:46:05Z" finished-at="2018-07-28T23:46:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="beforeClass" is-config="true" duration-ms="3237" started-at="2018-07-28T23:46:05Z" finished-at="2018-07-28T23:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="beforeMethod" is-config="true" duration-ms="168" started-at="2018-07-28T23:46:08Z" finished-at="2018-07-28T23:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxAll()[pri:2, instance:cases.CheckBoxCase@483bf400]" name="checkBoxAll" duration-ms="949" started-at="2018-07-28T23:46:08Z" finished-at="2018-07-28T23:46:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxAll -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="beforeMethod" is-config="true" duration-ms="152" started-at="2018-07-28T23:46:09Z" finished-at="2018-07-28T23:46:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:09Z" finished-at="2018-07-28T23:46:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkBoxNone()[pri:2, instance:cases.CheckBoxCase@483bf400]" name="checkBoxNone" duration-ms="60" started-at="2018-07-28T23:46:10Z" finished-at="2018-07-28T23:46:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxNone -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="beforeMethod" is-config="true" duration-ms="160" started-at="2018-07-28T23:46:10Z" finished-at="2018-07-28T23:46:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:10Z" finished-at="2018-07-28T23:46:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkBoxOneThree()[pri:2, instance:cases.CheckBoxCase@483bf400]" name="checkBoxOneThree" duration-ms="662" started-at="2018-07-28T23:46:10Z" finished-at="2018-07-28T23:46:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneThree -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:10Z" finished-at="2018-07-28T23:46:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="beforeMethod" is-config="true" duration-ms="131" started-at="2018-07-28T23:46:10Z" finished-at="2018-07-28T23:46:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxOneTwo()[pri:2, instance:cases.CheckBoxCase@483bf400]" name="checkBoxOneTwo" duration-ms="627" started-at="2018-07-28T23:46:11Z" finished-at="2018-07-28T23:46:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneTwo -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-28T23:46:11Z" finished-at="2018-07-28T23:46:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="beforeMethod" is-config="true" duration-ms="158" started-at="2018-07-28T23:46:11Z" finished-at="2018-07-28T23:46:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxTwoThree()[pri:2, instance:cases.CheckBoxCase@483bf400]" name="checkBoxTwoThree" duration-ms="620" started-at="2018-07-28T23:46:11Z" finished-at="2018-07-28T23:46:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxTwoThree -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="beforeMethod" is-config="true" duration-ms="105" started-at="2018-07-28T23:46:12Z" finished-at="2018-07-28T23:46:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:12Z" finished-at="2018-07-28T23:46:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="intentionalFailcheckBox()[pri:2, instance:cases.CheckBoxCase@483bf400]" name="intentionalFailcheckBox" duration-ms="617" started-at="2018-07-28T23:46:12Z" finished-at="2018-07-28T23:46:13Z">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:86)
at org.junit.Assert.assertTrue(Assert.java:41)
at org.junit.Assert.assertTrue(Assert.java:52)
at cases.CheckBoxCase.intentionalFailcheckBox(CheckBoxCase.java:60)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailcheckBox -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="afterClass" is-config="true" duration-ms="988" started-at="2018-07-28T23:46:13Z" finished-at="2018-07-28T23:46:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:13Z" finished-at="2018-07-28T23:46:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:19Z" finished-at="2018-07-28T23:46:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- cases.CheckBoxCase -->
    </test> <!-- dynamic test 1 -->
    <test name="dynamic test 2" duration-ms="19684" started-at="2018-07-28T23:46:19Z" finished-at="2018-07-28T23:46:39Z">
      <class name="cases.DropDownCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.DropDownCase@4b6995df]" name="beforeClass" is-config="true" duration-ms="3252" started-at="2018-07-28T23:46:26Z" finished-at="2018-07-28T23:46:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@4b6995df]" name="beforeMethod" is-config="true" duration-ms="188" started-at="2018-07-28T23:46:29Z" finished-at="2018-07-28T23:46:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownDefault()[pri:0, instance:cases.DropDownCase@4b6995df]" name="dropDownDefault" duration-ms="225" started-at="2018-07-28T23:46:29Z" finished-at="2018-07-28T23:46:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownDefault -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@4b6995df]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:30Z" finished-at="2018-07-28T23:46:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@4b6995df]" name="beforeMethod" is-config="true" duration-ms="124" started-at="2018-07-28T23:46:30Z" finished-at="2018-07-28T23:46:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownMustard()[pri:0, instance:cases.DropDownCase@4b6995df]" name="dropDownMustard" duration-ms="229" started-at="2018-07-28T23:46:30Z" finished-at="2018-07-28T23:46:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownMustard -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@4b6995df]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:30Z" finished-at="2018-07-28T23:46:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@4b6995df]" name="beforeMethod" is-config="true" duration-ms="379" started-at="2018-07-28T23:46:30Z" finished-at="2018-07-28T23:46:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownOnion()[pri:0, instance:cases.DropDownCase@4b6995df]" name="dropDownOnion" duration-ms="470" started-at="2018-07-28T23:46:30Z" finished-at="2018-07-28T23:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownOnion -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@4b6995df]" name="beforeMethod" is-config="true" duration-ms="124" started-at="2018-07-28T23:46:31Z" finished-at="2018-07-28T23:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@4b6995df]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:31Z" finished-at="2018-07-28T23:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="dropDownTomato()[pri:0, instance:cases.DropDownCase@4b6995df]" name="dropDownTomato" duration-ms="428" started-at="2018-07-28T23:46:31Z" finished-at="2018-07-28T23:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownTomato -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.DropDownCase@4b6995df]" name="afterClass" is-config="true" duration-ms="1387" started-at="2018-07-28T23:46:31Z" finished-at="2018-07-28T23:46:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@4b6995df]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:31Z" finished-at="2018-07-28T23:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- cases.DropDownCase -->
      <class name="cases.TextAreaCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextAreaCase@2fc14f68]" name="beforeClass" is-config="true" duration-ms="3101" started-at="2018-07-28T23:46:33Z" finished-at="2018-07-28T23:46:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@2fc14f68]" name="beforeMethod" is-config="true" duration-ms="200" started-at="2018-07-28T23:46:36Z" finished-at="2018-07-28T23:46:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textAreaLongString()[pri:0, instance:cases.TextAreaCase@2fc14f68]" name="textAreaLongString" duration-ms="460" started-at="2018-07-28T23:46:36Z" finished-at="2018-07-28T23:46:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaLongString -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@2fc14f68]" name="beforeMethod" is-config="true" duration-ms="190" started-at="2018-07-28T23:46:37Z" finished-at="2018-07-28T23:46:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@2fc14f68]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:37Z" finished-at="2018-07-28T23:46:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="textAreaWithEnter()[pri:0, instance:cases.TextAreaCase@2fc14f68]" name="textAreaWithEnter" duration-ms="595" started-at="2018-07-28T23:46:37Z" finished-at="2018-07-28T23:46:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaWithEnter -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@2fc14f68]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-28T23:46:37Z" finished-at="2018-07-28T23:46:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextAreaCase@2fc14f68]" name="afterClass" is-config="true" duration-ms="1593" started-at="2018-07-28T23:46:37Z" finished-at="2018-07-28T23:46:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.TextAreaCase -->
      <class name="cases.RadioButtonCase">
        <test-method status="PASS" signature="beforeSuite(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="beforeSuite" is-config="true" duration-ms="2" started-at="2018-07-28T23:46:05Z" finished-at="2018-07-28T23:46:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[linux]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[localhost]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:19Z" finished-at="2018-07-28T23:46:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="beforeClass" is-config="true" duration-ms="3382" started-at="2018-07-28T23:46:19Z" finished-at="2018-07-28T23:46:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="beforeMethod" is-config="true" duration-ms="218" started-at="2018-07-28T23:46:23Z" finished-at="2018-07-28T23:46:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceA()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="radioChoiceA" duration-ms="604" started-at="2018-07-28T23:46:23Z" finished-at="2018-07-28T23:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceA -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:24Z" finished-at="2018-07-28T23:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="beforeMethod" is-config="true" duration-ms="130" started-at="2018-07-28T23:46:24Z" finished-at="2018-07-28T23:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceB()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="radioChoiceB" duration-ms="379" started-at="2018-07-28T23:46:24Z" finished-at="2018-07-28T23:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceB -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="beforeMethod" is-config="true" duration-ms="159" started-at="2018-07-28T23:46:24Z" finished-at="2018-07-28T23:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:24Z" finished-at="2018-07-28T23:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="radioChoiceC()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="radioChoiceC" duration-ms="397" started-at="2018-07-28T23:46:24Z" finished-at="2018-07-28T23:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceC -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-28T23:46:25Z" finished-at="2018-07-28T23:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="beforeMethod" is-config="true" duration-ms="180" started-at="2018-07-28T23:46:25Z" finished-at="2018-07-28T23:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioDefault()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="radioDefault" duration-ms="93" started-at="2018-07-28T23:46:25Z" finished-at="2018-07-28T23:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioDefault -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:25Z" finished-at="2018-07-28T23:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="afterClass" is-config="true" duration-ms="1188" started-at="2018-07-28T23:46:25Z" finished-at="2018-07-28T23:46:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-28T23:46:39Z" finished-at="2018-07-28T23:46:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="afterSuite" is-config="true" duration-ms="1" started-at="2018-07-28T23:46:39Z" finished-at="2018-07-28T23:46:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- cases.RadioButtonCase -->
    </test> <!-- dynamic test 2 -->
  </suite> <!-- dynamic suite for linux and firefox -->
  <suite name="dynamic suite for booper and firefox" duration-ms="34" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
    <groups>
    </groups>
    <test name="dynamic test 1" duration-ms="17" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
      <class name="cases.TextFieldCase">
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:cases.TextFieldCase@28f67ac7]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="testTextField()[pri:2, instance:cases.TextFieldCase@28f67ac7]" name="testTextField" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeClass(PapaBless.java:333)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTextField -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@28f67ac7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="intentionalFailTextField()[pri:2, instance:cases.TextFieldCase@28f67ac7]" name="intentionalFailTextField" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeClass(PapaBless.java:333)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailTextField -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.TextFieldCase@28f67ac7]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@28f67ac7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@28f67ac7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@28f67ac7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
      </class> <!-- cases.TextFieldCase -->
      <class name="cases.CheckBoxCase">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.CheckBoxCase@357246de]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="beforeClass()[pri:0, instance:cases.CheckBoxCase@357246de]" name="beforeClass" is-config="true" duration-ms="13" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeClass(PapaBless.java:333)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@357246de]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@357246de]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@357246de]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="checkBoxOneThree()[pri:2, instance:cases.CheckBoxCase@357246de]" name="checkBoxOneThree" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeClass(PapaBless.java:333)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneThree -->
        <test-method status="SKIP" signature="checkBoxAll()[pri:2, instance:cases.CheckBoxCase@357246de]" name="checkBoxAll" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeClass(PapaBless.java:333)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxAll -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@357246de]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@357246de]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="checkBoxNone()[pri:2, instance:cases.CheckBoxCase@357246de]" name="checkBoxNone" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeClass(PapaBless.java:333)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxNone -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@357246de]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@357246de]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@357246de]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.CheckBoxCase@357246de]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="checkBoxOneTwo()[pri:2, instance:cases.CheckBoxCase@357246de]" name="checkBoxOneTwo" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeClass(PapaBless.java:333)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneTwo -->
        <test-method status="SKIP" signature="intentionalFailcheckBox()[pri:2, instance:cases.CheckBoxCase@357246de]" name="intentionalFailcheckBox" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeClass(PapaBless.java:333)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailcheckBox -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@357246de]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@357246de]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@357246de]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@357246de]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="checkBoxTwoThree()[pri:2, instance:cases.CheckBoxCase@357246de]" name="checkBoxTwoThree" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeClass(PapaBless.java:333)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxTwoThree -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:cases.CheckBoxCase@357246de]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- cases.CheckBoxCase -->
    </test> <!-- dynamic test 1 -->
    <test name="dynamic test 2" duration-ms="10" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
      <class name="cases.DropDownCase">
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:cases.DropDownCase@ea4a92b]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="dropDownDefault()[pri:0, instance:cases.DropDownCase@ea4a92b]" name="dropDownDefault" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeClass(PapaBless.java:333)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownDefault -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@ea4a92b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.DropDownCase@ea4a92b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@ea4a92b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.DropDownCase@ea4a92b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="dropDownMustard()[pri:0, instance:cases.DropDownCase@ea4a92b]" name="dropDownMustard" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeClass(PapaBless.java:333)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownMustard -->
        <test-method status="SKIP" signature="dropDownTomato()[pri:0, instance:cases.DropDownCase@ea4a92b]" name="dropDownTomato" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeClass(PapaBless.java:333)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownTomato -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.DropDownCase@ea4a92b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.DropDownCase@ea4a92b]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="dropDownOnion()[pri:0, instance:cases.DropDownCase@ea4a92b]" name="dropDownOnion" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeClass(PapaBless.java:333)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownOnion -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@ea4a92b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@ea4a92b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.DropDownCase@ea4a92b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- cases.DropDownCase -->
      <class name="cases.TextAreaCase">
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@3c5a99da]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@3c5a99da]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="textAreaLongString()[pri:0, instance:cases.TextAreaCase@3c5a99da]" name="textAreaLongString" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeClass(PapaBless.java:333)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaLongString -->
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:cases.TextAreaCase@3c5a99da]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="textAreaWithEnter()[pri:0, instance:cases.TextAreaCase@3c5a99da]" name="textAreaWithEnter" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeClass(PapaBless.java:333)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaWithEnter -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@3c5a99da]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.TextAreaCase@3c5a99da]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@3c5a99da]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- cases.TextAreaCase -->
      <class name="cases.RadioButtonCase">
        <test-method status="PASS" signature="beforeSuite(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="beforeSuite" is-config="true" duration-ms="4" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[booper]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[192.168.0.7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="beforeClass()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="beforeClass" is-config="true" duration-ms="5" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeClass(PapaBless.java:333)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="radioChoiceA()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="radioChoiceA" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeClass(PapaBless.java:333)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceA -->
        <test-method status="SKIP" signature="radioChoiceB()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="radioChoiceB" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeClass(PapaBless.java:333)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceB -->
        <test-method status="SKIP" signature="radioDefault()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="radioDefault" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeClass(PapaBless.java:333)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioDefault -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="radioChoiceC()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="radioChoiceC" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cases.PapaBless.beforeClass(PapaBless.java:333)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:82)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceC -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="SKIP" signature="afterSuite()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="afterSuite" is-config="true" duration-ms="0" started-at="2018-07-28T23:47:29Z" finished-at="2018-07-28T23:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- cases.RadioButtonCase -->
    </test> <!-- dynamic test 2 -->
  </suite> <!-- dynamic suite for booper and firefox -->
</testng-results>
