<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="12" total="30" passed="16">
  <reporter-output>
  </reporter-output>
  <suite name="dynamic suite for linux and chrome" duration-ms="16574" started-at="2018-07-25T03:46:15Z" finished-at="2018-07-25T03:46:31Z">
    <groups>
    </groups>
    <test name="dynamic test 1" duration-ms="7317" started-at="2018-07-25T03:46:15Z" finished-at="2018-07-25T03:46:22Z">
      <class name="cases.TextFieldCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextFieldCase@eafc191]" name="beforeClass" is-config="true" duration-ms="1654" started-at="2018-07-25T03:46:19Z" finished-at="2018-07-25T03:46:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@eafc191]" name="beforeMethod" is-config="true" duration-ms="129" started-at="2018-07-25T03:46:21Z" finished-at="2018-07-25T03:46:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="intentionalFailTextField()[pri:2, instance:cases.TextFieldCase@eafc191]" name="intentionalFailTextField" duration-ms="256" started-at="2018-07-25T03:46:21Z" finished-at="2018-07-25T03:46:21Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [This should fail] but found [Please fail]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [This should fail] but found [Please fail]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at cases.TextFieldCase.intentionalFailTextField(TextFieldCase.java:31)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:78)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailTextField -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@eafc191]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-25T03:46:21Z" finished-at="2018-07-25T03:46:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@eafc191]" name="beforeMethod" is-config="true" duration-ms="108" started-at="2018-07-25T03:46:21Z" finished-at="2018-07-25T03:46:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testTextField()[pri:2, instance:cases.TextFieldCase@eafc191]" name="testTextField" duration-ms="243" started-at="2018-07-25T03:46:22Z" finished-at="2018-07-25T03:46:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTextField -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextFieldCase@eafc191]" name="afterClass" is-config="true" duration-ms="159" started-at="2018-07-25T03:46:22Z" finished-at="2018-07-25T03:46:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@eafc191]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-25T03:46:22Z" finished-at="2018-07-25T03:46:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- cases.TextFieldCase -->
      <class name="cases.CheckBoxCase">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.CheckBoxCase@4eb7f003]" name="beforeTest" is-config="true" duration-ms="1" started-at="2018-07-25T03:46:15Z" finished-at="2018-07-25T03:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.CheckBoxCase@4eb7f003]" name="beforeClass" is-config="true" duration-ms="2331" started-at="2018-07-25T03:46:15Z" finished-at="2018-07-25T03:46:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@4eb7f003]" name="beforeMethod" is-config="true" duration-ms="143" started-at="2018-07-25T03:46:17Z" finished-at="2018-07-25T03:46:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxAll()[pri:2, instance:cases.CheckBoxCase@4eb7f003]" name="checkBoxAll" duration-ms="341" started-at="2018-07-25T03:46:17Z" finished-at="2018-07-25T03:46:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxAll -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@4eb7f003]" name="beforeMethod" is-config="true" duration-ms="100" started-at="2018-07-25T03:46:17Z" finished-at="2018-07-25T03:46:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@4eb7f003]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-25T03:46:17Z" finished-at="2018-07-25T03:46:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkBoxNone()[pri:2, instance:cases.CheckBoxCase@4eb7f003]" name="checkBoxNone" duration-ms="124" started-at="2018-07-25T03:46:18Z" finished-at="2018-07-25T03:46:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxNone -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@4eb7f003]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-25T03:46:18Z" finished-at="2018-07-25T03:46:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@4eb7f003]" name="beforeMethod" is-config="true" duration-ms="112" started-at="2018-07-25T03:46:18Z" finished-at="2018-07-25T03:46:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxOneThree()[pri:2, instance:cases.CheckBoxCase@4eb7f003]" name="checkBoxOneThree" duration-ms="246" started-at="2018-07-25T03:46:18Z" finished-at="2018-07-25T03:46:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneThree -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@4eb7f003]" name="beforeMethod" is-config="true" duration-ms="102" started-at="2018-07-25T03:46:18Z" finished-at="2018-07-25T03:46:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@4eb7f003]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-25T03:46:18Z" finished-at="2018-07-25T03:46:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkBoxOneTwo()[pri:2, instance:cases.CheckBoxCase@4eb7f003]" name="checkBoxOneTwo" duration-ms="243" started-at="2018-07-25T03:46:18Z" finished-at="2018-07-25T03:46:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneTwo -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@4eb7f003]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-25T03:46:18Z" finished-at="2018-07-25T03:46:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@4eb7f003]" name="beforeMethod" is-config="true" duration-ms="101" started-at="2018-07-25T03:46:18Z" finished-at="2018-07-25T03:46:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxTwoThree()[pri:2, instance:cases.CheckBoxCase@4eb7f003]" name="checkBoxTwoThree" duration-ms="242" started-at="2018-07-25T03:46:18Z" finished-at="2018-07-25T03:46:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxTwoThree -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@4eb7f003]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-25T03:46:19Z" finished-at="2018-07-25T03:46:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@4eb7f003]" name="beforeMethod" is-config="true" duration-ms="95" started-at="2018-07-25T03:46:19Z" finished-at="2018-07-25T03:46:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="intentionalFailcheckBox()[pri:2, instance:cases.CheckBoxCase@4eb7f003]" name="intentionalFailcheckBox" duration-ms="245" started-at="2018-07-25T03:46:19Z" finished-at="2018-07-25T03:46:19Z">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:86)
at org.junit.Assert.assertTrue(Assert.java:41)
at org.junit.Assert.assertTrue(Assert.java:52)
at cases.CheckBoxCase.intentionalFailcheckBox(CheckBoxCase.java:59)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:78)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailcheckBox -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@4eb7f003]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-25T03:46:19Z" finished-at="2018-07-25T03:46:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.CheckBoxCase@4eb7f003]" name="afterClass" is-config="true" duration-ms="161" started-at="2018-07-25T03:46:19Z" finished-at="2018-07-25T03:46:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.CheckBoxCase@4eb7f003]" name="afterTest" is-config="true" duration-ms="1" started-at="2018-07-25T03:46:22Z" finished-at="2018-07-25T03:46:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- cases.CheckBoxCase -->
    </test> <!-- dynamic test 1 -->
    <test name="dynamic test 2" duration-ms="9237" started-at="2018-07-25T03:46:22Z" finished-at="2018-07-25T03:46:31Z">
      <class name="cases.DropDownCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.DropDownCase@c81cdd1]" name="beforeClass" is-config="true" duration-ms="1713" started-at="2018-07-25T03:46:25Z" finished-at="2018-07-25T03:46:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@c81cdd1]" name="beforeMethod" is-config="true" duration-ms="132" started-at="2018-07-25T03:46:27Z" finished-at="2018-07-25T03:46:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownDefault()[pri:0, instance:cases.DropDownCase@c81cdd1]" name="dropDownDefault" duration-ms="150" started-at="2018-07-25T03:46:27Z" finished-at="2018-07-25T03:46:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownDefault -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@c81cdd1]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-25T03:46:27Z" finished-at="2018-07-25T03:46:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@c81cdd1]" name="beforeMethod" is-config="true" duration-ms="104" started-at="2018-07-25T03:46:27Z" finished-at="2018-07-25T03:46:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownMustard()[pri:0, instance:cases.DropDownCase@c81cdd1]" name="dropDownMustard" duration-ms="180" started-at="2018-07-25T03:46:27Z" finished-at="2018-07-25T03:46:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownMustard -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@c81cdd1]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-25T03:46:27Z" finished-at="2018-07-25T03:46:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@c81cdd1]" name="beforeMethod" is-config="true" duration-ms="95" started-at="2018-07-25T03:46:27Z" finished-at="2018-07-25T03:46:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownOnion()[pri:0, instance:cases.DropDownCase@c81cdd1]" name="dropDownOnion" duration-ms="198" started-at="2018-07-25T03:46:27Z" finished-at="2018-07-25T03:46:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownOnion -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@c81cdd1]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-25T03:46:28Z" finished-at="2018-07-25T03:46:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@c81cdd1]" name="beforeMethod" is-config="true" duration-ms="109" started-at="2018-07-25T03:46:28Z" finished-at="2018-07-25T03:46:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownTomato()[pri:0, instance:cases.DropDownCase@c81cdd1]" name="dropDownTomato" duration-ms="207" started-at="2018-07-25T03:46:28Z" finished-at="2018-07-25T03:46:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownTomato -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@c81cdd1]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-25T03:46:28Z" finished-at="2018-07-25T03:46:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.DropDownCase@c81cdd1]" name="afterClass" is-config="true" duration-ms="67" started-at="2018-07-25T03:46:28Z" finished-at="2018-07-25T03:46:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.DropDownCase -->
      <class name="cases.TextAreaCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextAreaCase@1fc2b765]" name="beforeClass" is-config="true" duration-ms="1689" started-at="2018-07-25T03:46:28Z" finished-at="2018-07-25T03:46:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@1fc2b765]" name="beforeMethod" is-config="true" duration-ms="146" started-at="2018-07-25T03:46:30Z" finished-at="2018-07-25T03:46:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textAreaLongString()[pri:0, instance:cases.TextAreaCase@1fc2b765]" name="textAreaLongString" duration-ms="569" started-at="2018-07-25T03:46:30Z" finished-at="2018-07-25T03:46:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaLongString -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@1fc2b765]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-25T03:46:30Z" finished-at="2018-07-25T03:46:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@1fc2b765]" name="beforeMethod" is-config="true" duration-ms="95" started-at="2018-07-25T03:46:30Z" finished-at="2018-07-25T03:46:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textAreaWithEnter()[pri:0, instance:cases.TextAreaCase@1fc2b765]" name="textAreaWithEnter" duration-ms="664" started-at="2018-07-25T03:46:30Z" finished-at="2018-07-25T03:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaWithEnter -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@1fc2b765]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-25T03:46:31Z" finished-at="2018-07-25T03:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextAreaCase@1fc2b765]" name="afterClass" is-config="true" duration-ms="119" started-at="2018-07-25T03:46:31Z" finished-at="2018-07-25T03:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.TextAreaCase -->
      <class name="cases.RadioButtonCase">
        <test-method status="PASS" signature="beforeSuite(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cases.RadioButtonCase@43738a82]" name="beforeSuite" is-config="true" duration-ms="4661" started-at="2018-07-25T03:46:10Z" finished-at="2018-07-25T03:46:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[linux]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[localhost]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.RadioButtonCase@43738a82]" name="beforeTest" is-config="true" duration-ms="1" started-at="2018-07-25T03:46:22Z" finished-at="2018-07-25T03:46:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.RadioButtonCase@43738a82]" name="beforeClass" is-config="true" duration-ms="1721" started-at="2018-07-25T03:46:22Z" finished-at="2018-07-25T03:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@43738a82]" name="beforeMethod" is-config="true" duration-ms="140" started-at="2018-07-25T03:46:24Z" finished-at="2018-07-25T03:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceA()[pri:0, instance:cases.RadioButtonCase@43738a82]" name="radioChoiceA" duration-ms="212" started-at="2018-07-25T03:46:24Z" finished-at="2018-07-25T03:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceA -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@43738a82]" name="beforeMethod" is-config="true" duration-ms="97" started-at="2018-07-25T03:46:24Z" finished-at="2018-07-25T03:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@43738a82]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-25T03:46:24Z" finished-at="2018-07-25T03:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="radioChoiceB()[pri:0, instance:cases.RadioButtonCase@43738a82]" name="radioChoiceB" duration-ms="166" started-at="2018-07-25T03:46:24Z" finished-at="2018-07-25T03:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceB -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@43738a82]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-25T03:46:24Z" finished-at="2018-07-25T03:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@43738a82]" name="beforeMethod" is-config="true" duration-ms="94" started-at="2018-07-25T03:46:24Z" finished-at="2018-07-25T03:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceC()[pri:0, instance:cases.RadioButtonCase@43738a82]" name="radioChoiceC" duration-ms="182" started-at="2018-07-25T03:46:24Z" finished-at="2018-07-25T03:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceC -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@43738a82]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-25T03:46:25Z" finished-at="2018-07-25T03:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@43738a82]" name="beforeMethod" is-config="true" duration-ms="100" started-at="2018-07-25T03:46:25Z" finished-at="2018-07-25T03:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioDefault()[pri:0, instance:cases.RadioButtonCase@43738a82]" name="radioDefault" duration-ms="113" started-at="2018-07-25T03:46:25Z" finished-at="2018-07-25T03:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioDefault -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.RadioButtonCase@43738a82]" name="afterClass" is-config="true" duration-ms="160" started-at="2018-07-25T03:46:25Z" finished-at="2018-07-25T03:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@43738a82]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-25T03:46:25Z" finished-at="2018-07-25T03:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.RadioButtonCase@43738a82]" name="afterTest" is-config="true" duration-ms="1" started-at="2018-07-25T03:46:31Z" finished-at="2018-07-25T03:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:cases.RadioButtonCase@43738a82]" name="afterSuite" is-config="true" duration-ms="23988" started-at="2018-07-25T03:46:31Z" finished-at="2018-07-25T03:46:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- cases.RadioButtonCase -->
    </test> <!-- dynamic test 2 -->
  </suite> <!-- dynamic suite for linux and chrome -->
</testng-results>
