<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="54" failed="12" ignored="108" total="270" passed="96">
  <reporter-output>
    <line>
      <![CDATA[<a href='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailcheckBox_29Jul2018_01-54-04-522.png'> <img src='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailcheckBox_29Jul2018_01-54-04-522.png' height='100' width='100'/> </a>]]>
    </line>
    <line>
      <![CDATA[<a href='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailTextField_29Jul2018_01-54-06-769.png'> <img src='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailTextField_29Jul2018_01-54-06-769.png' height='100' width='100'/> </a>]]>
    </line>
    <line>
      <![CDATA[<a href='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailcheckBox_29Jul2018_01-54-27-055.png'> <img src='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailcheckBox_29Jul2018_01-54-27-055.png' height='100' width='100'/> </a>]]>
    </line>
    <line>
      <![CDATA[<a href='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailTextField_29Jul2018_01-54-32-115.png'> <img src='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailTextField_29Jul2018_01-54-32-115.png' height='100' width='100'/> </a>]]>
    </line>
    <line>
      <![CDATA[<a href='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailcheckBox_29Jul2018_01-54-57-745.png'> <img src='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailcheckBox_29Jul2018_01-54-57-745.png' height='100' width='100'/> </a>]]>
    </line>
    <line>
      <![CDATA[<a href='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailTextField_29Jul2018_01-55-00-149.png'> <img src='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailTextField_29Jul2018_01-55-00-149.png' height='100' width='100'/> </a>]]>
    </line>
    <line>
      <![CDATA[<a href='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailcheckBox_29Jul2018_01-55-18-027.png'> <img src='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailcheckBox_29Jul2018_01-55-18-027.png' height='100' width='100'/> </a>]]>
    </line>
    <line>
      <![CDATA[<a href='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailTextField_29Jul2018_01-55-23-225.png'> <img src='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailTextField_29Jul2018_01-55-23-225.png' height='100' width='100'/> </a>]]>
    </line>
    <line>
      <![CDATA[<a href='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailcheckBox_29Jul2018_01-55-51-956.png'> <img src='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailcheckBox_29Jul2018_01-55-51-956.png' height='100' width='100'/> </a>]]>
    </line>
    <line>
      <![CDATA[<a href='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailTextField_29Jul2018_01-55-56-877.png'> <img src='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailTextField_29Jul2018_01-55-56-877.png' height='100' width='100'/> </a>]]>
    </line>
    <line>
      <![CDATA[<a href='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailcheckBox_29Jul2018_01-56-25-865.png'> <img src='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailcheckBox_29Jul2018_01-56-25-865.png' height='100' width='100'/> </a>]]>
    </line>
    <line>
      <![CDATA[<a href='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailTextField_29Jul2018_01-56-30-864.png'> <img src='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailTextField_29Jul2018_01-56-30-864.png' height='100' width='100'/> </a>]]>
    </line>
  </reporter-output>
  <suite name="dynamic suite with linux/127.0.0.1/chrome/10" duration-ms="15713" started-at="2018-07-29T18:54:54Z" finished-at="2018-07-29T18:55:09Z">
    <groups>
    </groups>
    <test name="dynamic test 1" duration-ms="6487" started-at="2018-07-29T18:54:54Z" finished-at="2018-07-29T18:55:00Z">
      <class name="cases.TextFieldCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextFieldCase@63d4e2ba]" name="beforeClass" is-config="true" duration-ms="1823" started-at="2018-07-29T18:54:57Z" finished-at="2018-07-29T18:54:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@63d4e2ba]" name="beforeMethod" is-config="true" duration-ms="204" started-at="2018-07-29T18:54:59Z" finished-at="2018-07-29T18:54:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="intentionalFailTextField()[pri:2, instance:cases.TextFieldCase@63d4e2ba]" name="intentionalFailTextField" duration-ms="242" started-at="2018-07-29T18:54:59Z" finished-at="2018-07-29T18:55:00Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [This should fail] but found [Please fail]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [This should fail] but found [Please fail]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at cases.TextFieldCase.intentionalFailTextField(TextFieldCase.java:33)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[<a href='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailTextField_29Jul2018_01-55-00-149.png'> <img src='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailTextField_29Jul2018_01-55-00-149.png' height='100' width='100'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- intentionalFailTextField -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@63d4e2ba]" name="beforeMethod" is-config="true" duration-ms="113" started-at="2018-07-29T18:55:00Z" finished-at="2018-07-29T18:55:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@63d4e2ba]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:00Z" finished-at="2018-07-29T18:55:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="testTextField()[pri:2, instance:cases.TextFieldCase@63d4e2ba]" name="testTextField" duration-ms="213" started-at="2018-07-29T18:55:00Z" finished-at="2018-07-29T18:55:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTextField -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextFieldCase@63d4e2ba]" name="afterClass" is-config="true" duration-ms="69" started-at="2018-07-29T18:55:00Z" finished-at="2018-07-29T18:55:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@63d4e2ba]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:00Z" finished-at="2018-07-29T18:55:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- cases.TextFieldCase -->
      <class name="cases.CheckBoxCase">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:54Z" finished-at="2018-07-29T18:54:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="beforeClass" is-config="true" duration-ms="1634" started-at="2018-07-29T18:54:54Z" finished-at="2018-07-29T18:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="beforeMethod" is-config="true" duration-ms="137" started-at="2018-07-29T18:54:55Z" finished-at="2018-07-29T18:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxAll()[pri:2, instance:cases.CheckBoxCase@233c0b17]" name="checkBoxAll" duration-ms="317" started-at="2018-07-29T18:54:55Z" finished-at="2018-07-29T18:54:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxAll -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:56Z" finished-at="2018-07-29T18:54:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="beforeMethod" is-config="true" duration-ms="94" started-at="2018-07-29T18:54:56Z" finished-at="2018-07-29T18:54:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxNone()[pri:2, instance:cases.CheckBoxCase@233c0b17]" name="checkBoxNone" duration-ms="108" started-at="2018-07-29T18:54:56Z" finished-at="2018-07-29T18:54:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxNone -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:56Z" finished-at="2018-07-29T18:54:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="beforeMethod" is-config="true" duration-ms="96" started-at="2018-07-29T18:54:56Z" finished-at="2018-07-29T18:54:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxOneThree()[pri:2, instance:cases.CheckBoxCase@233c0b17]" name="checkBoxOneThree" duration-ms="229" started-at="2018-07-29T18:54:56Z" finished-at="2018-07-29T18:54:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneThree -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-29T18:54:56Z" finished-at="2018-07-29T18:54:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="beforeMethod" is-config="true" duration-ms="94" started-at="2018-07-29T18:54:56Z" finished-at="2018-07-29T18:54:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxOneTwo()[pri:2, instance:cases.CheckBoxCase@233c0b17]" name="checkBoxOneTwo" duration-ms="227" started-at="2018-07-29T18:54:56Z" finished-at="2018-07-29T18:54:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneTwo -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="beforeMethod" is-config="true" duration-ms="93" started-at="2018-07-29T18:54:56Z" finished-at="2018-07-29T18:54:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:56Z" finished-at="2018-07-29T18:54:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkBoxTwoThree()[pri:2, instance:cases.CheckBoxCase@233c0b17]" name="checkBoxTwoThree" duration-ms="225" started-at="2018-07-29T18:54:57Z" finished-at="2018-07-29T18:54:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxTwoThree -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:57Z" finished-at="2018-07-29T18:54:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="beforeMethod" is-config="true" duration-ms="94" started-at="2018-07-29T18:54:57Z" finished-at="2018-07-29T18:54:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="intentionalFailcheckBox()[pri:2, instance:cases.CheckBoxCase@233c0b17]" name="intentionalFailcheckBox" duration-ms="235" started-at="2018-07-29T18:54:57Z" finished-at="2018-07-29T18:54:57Z">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:86)
at org.junit.Assert.assertTrue(Assert.java:41)
at org.junit.Assert.assertTrue(Assert.java:52)
at cases.CheckBoxCase.intentionalFailcheckBox(CheckBoxCase.java:62)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[<a href='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailcheckBox_29Jul2018_01-54-57-745.png'> <img src='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailcheckBox_29Jul2018_01-54-57-745.png' height='100' width='100'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- intentionalFailcheckBox -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:57Z" finished-at="2018-07-29T18:54:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="afterClass" is-config="true" duration-ms="62" started-at="2018-07-29T18:54:57Z" finished-at="2018-07-29T18:54:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.CheckBoxCase@233c0b17]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:00Z" finished-at="2018-07-29T18:55:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- cases.CheckBoxCase -->
    </test> <!-- dynamic test 1 -->
    <test name="dynamic test 2" duration-ms="9221" started-at="2018-07-29T18:55:00Z" finished-at="2018-07-29T18:55:09Z">
      <class name="cases.DropDownCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.DropDownCase@17d99928]" name="beforeClass" is-config="true" duration-ms="1720" started-at="2018-07-29T18:55:03Z" finished-at="2018-07-29T18:55:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@17d99928]" name="beforeMethod" is-config="true" duration-ms="130" started-at="2018-07-29T18:55:05Z" finished-at="2018-07-29T18:55:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownDefault()[pri:0, instance:cases.DropDownCase@17d99928]" name="dropDownDefault" duration-ms="149" started-at="2018-07-29T18:55:05Z" finished-at="2018-07-29T18:55:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownDefault -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@17d99928]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:05Z" finished-at="2018-07-29T18:55:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@17d99928]" name="beforeMethod" is-config="true" duration-ms="96" started-at="2018-07-29T18:55:05Z" finished-at="2018-07-29T18:55:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownMustard()[pri:0, instance:cases.DropDownCase@17d99928]" name="dropDownMustard" duration-ms="173" started-at="2018-07-29T18:55:05Z" finished-at="2018-07-29T18:55:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownMustard -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@17d99928]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-29T18:55:05Z" finished-at="2018-07-29T18:55:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@17d99928]" name="beforeMethod" is-config="true" duration-ms="95" started-at="2018-07-29T18:55:05Z" finished-at="2018-07-29T18:55:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownOnion()[pri:0, instance:cases.DropDownCase@17d99928]" name="dropDownOnion" duration-ms="193" started-at="2018-07-29T18:55:05Z" finished-at="2018-07-29T18:55:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownOnion -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@17d99928]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:05Z" finished-at="2018-07-29T18:55:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@17d99928]" name="beforeMethod" is-config="true" duration-ms="95" started-at="2018-07-29T18:55:05Z" finished-at="2018-07-29T18:55:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownTomato()[pri:0, instance:cases.DropDownCase@17d99928]" name="dropDownTomato" duration-ms="195" started-at="2018-07-29T18:55:06Z" finished-at="2018-07-29T18:55:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownTomato -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@17d99928]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:06Z" finished-at="2018-07-29T18:55:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.DropDownCase@17d99928]" name="afterClass" is-config="true" duration-ms="108" started-at="2018-07-29T18:55:06Z" finished-at="2018-07-29T18:55:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.DropDownCase -->
      <class name="cases.TextAreaCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextAreaCase@3834d63f]" name="beforeClass" is-config="true" duration-ms="1617" started-at="2018-07-29T18:55:06Z" finished-at="2018-07-29T18:55:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@3834d63f]" name="beforeMethod" is-config="true" duration-ms="311" started-at="2018-07-29T18:55:07Z" finished-at="2018-07-29T18:55:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textAreaLongString()[pri:0, instance:cases.TextAreaCase@3834d63f]" name="textAreaLongString" duration-ms="687" started-at="2018-07-29T18:55:08Z" finished-at="2018-07-29T18:55:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaLongString -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@3834d63f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:08Z" finished-at="2018-07-29T18:55:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@3834d63f]" name="beforeMethod" is-config="true" duration-ms="94" started-at="2018-07-29T18:55:08Z" finished-at="2018-07-29T18:55:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textAreaWithEnter()[pri:0, instance:cases.TextAreaCase@3834d63f]" name="textAreaWithEnter" duration-ms="649" started-at="2018-07-29T18:55:09Z" finished-at="2018-07-29T18:55:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaWithEnter -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@3834d63f]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-29T18:55:09Z" finished-at="2018-07-29T18:55:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextAreaCase@3834d63f]" name="afterClass" is-config="true" duration-ms="108" started-at="2018-07-29T18:55:09Z" finished-at="2018-07-29T18:55:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.TextAreaCase -->
      <class name="cases.RadioButtonCase">
        <test-method status="PASS" signature="beforeSuite(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="beforeSuite" is-config="true" duration-ms="1" started-at="2018-07-29T18:54:54Z" finished-at="2018-07-29T18:54:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[linux]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[127.0.0.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="beforeClass" is-config="true" duration-ms="1648" started-at="2018-07-29T18:55:00Z" finished-at="2018-07-29T18:55:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:00Z" finished-at="2018-07-29T18:55:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="beforeMethod" is-config="true" duration-ms="136" started-at="2018-07-29T18:55:02Z" finished-at="2018-07-29T18:55:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceA()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="radioChoiceA" duration-ms="197" started-at="2018-07-29T18:55:02Z" finished-at="2018-07-29T18:55:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceA -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="beforeMethod" is-config="true" duration-ms="102" started-at="2018-07-29T18:55:02Z" finished-at="2018-07-29T18:55:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:02Z" finished-at="2018-07-29T18:55:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="radioChoiceB()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="radioChoiceB" duration-ms="167" started-at="2018-07-29T18:55:02Z" finished-at="2018-07-29T18:55:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceB -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:02Z" finished-at="2018-07-29T18:55:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="beforeMethod" is-config="true" duration-ms="97" started-at="2018-07-29T18:55:02Z" finished-at="2018-07-29T18:55:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceC()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="radioChoiceC" duration-ms="180" started-at="2018-07-29T18:55:02Z" finished-at="2018-07-29T18:55:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceC -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:03Z" finished-at="2018-07-29T18:55:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="beforeMethod" is-config="true" duration-ms="96" started-at="2018-07-29T18:55:03Z" finished-at="2018-07-29T18:55:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioDefault()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="radioDefault" duration-ms="109" started-at="2018-07-29T18:55:03Z" finished-at="2018-07-29T18:55:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioDefault -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:03Z" finished-at="2018-07-29T18:55:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="afterClass" is-config="true" duration-ms="61" started-at="2018-07-29T18:55:03Z" finished-at="2018-07-29T18:55:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:09Z" finished-at="2018-07-29T18:55:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:cases.RadioButtonCase@3aa9e816]" name="afterSuite" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:09Z" finished-at="2018-07-29T18:55:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- cases.RadioButtonCase -->
    </test> <!-- dynamic test 2 -->
  </suite> <!-- dynamic suite with linux/127.0.0.1/chrome/10 -->
  <suite name="dynamic suite with linux/localhost/chrome/10" duration-ms="16508" started-at="2018-07-29T18:53:59Z" finished-at="2018-07-29T18:54:16Z">
    <groups>
    </groups>
    <test name="dynamic test 1" duration-ms="7491" started-at="2018-07-29T18:53:59Z" finished-at="2018-07-29T18:54:07Z">
      <class name="cases.TextFieldCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextFieldCase@4f4a7090]" name="beforeClass" is-config="true" duration-ms="1653" started-at="2018-07-29T18:54:04Z" finished-at="2018-07-29T18:54:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@4f4a7090]" name="beforeMethod" is-config="true" duration-ms="193" started-at="2018-07-29T18:54:06Z" finished-at="2018-07-29T18:54:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="intentionalFailTextField()[pri:2, instance:cases.TextFieldCase@4f4a7090]" name="intentionalFailTextField" duration-ms="248" started-at="2018-07-29T18:54:06Z" finished-at="2018-07-29T18:54:06Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [This should fail] but found [Please fail]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [This should fail] but found [Please fail]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at cases.TextFieldCase.intentionalFailTextField(TextFieldCase.java:33)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[<a href='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailTextField_29Jul2018_01-54-06-769.png'> <img src='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailTextField_29Jul2018_01-54-06-769.png' height='100' width='100'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- intentionalFailTextField -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@4f4a7090]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-29T18:54:06Z" finished-at="2018-07-29T18:54:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@4f4a7090]" name="beforeMethod" is-config="true" duration-ms="109" started-at="2018-07-29T18:54:06Z" finished-at="2018-07-29T18:54:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testTextField()[pri:2, instance:cases.TextFieldCase@4f4a7090]" name="testTextField" duration-ms="225" started-at="2018-07-29T18:54:06Z" finished-at="2018-07-29T18:54:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTextField -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextFieldCase@4f4a7090]" name="afterClass" is-config="true" duration-ms="160" started-at="2018-07-29T18:54:07Z" finished-at="2018-07-29T18:54:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@4f4a7090]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:07Z" finished-at="2018-07-29T18:54:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- cases.TextFieldCase -->
      <class name="cases.CheckBoxCase">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:53:59Z" finished-at="2018-07-29T18:53:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="beforeClass" is-config="true" duration-ms="2546" started-at="2018-07-29T18:53:59Z" finished-at="2018-07-29T18:54:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="beforeMethod" is-config="true" duration-ms="158" started-at="2018-07-29T18:54:02Z" finished-at="2018-07-29T18:54:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxAll()[pri:2, instance:cases.CheckBoxCase@52d455b8]" name="checkBoxAll" duration-ms="328" started-at="2018-07-29T18:54:02Z" finished-at="2018-07-29T18:54:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxAll -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-29T18:54:02Z" finished-at="2018-07-29T18:54:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="beforeMethod" is-config="true" duration-ms="108" started-at="2018-07-29T18:54:02Z" finished-at="2018-07-29T18:54:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxNone()[pri:2, instance:cases.CheckBoxCase@52d455b8]" name="checkBoxNone" duration-ms="118" started-at="2018-07-29T18:54:02Z" finished-at="2018-07-29T18:54:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxNone -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-29T18:54:03Z" finished-at="2018-07-29T18:54:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="beforeMethod" is-config="true" duration-ms="106" started-at="2018-07-29T18:54:03Z" finished-at="2018-07-29T18:54:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxOneThree()[pri:2, instance:cases.CheckBoxCase@52d455b8]" name="checkBoxOneThree" duration-ms="256" started-at="2018-07-29T18:54:03Z" finished-at="2018-07-29T18:54:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneThree -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="beforeMethod" is-config="true" duration-ms="106" started-at="2018-07-29T18:54:03Z" finished-at="2018-07-29T18:54:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:03Z" finished-at="2018-07-29T18:54:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkBoxOneTwo()[pri:2, instance:cases.CheckBoxCase@52d455b8]" name="checkBoxOneTwo" duration-ms="240" started-at="2018-07-29T18:54:03Z" finished-at="2018-07-29T18:54:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneTwo -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:03Z" finished-at="2018-07-29T18:54:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="beforeMethod" is-config="true" duration-ms="103" started-at="2018-07-29T18:54:03Z" finished-at="2018-07-29T18:54:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxTwoThree()[pri:2, instance:cases.CheckBoxCase@52d455b8]" name="checkBoxTwoThree" duration-ms="237" started-at="2018-07-29T18:54:03Z" finished-at="2018-07-29T18:54:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxTwoThree -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:04Z" finished-at="2018-07-29T18:54:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="beforeMethod" is-config="true" duration-ms="104" started-at="2018-07-29T18:54:04Z" finished-at="2018-07-29T18:54:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="intentionalFailcheckBox()[pri:2, instance:cases.CheckBoxCase@52d455b8]" name="intentionalFailcheckBox" duration-ms="248" started-at="2018-07-29T18:54:04Z" finished-at="2018-07-29T18:54:04Z">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:86)
at org.junit.Assert.assertTrue(Assert.java:41)
at org.junit.Assert.assertTrue(Assert.java:52)
at cases.CheckBoxCase.intentionalFailcheckBox(CheckBoxCase.java:62)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[<a href='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailcheckBox_29Jul2018_01-54-04-522.png'> <img src='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailcheckBox_29Jul2018_01-54-04-522.png' height='100' width='100'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- intentionalFailcheckBox -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:04Z" finished-at="2018-07-29T18:54:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="afterClass" is-config="true" duration-ms="67" started-at="2018-07-29T18:54:04Z" finished-at="2018-07-29T18:54:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.CheckBoxCase@52d455b8]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:07Z" finished-at="2018-07-29T18:54:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- cases.CheckBoxCase -->
    </test> <!-- dynamic test 1 -->
    <test name="dynamic test 2" duration-ms="9001" started-at="2018-07-29T18:54:07Z" finished-at="2018-07-29T18:54:16Z">
      <class name="cases.DropDownCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.DropDownCase@75412c2f]" name="beforeClass" is-config="true" duration-ms="1656" started-at="2018-07-29T18:54:10Z" finished-at="2018-07-29T18:54:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@75412c2f]" name="beforeMethod" is-config="true" duration-ms="137" started-at="2018-07-29T18:54:11Z" finished-at="2018-07-29T18:54:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownDefault()[pri:0, instance:cases.DropDownCase@75412c2f]" name="dropDownDefault" duration-ms="190" started-at="2018-07-29T18:54:11Z" finished-at="2018-07-29T18:54:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownDefault -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@75412c2f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:12Z" finished-at="2018-07-29T18:54:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@75412c2f]" name="beforeMethod" is-config="true" duration-ms="98" started-at="2018-07-29T18:54:12Z" finished-at="2018-07-29T18:54:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownMustard()[pri:0, instance:cases.DropDownCase@75412c2f]" name="dropDownMustard" duration-ms="184" started-at="2018-07-29T18:54:12Z" finished-at="2018-07-29T18:54:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownMustard -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@75412c2f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:12Z" finished-at="2018-07-29T18:54:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@75412c2f]" name="beforeMethod" is-config="true" duration-ms="96" started-at="2018-07-29T18:54:12Z" finished-at="2018-07-29T18:54:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownOnion()[pri:0, instance:cases.DropDownCase@75412c2f]" name="dropDownOnion" duration-ms="209" started-at="2018-07-29T18:54:12Z" finished-at="2018-07-29T18:54:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownOnion -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@75412c2f]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-29T18:54:12Z" finished-at="2018-07-29T18:54:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@75412c2f]" name="beforeMethod" is-config="true" duration-ms="98" started-at="2018-07-29T18:54:12Z" finished-at="2018-07-29T18:54:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownTomato()[pri:0, instance:cases.DropDownCase@75412c2f]" name="dropDownTomato" duration-ms="200" started-at="2018-07-29T18:54:12Z" finished-at="2018-07-29T18:54:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownTomato -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@75412c2f]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-29T18:54:12Z" finished-at="2018-07-29T18:54:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.DropDownCase@75412c2f]" name="afterClass" is-config="true" duration-ms="159" started-at="2018-07-29T18:54:12Z" finished-at="2018-07-29T18:54:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.DropDownCase -->
      <class name="cases.TextAreaCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextAreaCase@282ba1e]" name="beforeClass" is-config="true" duration-ms="1464" started-at="2018-07-29T18:54:13Z" finished-at="2018-07-29T18:54:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@282ba1e]" name="beforeMethod" is-config="true" duration-ms="145" started-at="2018-07-29T18:54:14Z" finished-at="2018-07-29T18:54:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textAreaLongString()[pri:0, instance:cases.TextAreaCase@282ba1e]" name="textAreaLongString" duration-ms="550" started-at="2018-07-29T18:54:14Z" finished-at="2018-07-29T18:54:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaLongString -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@282ba1e]" name="beforeMethod" is-config="true" duration-ms="97" started-at="2018-07-29T18:54:15Z" finished-at="2018-07-29T18:54:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@282ba1e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:15Z" finished-at="2018-07-29T18:54:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="textAreaWithEnter()[pri:0, instance:cases.TextAreaCase@282ba1e]" name="textAreaWithEnter" duration-ms="669" started-at="2018-07-29T18:54:15Z" finished-at="2018-07-29T18:54:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaWithEnter -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextAreaCase@282ba1e]" name="afterClass" is-config="true" duration-ms="208" started-at="2018-07-29T18:54:16Z" finished-at="2018-07-29T18:54:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@282ba1e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:16Z" finished-at="2018-07-29T18:54:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- cases.TextAreaCase -->
      <class name="cases.RadioButtonCase">
        <test-method status="PASS" signature="beforeSuite(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="beforeSuite" is-config="true" duration-ms="30" started-at="2018-07-29T18:53:59Z" finished-at="2018-07-29T18:53:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[linux]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[localhost]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="beforeClass" is-config="true" duration-ms="1645" started-at="2018-07-29T18:54:07Z" finished-at="2018-07-29T18:54:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:07Z" finished-at="2018-07-29T18:54:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="beforeMethod" is-config="true" duration-ms="143" started-at="2018-07-29T18:54:08Z" finished-at="2018-07-29T18:54:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceA()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="radioChoiceA" duration-ms="201" started-at="2018-07-29T18:54:09Z" finished-at="2018-07-29T18:54:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceA -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-29T18:54:09Z" finished-at="2018-07-29T18:54:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="beforeMethod" is-config="true" duration-ms="107" started-at="2018-07-29T18:54:09Z" finished-at="2018-07-29T18:54:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceB()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="radioChoiceB" duration-ms="181" started-at="2018-07-29T18:54:09Z" finished-at="2018-07-29T18:54:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceB -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:09Z" finished-at="2018-07-29T18:54:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="beforeMethod" is-config="true" duration-ms="98" started-at="2018-07-29T18:54:09Z" finished-at="2018-07-29T18:54:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceC()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="radioChoiceC" duration-ms="188" started-at="2018-07-29T18:54:09Z" finished-at="2018-07-29T18:54:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceC -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:09Z" finished-at="2018-07-29T18:54:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="beforeMethod" is-config="true" duration-ms="99" started-at="2018-07-29T18:54:09Z" finished-at="2018-07-29T18:54:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioDefault()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="radioDefault" duration-ms="110" started-at="2018-07-29T18:54:09Z" finished-at="2018-07-29T18:54:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioDefault -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="afterClass" is-config="true" duration-ms="63" started-at="2018-07-29T18:54:10Z" finished-at="2018-07-29T18:54:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:10Z" finished-at="2018-07-29T18:54:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:16Z" finished-at="2018-07-29T18:54:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:cases.RadioButtonCase@50cbc42f]" name="afterSuite" is-config="true" duration-ms="1" started-at="2018-07-29T18:54:16Z" finished-at="2018-07-29T18:54:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- cases.RadioButtonCase -->
    </test> <!-- dynamic test 2 -->
  </suite> <!-- dynamic suite with linux/localhost/chrome/10 -->
  <suite name="dynamic suite with linux/dooper/firefox/10" duration-ms="13" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
    <groups>
    </groups>
    <test name="dynamic test 1" duration-ms="4" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
      <class name="cases.TextFieldCase">
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@5e025e70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="testTextField()[pri:2, instance:cases.TextFieldCase@5e025e70]" name="testTextField" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTextField -->
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:cases.TextFieldCase@5e025e70]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@5e025e70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.TextFieldCase@5e025e70]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@5e025e70]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="intentionalFailTextField()[pri:2, instance:cases.TextFieldCase@5e025e70]" name="intentionalFailTextField" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailTextField -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@5e025e70]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- cases.TextFieldCase -->
      <class name="cases.CheckBoxCase">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.CheckBoxCase@11531931]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@11531931]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.CheckBoxCase@11531931]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="checkBoxAll()[pri:2, instance:cases.CheckBoxCase@11531931]" name="checkBoxAll" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxAll -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@11531931]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@11531931]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="checkBoxNone()[pri:2, instance:cases.CheckBoxCase@11531931]" name="checkBoxNone" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxNone -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@11531931]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@11531931]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@11531931]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@11531931]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@11531931]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="checkBoxOneThree()[pri:2, instance:cases.CheckBoxCase@11531931]" name="checkBoxOneThree" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneThree -->
        <test-method status="SKIP" signature="checkBoxOneTwo()[pri:2, instance:cases.CheckBoxCase@11531931]" name="checkBoxOneTwo" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneTwo -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@11531931]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="checkBoxTwoThree()[pri:2, instance:cases.CheckBoxCase@11531931]" name="checkBoxTwoThree" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxTwoThree -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@11531931]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@11531931]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@11531931]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="intentionalFailcheckBox()[pri:2, instance:cases.CheckBoxCase@11531931]" name="intentionalFailcheckBox" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailcheckBox -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.CheckBoxCase@11531931]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:cases.CheckBoxCase@11531931]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- cases.CheckBoxCase -->
    </test> <!-- dynamic test 1 -->
    <test name="dynamic test 2" duration-ms="3" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
      <class name="cases.DropDownCase">
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.DropDownCase@5ba23b66]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="dropDownOnion()[pri:0, instance:cases.DropDownCase@5ba23b66]" name="dropDownOnion" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownOnion -->
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:cases.DropDownCase@5ba23b66]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="dropDownTomato()[pri:0, instance:cases.DropDownCase@5ba23b66]" name="dropDownTomato" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownTomato -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.DropDownCase@5ba23b66]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@5ba23b66]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.DropDownCase@5ba23b66]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@5ba23b66]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@5ba23b66]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@5ba23b66]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="dropDownMustard()[pri:0, instance:cases.DropDownCase@5ba23b66]" name="dropDownMustard" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownMustard -->
        <test-method status="SKIP" signature="dropDownDefault()[pri:0, instance:cases.DropDownCase@5ba23b66]" name="dropDownDefault" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownDefault -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.DropDownCase@5ba23b66]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.DropDownCase@5ba23b66]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.DropDownCase -->
      <class name="cases.TextAreaCase">
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@2ff4f00f]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:cases.TextAreaCase@2ff4f00f]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="textAreaLongString()[pri:0, instance:cases.TextAreaCase@2ff4f00f]" name="textAreaLongString" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaLongString -->
        <test-method status="SKIP" signature="textAreaWithEnter()[pri:0, instance:cases.TextAreaCase@2ff4f00f]" name="textAreaWithEnter" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaWithEnter -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@2ff4f00f]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@2ff4f00f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.TextAreaCase@2ff4f00f]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@2ff4f00f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- cases.TextAreaCase -->
      <class name="cases.RadioButtonCase">
        <test-method status="PASS" signature="beforeSuite(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="beforeSuite" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[linux]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dooper]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="SKIP" signature="radioChoiceA()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="radioChoiceA" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceA -->
        <test-method status="FAIL" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="radioChoiceC()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="radioChoiceC" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceC -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="radioChoiceB()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="radioChoiceB" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceB -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="radioDefault()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="radioDefault" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioDefault -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="SKIP" signature="afterSuite()[pri:0, instance:cases.RadioButtonCase@6debcae2]" name="afterSuite" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- cases.RadioButtonCase -->
    </test> <!-- dynamic test 2 -->
  </suite> <!-- dynamic suite with linux/dooper/firefox/10 -->
  <suite name="dynamic suite with linux/localhost/pooper/10" duration-ms="33686" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:56:18Z">
    <groups>
    </groups>
    <test name="dynamic test 1" duration-ms="14252" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:58Z">
      <class name="cases.TextFieldCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextFieldCase@2c8d66b2]" name="beforeClass" is-config="true" duration-ms="3356" started-at="2018-07-29T18:55:53Z" finished-at="2018-07-29T18:55:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@2c8d66b2]" name="beforeMethod" is-config="true" duration-ms="139" started-at="2018-07-29T18:55:56Z" finished-at="2018-07-29T18:55:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="intentionalFailTextField()[pri:2, instance:cases.TextFieldCase@2c8d66b2]" name="intentionalFailTextField" duration-ms="194" started-at="2018-07-29T18:55:56Z" finished-at="2018-07-29T18:55:56Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [This should fail] but found [Please fail]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [This should fail] but found [Please fail]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at cases.TextFieldCase.intentionalFailTextField(TextFieldCase.java:33)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[<a href='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailTextField_29Jul2018_01-55-56-877.png'> <img src='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailTextField_29Jul2018_01-55-56-877.png' height='100' width='100'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- intentionalFailTextField -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@2c8d66b2]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:56Z" finished-at="2018-07-29T18:55:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@2c8d66b2]" name="beforeMethod" is-config="true" duration-ms="137" started-at="2018-07-29T18:55:56Z" finished-at="2018-07-29T18:55:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testTextField()[pri:2, instance:cases.TextFieldCase@2c8d66b2]" name="testTextField" duration-ms="206" started-at="2018-07-29T18:55:57Z" finished-at="2018-07-29T18:55:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTextField -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextFieldCase@2c8d66b2]" name="afterClass" is-config="true" duration-ms="1586" started-at="2018-07-29T18:55:57Z" finished-at="2018-07-29T18:55:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@2c8d66b2]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:57Z" finished-at="2018-07-29T18:55:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- cases.TextFieldCase -->
      <class name="cases.CheckBoxCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="beforeClass" is-config="true" duration-ms="3050" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="beforeMethod" is-config="true" duration-ms="169" started-at="2018-07-29T18:55:47Z" finished-at="2018-07-29T18:55:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxAll()[pri:2, instance:cases.CheckBoxCase@35bbe5e8]" name="checkBoxAll" duration-ms="987" started-at="2018-07-29T18:55:47Z" finished-at="2018-07-29T18:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxAll -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="beforeMethod" is-config="true" duration-ms="129" started-at="2018-07-29T18:55:48Z" finished-at="2018-07-29T18:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:48Z" finished-at="2018-07-29T18:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkBoxNone()[pri:2, instance:cases.CheckBoxCase@35bbe5e8]" name="checkBoxNone" duration-ms="77" started-at="2018-07-29T18:55:48Z" finished-at="2018-07-29T18:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxNone -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="beforeMethod" is-config="true" duration-ms="110" started-at="2018-07-29T18:55:48Z" finished-at="2018-07-29T18:55:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:48Z" finished-at="2018-07-29T18:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkBoxOneThree()[pri:2, instance:cases.CheckBoxCase@35bbe5e8]" name="checkBoxOneThree" duration-ms="617" started-at="2018-07-29T18:55:49Z" finished-at="2018-07-29T18:55:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneThree -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:49Z" finished-at="2018-07-29T18:55:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="beforeMethod" is-config="true" duration-ms="140" started-at="2018-07-29T18:55:49Z" finished-at="2018-07-29T18:55:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxOneTwo()[pri:2, instance:cases.CheckBoxCase@35bbe5e8]" name="checkBoxOneTwo" duration-ms="567" started-at="2018-07-29T18:55:49Z" finished-at="2018-07-29T18:55:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneTwo -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="beforeMethod" is-config="true" duration-ms="145" started-at="2018-07-29T18:55:50Z" finished-at="2018-07-29T18:55:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:50Z" finished-at="2018-07-29T18:55:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkBoxTwoThree()[pri:2, instance:cases.CheckBoxCase@35bbe5e8]" name="checkBoxTwoThree" duration-ms="579" started-at="2018-07-29T18:55:50Z" finished-at="2018-07-29T18:55:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxTwoThree -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:51Z" finished-at="2018-07-29T18:55:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="beforeMethod" is-config="true" duration-ms="107" started-at="2018-07-29T18:55:51Z" finished-at="2018-07-29T18:55:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="intentionalFailcheckBox()[pri:2, instance:cases.CheckBoxCase@35bbe5e8]" name="intentionalFailcheckBox" duration-ms="630" started-at="2018-07-29T18:55:51Z" finished-at="2018-07-29T18:55:51Z">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:86)
at org.junit.Assert.assertTrue(Assert.java:41)
at org.junit.Assert.assertTrue(Assert.java:52)
at cases.CheckBoxCase.intentionalFailcheckBox(CheckBoxCase.java:62)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[<a href='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailcheckBox_29Jul2018_01-55-51-956.png'> <img src='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailcheckBox_29Jul2018_01-55-51-956.png' height='100' width='100'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- intentionalFailcheckBox -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:51Z" finished-at="2018-07-29T18:55:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="afterClass" is-config="true" duration-ms="1126" started-at="2018-07-29T18:55:51Z" finished-at="2018-07-29T18:55:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.CheckBoxCase@35bbe5e8]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:58Z" finished-at="2018-07-29T18:55:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- cases.CheckBoxCase -->
    </test> <!-- dynamic test 1 -->
    <test name="dynamic test 2" duration-ms="19431" started-at="2018-07-29T18:55:58Z" finished-at="2018-07-29T18:56:18Z">
      <class name="cases.DropDownCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.DropDownCase@2f7c7260]" name="beforeClass" is-config="true" duration-ms="3158" started-at="2018-07-29T18:56:05Z" finished-at="2018-07-29T18:56:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@2f7c7260]" name="beforeMethod" is-config="true" duration-ms="143" started-at="2018-07-29T18:56:08Z" finished-at="2018-07-29T18:56:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownDefault()[pri:0, instance:cases.DropDownCase@2f7c7260]" name="dropDownDefault" duration-ms="186" started-at="2018-07-29T18:56:08Z" finished-at="2018-07-29T18:56:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownDefault -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@2f7c7260]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:08Z" finished-at="2018-07-29T18:56:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@2f7c7260]" name="beforeMethod" is-config="true" duration-ms="140" started-at="2018-07-29T18:56:08Z" finished-at="2018-07-29T18:56:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownMustard()[pri:0, instance:cases.DropDownCase@2f7c7260]" name="dropDownMustard" duration-ms="256" started-at="2018-07-29T18:56:09Z" finished-at="2018-07-29T18:56:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownMustard -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@2f7c7260]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:09Z" finished-at="2018-07-29T18:56:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@2f7c7260]" name="beforeMethod" is-config="true" duration-ms="264" started-at="2018-07-29T18:56:09Z" finished-at="2018-07-29T18:56:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownOnion()[pri:0, instance:cases.DropDownCase@2f7c7260]" name="dropDownOnion" duration-ms="419" started-at="2018-07-29T18:56:09Z" finished-at="2018-07-29T18:56:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownOnion -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@2f7c7260]" name="beforeMethod" is-config="true" duration-ms="145" started-at="2018-07-29T18:56:10Z" finished-at="2018-07-29T18:56:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@2f7c7260]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:10Z" finished-at="2018-07-29T18:56:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="dropDownTomato()[pri:0, instance:cases.DropDownCase@2f7c7260]" name="dropDownTomato" duration-ms="406" started-at="2018-07-29T18:56:10Z" finished-at="2018-07-29T18:56:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownTomato -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.DropDownCase@2f7c7260]" name="afterClass" is-config="true" duration-ms="1572" started-at="2018-07-29T18:56:10Z" finished-at="2018-07-29T18:56:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@2f7c7260]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:10Z" finished-at="2018-07-29T18:56:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- cases.DropDownCase -->
      <class name="cases.TextAreaCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextAreaCase@2d209079]" name="beforeClass" is-config="true" duration-ms="3270" started-at="2018-07-29T18:56:12Z" finished-at="2018-07-29T18:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@2d209079]" name="beforeMethod" is-config="true" duration-ms="247" started-at="2018-07-29T18:56:15Z" finished-at="2018-07-29T18:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textAreaLongString()[pri:0, instance:cases.TextAreaCase@2d209079]" name="textAreaLongString" duration-ms="237" started-at="2018-07-29T18:56:15Z" finished-at="2018-07-29T18:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaLongString -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@2d209079]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:15Z" finished-at="2018-07-29T18:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@2d209079]" name="beforeMethod" is-config="true" duration-ms="120" started-at="2018-07-29T18:56:15Z" finished-at="2018-07-29T18:56:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textAreaWithEnter()[pri:0, instance:cases.TextAreaCase@2d209079]" name="textAreaWithEnter" duration-ms="407" started-at="2018-07-29T18:56:16Z" finished-at="2018-07-29T18:56:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaWithEnter -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextAreaCase@2d209079]" name="afterClass" is-config="true" duration-ms="1811" started-at="2018-07-29T18:56:16Z" finished-at="2018-07-29T18:56:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@2d209079]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:16Z" finished-at="2018-07-29T18:56:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- cases.TextAreaCase -->
      <class name="cases.RadioButtonCase">
        <test-method status="PASS" signature="beforeSuite(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="beforeSuite" is-config="true" duration-ms="1" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[linux]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[localhost]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[pooper]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:58Z" finished-at="2018-07-29T18:55:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="beforeClass" is-config="true" duration-ms="3284" started-at="2018-07-29T18:55:58Z" finished-at="2018-07-29T18:56:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="beforeMethod" is-config="true" duration-ms="173" started-at="2018-07-29T18:56:02Z" finished-at="2018-07-29T18:56:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceA()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="radioChoiceA" duration-ms="359" started-at="2018-07-29T18:56:02Z" finished-at="2018-07-29T18:56:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceA -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="beforeMethod" is-config="true" duration-ms="114" started-at="2018-07-29T18:56:02Z" finished-at="2018-07-29T18:56:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:02Z" finished-at="2018-07-29T18:56:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="radioChoiceB()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="radioChoiceB" duration-ms="380" started-at="2018-07-29T18:56:02Z" finished-at="2018-07-29T18:56:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceB -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-29T18:56:03Z" finished-at="2018-07-29T18:56:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="beforeMethod" is-config="true" duration-ms="170" started-at="2018-07-29T18:56:03Z" finished-at="2018-07-29T18:56:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceC()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="radioChoiceC" duration-ms="397" started-at="2018-07-29T18:56:03Z" finished-at="2018-07-29T18:56:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceC -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="beforeMethod" is-config="true" duration-ms="116" started-at="2018-07-29T18:56:03Z" finished-at="2018-07-29T18:56:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:03Z" finished-at="2018-07-29T18:56:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="radioDefault()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="radioDefault" duration-ms="56" started-at="2018-07-29T18:56:03Z" finished-at="2018-07-29T18:56:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioDefault -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:03Z" finished-at="2018-07-29T18:56:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="afterClass" is-config="true" duration-ms="1592" started-at="2018-07-29T18:56:03Z" finished-at="2018-07-29T18:56:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:18Z" finished-at="2018-07-29T18:56:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:cases.RadioButtonCase@1b0375b3]" name="afterSuite" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:18Z" finished-at="2018-07-29T18:56:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- cases.RadioButtonCase -->
    </test> <!-- dynamic test 2 -->
  </suite> <!-- dynamic suite with linux/localhost/pooper/10 -->
  <suite name="dynamic suite with linux/localhost/firefox/vaya con dios" duration-ms="23" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
    <groups>
    </groups>
    <test name="dynamic test 1" duration-ms="8" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
      <class name="cases.TextFieldCase">
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@b684286]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:cases.TextFieldCase@b684286]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="intentionalFailTextField()[pri:2, instance:cases.TextFieldCase@b684286]" name="intentionalFailTextField" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailTextField -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@b684286]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="testTextField()[pri:2, instance:cases.TextFieldCase@b684286]" name="testTextField" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTextField -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@b684286]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.TextFieldCase@b684286]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@b684286]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
      </class> <!-- cases.TextFieldCase -->
      <class name="cases.CheckBoxCase">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.CheckBoxCase@34ce8af7]" name="beforeTest" is-config="true" duration-ms="1" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.CheckBoxCase@34ce8af7]" name="beforeClass" is-config="true" duration-ms="1" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="checkBoxAll()[pri:2, instance:cases.CheckBoxCase@34ce8af7]" name="checkBoxAll" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxAll -->
        <test-method status="FAIL" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@34ce8af7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@34ce8af7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@34ce8af7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="checkBoxNone()[pri:2, instance:cases.CheckBoxCase@34ce8af7]" name="checkBoxNone" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxNone -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@34ce8af7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="checkBoxOneTwo()[pri:2, instance:cases.CheckBoxCase@34ce8af7]" name="checkBoxOneTwo" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneTwo -->
        <test-method status="SKIP" signature="checkBoxOneThree()[pri:2, instance:cases.CheckBoxCase@34ce8af7]" name="checkBoxOneThree" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneThree -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@34ce8af7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@34ce8af7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@34ce8af7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@34ce8af7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="intentionalFailcheckBox()[pri:2, instance:cases.CheckBoxCase@34ce8af7]" name="intentionalFailcheckBox" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailcheckBox -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@34ce8af7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="checkBoxTwoThree()[pri:2, instance:cases.CheckBoxCase@34ce8af7]" name="checkBoxTwoThree" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxTwoThree -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@34ce8af7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@34ce8af7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@34ce8af7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.CheckBoxCase@34ce8af7]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:cases.CheckBoxCase@34ce8af7]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- cases.CheckBoxCase -->
    </test> <!-- dynamic test 1 -->
    <test name="dynamic test 2" duration-ms="4" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
      <class name="cases.DropDownCase">
        <test-method status="SKIP" signature="dropDownMustard()[pri:0, instance:cases.DropDownCase@30c7da1e]" name="dropDownMustard" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownMustard -->
        <test-method status="SKIP" signature="dropDownDefault()[pri:0, instance:cases.DropDownCase@30c7da1e]" name="dropDownDefault" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownDefault -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@30c7da1e]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.DropDownCase@30c7da1e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:cases.DropDownCase@30c7da1e]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@30c7da1e]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.DropDownCase@30c7da1e]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.DropDownCase@30c7da1e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.DropDownCase@30c7da1e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="dropDownOnion()[pri:0, instance:cases.DropDownCase@30c7da1e]" name="dropDownOnion" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownOnion -->
        <test-method status="SKIP" signature="dropDownTomato()[pri:0, instance:cases.DropDownCase@30c7da1e]" name="dropDownTomato" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownTomato -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@30c7da1e]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@30c7da1e]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.DropDownCase@30c7da1e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- cases.DropDownCase -->
      <class name="cases.TextAreaCase">
        <test-method status="SKIP" signature="textAreaLongString()[pri:0, instance:cases.TextAreaCase@5b464ce8]" name="textAreaLongString" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaLongString -->
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:cases.TextAreaCase@5b464ce8]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@5b464ce8]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@5b464ce8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@5b464ce8]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="textAreaWithEnter()[pri:0, instance:cases.TextAreaCase@5b464ce8]" name="textAreaWithEnter" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaWithEnter -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@5b464ce8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.TextAreaCase@5b464ce8]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.TextAreaCase -->
      <class name="cases.RadioButtonCase">
        <test-method status="PASS" signature="beforeSuite(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cases.RadioButtonCase@340f438e]" name="beforeSuite" is-config="true" duration-ms="1" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[linux]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[localhost]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[vaya con dios]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.RadioButtonCase@340f438e]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@340f438e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="radioChoiceB()[pri:0, instance:cases.RadioButtonCase@340f438e]" name="radioChoiceB" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceB -->
        <test-method status="FAIL" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@340f438e]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="radioChoiceA()[pri:0, instance:cases.RadioButtonCase@340f438e]" name="radioChoiceA" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceA -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.RadioButtonCase@340f438e]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@340f438e]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@340f438e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@340f438e]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@340f438e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@340f438e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="radioDefault()[pri:0, instance:cases.RadioButtonCase@340f438e]" name="radioDefault" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioDefault -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@340f438e]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="radioChoiceC()[pri:0, instance:cases.RadioButtonCase@340f438e]" name="radioChoiceC" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeMethod(PapaBless.java:337)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceC -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.RadioButtonCase@340f438e]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:cases.RadioButtonCase@340f438e]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="SKIP" signature="afterSuite()[pri:0, instance:cases.RadioButtonCase@340f438e]" name="afterSuite" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- cases.RadioButtonCase -->
    </test> <!-- dynamic test 2 -->
  </suite> <!-- dynamic suite with linux/localhost/firefox/vaya con dios -->
  <suite name="dynamic suite with linux/localhost/firefox/10" duration-ms="37766" started-at="2018-07-29T18:54:16Z" finished-at="2018-07-29T18:54:54Z">
    <groups>
    </groups>
    <test name="dynamic test 1" duration-ms="18023" started-at="2018-07-29T18:54:16Z" finished-at="2018-07-29T18:54:34Z">
      <class name="cases.TextFieldCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextFieldCase@21a06946]" name="beforeClass" is-config="true" duration-ms="3181" started-at="2018-07-29T18:54:28Z" finished-at="2018-07-29T18:54:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@21a06946]" name="beforeMethod" is-config="true" duration-ms="159" started-at="2018-07-29T18:54:31Z" finished-at="2018-07-29T18:54:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="intentionalFailTextField()[pri:2, instance:cases.TextFieldCase@21a06946]" name="intentionalFailTextField" duration-ms="237" started-at="2018-07-29T18:54:31Z" finished-at="2018-07-29T18:54:32Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [This should fail] but found [Please fail]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [This should fail] but found [Please fail]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at cases.TextFieldCase.intentionalFailTextField(TextFieldCase.java:33)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[<a href='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailTextField_29Jul2018_01-54-32-115.png'> <img src='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailTextField_29Jul2018_01-54-32-115.png' height='100' width='100'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- intentionalFailTextField -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@21a06946]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:32Z" finished-at="2018-07-29T18:54:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@21a06946]" name="beforeMethod" is-config="true" duration-ms="174" started-at="2018-07-29T18:54:32Z" finished-at="2018-07-29T18:54:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testTextField()[pri:2, instance:cases.TextFieldCase@21a06946]" name="testTextField" duration-ms="231" started-at="2018-07-29T18:54:32Z" finished-at="2018-07-29T18:54:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTextField -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextFieldCase@21a06946]" name="afterClass" is-config="true" duration-ms="1791" started-at="2018-07-29T18:54:32Z" finished-at="2018-07-29T18:54:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@21a06946]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:32Z" finished-at="2018-07-29T18:54:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- cases.TextFieldCase -->
      <class name="cases.CheckBoxCase">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="beforeTest" is-config="true" duration-ms="1" started-at="2018-07-29T18:54:16Z" finished-at="2018-07-29T18:54:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="beforeClass" is-config="true" duration-ms="4908" started-at="2018-07-29T18:54:16Z" finished-at="2018-07-29T18:54:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="beforeMethod" is-config="true" duration-ms="1518" started-at="2018-07-29T18:54:21Z" finished-at="2018-07-29T18:54:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxAll()[pri:2, instance:cases.CheckBoxCase@483bf400]" name="checkBoxAll" duration-ms="895" started-at="2018-07-29T18:54:22Z" finished-at="2018-07-29T18:54:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxAll -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:23Z" finished-at="2018-07-29T18:54:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="beforeMethod" is-config="true" duration-ms="170" started-at="2018-07-29T18:54:23Z" finished-at="2018-07-29T18:54:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxNone()[pri:2, instance:cases.CheckBoxCase@483bf400]" name="checkBoxNone" duration-ms="70" started-at="2018-07-29T18:54:23Z" finished-at="2018-07-29T18:54:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxNone -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:23Z" finished-at="2018-07-29T18:54:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="beforeMethod" is-config="true" duration-ms="120" started-at="2018-07-29T18:54:23Z" finished-at="2018-07-29T18:54:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxOneThree()[pri:2, instance:cases.CheckBoxCase@483bf400]" name="checkBoxOneThree" duration-ms="628" started-at="2018-07-29T18:54:23Z" finished-at="2018-07-29T18:54:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneThree -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-29T18:54:24Z" finished-at="2018-07-29T18:54:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="beforeMethod" is-config="true" duration-ms="122" started-at="2018-07-29T18:54:24Z" finished-at="2018-07-29T18:54:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxOneTwo()[pri:2, instance:cases.CheckBoxCase@483bf400]" name="checkBoxOneTwo" duration-ms="647" started-at="2018-07-29T18:54:24Z" finished-at="2018-07-29T18:54:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneTwo -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:25Z" finished-at="2018-07-29T18:54:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="beforeMethod" is-config="true" duration-ms="117" started-at="2018-07-29T18:54:25Z" finished-at="2018-07-29T18:54:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxTwoThree()[pri:2, instance:cases.CheckBoxCase@483bf400]" name="checkBoxTwoThree" duration-ms="633" started-at="2018-07-29T18:54:25Z" finished-at="2018-07-29T18:54:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxTwoThree -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:26Z" finished-at="2018-07-29T18:54:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="beforeMethod" is-config="true" duration-ms="107" started-at="2018-07-29T18:54:26Z" finished-at="2018-07-29T18:54:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="intentionalFailcheckBox()[pri:2, instance:cases.CheckBoxCase@483bf400]" name="intentionalFailcheckBox" duration-ms="640" started-at="2018-07-29T18:54:26Z" finished-at="2018-07-29T18:54:26Z">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:86)
at org.junit.Assert.assertTrue(Assert.java:41)
at org.junit.Assert.assertTrue(Assert.java:52)
at cases.CheckBoxCase.intentionalFailcheckBox(CheckBoxCase.java:62)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[<a href='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailcheckBox_29Jul2018_01-54-27-055.png'> <img src='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailcheckBox_29Jul2018_01-54-27-055.png' height='100' width='100'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- intentionalFailcheckBox -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-29T18:54:27Z" finished-at="2018-07-29T18:54:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="afterClass" is-config="true" duration-ms="1379" started-at="2018-07-29T18:54:27Z" finished-at="2018-07-29T18:54:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.CheckBoxCase@483bf400]" name="afterTest" is-config="true" duration-ms="1" started-at="2018-07-29T18:54:34Z" finished-at="2018-07-29T18:54:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- cases.CheckBoxCase -->
    </test> <!-- dynamic test 1 -->
    <test name="dynamic test 2" duration-ms="19725" started-at="2018-07-29T18:54:34Z" finished-at="2018-07-29T18:54:54Z">
      <class name="cases.DropDownCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.DropDownCase@4b6995df]" name="beforeClass" is-config="true" duration-ms="3193" started-at="2018-07-29T18:54:40Z" finished-at="2018-07-29T18:54:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@4b6995df]" name="beforeMethod" is-config="true" duration-ms="250" started-at="2018-07-29T18:54:44Z" finished-at="2018-07-29T18:54:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownDefault()[pri:0, instance:cases.DropDownCase@4b6995df]" name="dropDownDefault" duration-ms="158" started-at="2018-07-29T18:54:44Z" finished-at="2018-07-29T18:54:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownDefault -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@4b6995df]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-29T18:54:44Z" finished-at="2018-07-29T18:54:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@4b6995df]" name="beforeMethod" is-config="true" duration-ms="175" started-at="2018-07-29T18:54:44Z" finished-at="2018-07-29T18:54:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownMustard()[pri:0, instance:cases.DropDownCase@4b6995df]" name="dropDownMustard" duration-ms="220" started-at="2018-07-29T18:54:44Z" finished-at="2018-07-29T18:54:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownMustard -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@4b6995df]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-29T18:54:44Z" finished-at="2018-07-29T18:54:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@4b6995df]" name="beforeMethod" is-config="true" duration-ms="227" started-at="2018-07-29T18:54:44Z" finished-at="2018-07-29T18:54:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownOnion()[pri:0, instance:cases.DropDownCase@4b6995df]" name="dropDownOnion" duration-ms="410" started-at="2018-07-29T18:54:45Z" finished-at="2018-07-29T18:54:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownOnion -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@4b6995df]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:45Z" finished-at="2018-07-29T18:54:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@4b6995df]" name="beforeMethod" is-config="true" duration-ms="110" started-at="2018-07-29T18:54:45Z" finished-at="2018-07-29T18:54:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownTomato()[pri:0, instance:cases.DropDownCase@4b6995df]" name="dropDownTomato" duration-ms="391" started-at="2018-07-29T18:54:45Z" finished-at="2018-07-29T18:54:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownTomato -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@4b6995df]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:46Z" finished-at="2018-07-29T18:54:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.DropDownCase@4b6995df]" name="afterClass" is-config="true" duration-ms="1580" started-at="2018-07-29T18:54:46Z" finished-at="2018-07-29T18:54:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.DropDownCase -->
      <class name="cases.TextAreaCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextAreaCase@2fc14f68]" name="beforeClass" is-config="true" duration-ms="3081" started-at="2018-07-29T18:54:47Z" finished-at="2018-07-29T18:54:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@2fc14f68]" name="beforeMethod" is-config="true" duration-ms="285" started-at="2018-07-29T18:54:50Z" finished-at="2018-07-29T18:54:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textAreaLongString()[pri:0, instance:cases.TextAreaCase@2fc14f68]" name="textAreaLongString" duration-ms="679" started-at="2018-07-29T18:54:51Z" finished-at="2018-07-29T18:54:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaLongString -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@2fc14f68]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:51Z" finished-at="2018-07-29T18:54:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@2fc14f68]" name="beforeMethod" is-config="true" duration-ms="122" started-at="2018-07-29T18:54:51Z" finished-at="2018-07-29T18:54:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textAreaWithEnter()[pri:0, instance:cases.TextAreaCase@2fc14f68]" name="textAreaWithEnter" duration-ms="607" started-at="2018-07-29T18:54:51Z" finished-at="2018-07-29T18:54:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaWithEnter -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@2fc14f68]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:52Z" finished-at="2018-07-29T18:54:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextAreaCase@2fc14f68]" name="afterClass" is-config="true" duration-ms="1582" started-at="2018-07-29T18:54:52Z" finished-at="2018-07-29T18:54:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.TextAreaCase -->
      <class name="cases.RadioButtonCase">
        <test-method status="PASS" signature="beforeSuite(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="beforeSuite" is-config="true" duration-ms="1" started-at="2018-07-29T18:54:16Z" finished-at="2018-07-29T18:54:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[linux]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[localhost]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:34Z" finished-at="2018-07-29T18:54:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="beforeClass" is-config="true" duration-ms="3159" started-at="2018-07-29T18:54:34Z" finished-at="2018-07-29T18:54:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="beforeMethod" is-config="true" duration-ms="259" started-at="2018-07-29T18:54:37Z" finished-at="2018-07-29T18:54:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceA()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="radioChoiceA" duration-ms="461" started-at="2018-07-29T18:54:37Z" finished-at="2018-07-29T18:54:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceA -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-29T18:54:38Z" finished-at="2018-07-29T18:54:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="beforeMethod" is-config="true" duration-ms="142" started-at="2018-07-29T18:54:38Z" finished-at="2018-07-29T18:54:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceB()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="radioChoiceB" duration-ms="298" started-at="2018-07-29T18:54:38Z" finished-at="2018-07-29T18:54:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceB -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:38Z" finished-at="2018-07-29T18:54:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="beforeMethod" is-config="true" duration-ms="133" started-at="2018-07-29T18:54:38Z" finished-at="2018-07-29T18:54:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceC()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="radioChoiceC" duration-ms="431" started-at="2018-07-29T18:54:38Z" finished-at="2018-07-29T18:54:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceC -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:39Z" finished-at="2018-07-29T18:54:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="beforeMethod" is-config="true" duration-ms="106" started-at="2018-07-29T18:54:39Z" finished-at="2018-07-29T18:54:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioDefault()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="radioDefault" duration-ms="62" started-at="2018-07-29T18:54:39Z" finished-at="2018-07-29T18:54:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioDefault -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:39Z" finished-at="2018-07-29T18:54:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="afterClass" is-config="true" duration-ms="1594" started-at="2018-07-29T18:54:39Z" finished-at="2018-07-29T18:54:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:54Z" finished-at="2018-07-29T18:54:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:cases.RadioButtonCase@5474c6c]" name="afterSuite" is-config="true" duration-ms="0" started-at="2018-07-29T18:54:54Z" finished-at="2018-07-29T18:54:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- cases.RadioButtonCase -->
    </test> <!-- dynamic test 2 -->
  </suite> <!-- dynamic suite with linux/localhost/firefox/10 -->
  <suite name="dynamic suite with linux/localhost/ie/10" duration-ms="33561" started-at="2018-07-29T18:56:18Z" finished-at="2018-07-29T18:56:51Z">
    <groups>
    </groups>
    <test name="dynamic test 1" duration-ms="14683" started-at="2018-07-29T18:56:18Z" finished-at="2018-07-29T18:56:32Z">
      <class name="cases.TextFieldCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextFieldCase@4c203ea1]" name="beforeClass" is-config="true" duration-ms="3379" started-at="2018-07-29T18:56:27Z" finished-at="2018-07-29T18:56:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@4c203ea1]" name="beforeMethod" is-config="true" duration-ms="149" started-at="2018-07-29T18:56:30Z" finished-at="2018-07-29T18:56:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="intentionalFailTextField()[pri:2, instance:cases.TextFieldCase@4c203ea1]" name="intentionalFailTextField" duration-ms="183" started-at="2018-07-29T18:56:30Z" finished-at="2018-07-29T18:56:30Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [This should fail] but found [Please fail]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [This should fail] but found [Please fail]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at cases.TextFieldCase.intentionalFailTextField(TextFieldCase.java:33)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[<a href='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailTextField_29Jul2018_01-56-30-864.png'> <img src='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailTextField_29Jul2018_01-56-30-864.png' height='100' width='100'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- intentionalFailTextField -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@4c203ea1]" name="beforeMethod" is-config="true" duration-ms="120" started-at="2018-07-29T18:56:30Z" finished-at="2018-07-29T18:56:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@4c203ea1]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:30Z" finished-at="2018-07-29T18:56:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="testTextField()[pri:2, instance:cases.TextFieldCase@4c203ea1]" name="testTextField" duration-ms="212" started-at="2018-07-29T18:56:30Z" finished-at="2018-07-29T18:56:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTextField -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@4c203ea1]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-29T18:56:31Z" finished-at="2018-07-29T18:56:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextFieldCase@4c203ea1]" name="afterClass" is-config="true" duration-ms="1731" started-at="2018-07-29T18:56:31Z" finished-at="2018-07-29T18:56:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.TextFieldCase -->
      <class name="cases.CheckBoxCase">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:18Z" finished-at="2018-07-29T18:56:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="beforeClass" is-config="true" duration-ms="3263" started-at="2018-07-29T18:56:18Z" finished-at="2018-07-29T18:56:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="beforeMethod" is-config="true" duration-ms="143" started-at="2018-07-29T18:56:21Z" finished-at="2018-07-29T18:56:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxAll()[pri:2, instance:cases.CheckBoxCase@7c75222b]" name="checkBoxAll" duration-ms="968" started-at="2018-07-29T18:56:21Z" finished-at="2018-07-29T18:56:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxAll -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="beforeMethod" is-config="true" duration-ms="114" started-at="2018-07-29T18:56:22Z" finished-at="2018-07-29T18:56:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:22Z" finished-at="2018-07-29T18:56:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkBoxNone()[pri:2, instance:cases.CheckBoxCase@7c75222b]" name="checkBoxNone" duration-ms="61" started-at="2018-07-29T18:56:22Z" finished-at="2018-07-29T18:56:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxNone -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:22Z" finished-at="2018-07-29T18:56:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="beforeMethod" is-config="true" duration-ms="154" started-at="2018-07-29T18:56:22Z" finished-at="2018-07-29T18:56:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxOneThree()[pri:2, instance:cases.CheckBoxCase@7c75222b]" name="checkBoxOneThree" duration-ms="609" started-at="2018-07-29T18:56:22Z" finished-at="2018-07-29T18:56:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneThree -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="beforeMethod" is-config="true" duration-ms="140" started-at="2018-07-29T18:56:23Z" finished-at="2018-07-29T18:56:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:23Z" finished-at="2018-07-29T18:56:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkBoxOneTwo()[pri:2, instance:cases.CheckBoxCase@7c75222b]" name="checkBoxOneTwo" duration-ms="626" started-at="2018-07-29T18:56:23Z" finished-at="2018-07-29T18:56:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneTwo -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:24Z" finished-at="2018-07-29T18:56:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="beforeMethod" is-config="true" duration-ms="113" started-at="2018-07-29T18:56:24Z" finished-at="2018-07-29T18:56:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxTwoThree()[pri:2, instance:cases.CheckBoxCase@7c75222b]" name="checkBoxTwoThree" duration-ms="589" started-at="2018-07-29T18:56:24Z" finished-at="2018-07-29T18:56:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxTwoThree -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="beforeMethod" is-config="true" duration-ms="122" started-at="2018-07-29T18:56:25Z" finished-at="2018-07-29T18:56:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:25Z" finished-at="2018-07-29T18:56:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="intentionalFailcheckBox()[pri:2, instance:cases.CheckBoxCase@7c75222b]" name="intentionalFailcheckBox" duration-ms="620" started-at="2018-07-29T18:56:25Z" finished-at="2018-07-29T18:56:25Z">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:86)
at org.junit.Assert.assertTrue(Assert.java:41)
at org.junit.Assert.assertTrue(Assert.java:52)
at cases.CheckBoxCase.intentionalFailcheckBox(CheckBoxCase.java:62)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[<a href='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailcheckBox_29Jul2018_01-56-25-865.png'> <img src='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailcheckBox_29Jul2018_01-56-25-865.png' height='100' width='100'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- intentionalFailcheckBox -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="afterClass" is-config="true" duration-ms="1184" started-at="2018-07-29T18:56:25Z" finished-at="2018-07-29T18:56:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:25Z" finished-at="2018-07-29T18:56:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.CheckBoxCase@7c75222b]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:32Z" finished-at="2018-07-29T18:56:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- cases.CheckBoxCase -->
    </test> <!-- dynamic test 1 -->
    <test name="dynamic test 2" duration-ms="18874" started-at="2018-07-29T18:56:32Z" finished-at="2018-07-29T18:56:51Z">
      <class name="cases.DropDownCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.DropDownCase@43a25848]" name="beforeClass" is-config="true" duration-ms="3083" started-at="2018-07-29T18:56:39Z" finished-at="2018-07-29T18:56:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@43a25848]" name="beforeMethod" is-config="true" duration-ms="162" started-at="2018-07-29T18:56:42Z" finished-at="2018-07-29T18:56:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownDefault()[pri:0, instance:cases.DropDownCase@43a25848]" name="dropDownDefault" duration-ms="262" started-at="2018-07-29T18:56:42Z" finished-at="2018-07-29T18:56:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownDefault -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@43a25848]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:43Z" finished-at="2018-07-29T18:56:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@43a25848]" name="beforeMethod" is-config="true" duration-ms="128" started-at="2018-07-29T18:56:43Z" finished-at="2018-07-29T18:56:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownMustard()[pri:0, instance:cases.DropDownCase@43a25848]" name="dropDownMustard" duration-ms="207" started-at="2018-07-29T18:56:43Z" finished-at="2018-07-29T18:56:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownMustard -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@43a25848]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:43Z" finished-at="2018-07-29T18:56:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@43a25848]" name="beforeMethod" is-config="true" duration-ms="115" started-at="2018-07-29T18:56:43Z" finished-at="2018-07-29T18:56:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownOnion()[pri:0, instance:cases.DropDownCase@43a25848]" name="dropDownOnion" duration-ms="501" started-at="2018-07-29T18:56:43Z" finished-at="2018-07-29T18:56:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownOnion -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@43a25848]" name="beforeMethod" is-config="true" duration-ms="142" started-at="2018-07-29T18:56:44Z" finished-at="2018-07-29T18:56:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@43a25848]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:44Z" finished-at="2018-07-29T18:56:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="dropDownTomato()[pri:0, instance:cases.DropDownCase@43a25848]" name="dropDownTomato" duration-ms="388" started-at="2018-07-29T18:56:44Z" finished-at="2018-07-29T18:56:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownTomato -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.DropDownCase@43a25848]" name="afterClass" is-config="true" duration-ms="1573" started-at="2018-07-29T18:56:44Z" finished-at="2018-07-29T18:56:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@43a25848]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:44Z" finished-at="2018-07-29T18:56:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- cases.DropDownCase -->
      <class name="cases.TextAreaCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextAreaCase@3ac3fd8b]" name="beforeClass" is-config="true" duration-ms="3260" started-at="2018-07-29T18:56:46Z" finished-at="2018-07-29T18:56:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@3ac3fd8b]" name="beforeMethod" is-config="true" duration-ms="145" started-at="2018-07-29T18:56:49Z" finished-at="2018-07-29T18:56:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textAreaLongString()[pri:0, instance:cases.TextAreaCase@3ac3fd8b]" name="textAreaLongString" duration-ms="279" started-at="2018-07-29T18:56:49Z" finished-at="2018-07-29T18:56:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaLongString -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@3ac3fd8b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:49Z" finished-at="2018-07-29T18:56:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@3ac3fd8b]" name="beforeMethod" is-config="true" duration-ms="150" started-at="2018-07-29T18:56:49Z" finished-at="2018-07-29T18:56:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textAreaWithEnter()[pri:0, instance:cases.TextAreaCase@3ac3fd8b]" name="textAreaWithEnter" duration-ms="408" started-at="2018-07-29T18:56:50Z" finished-at="2018-07-29T18:56:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaWithEnter -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@3ac3fd8b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:50Z" finished-at="2018-07-29T18:56:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextAreaCase@3ac3fd8b]" name="afterClass" is-config="true" duration-ms="1293" started-at="2018-07-29T18:56:50Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.TextAreaCase -->
      <class name="cases.RadioButtonCase">
        <test-method status="PASS" signature="beforeSuite(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="beforeSuite" is-config="true" duration-ms="1" started-at="2018-07-29T18:56:18Z" finished-at="2018-07-29T18:56:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[linux]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[localhost]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ie]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="beforeClass" is-config="true" duration-ms="3271" started-at="2018-07-29T18:56:32Z" finished-at="2018-07-29T18:56:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:32Z" finished-at="2018-07-29T18:56:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="beforeMethod" is-config="true" duration-ms="151" started-at="2018-07-29T18:56:36Z" finished-at="2018-07-29T18:56:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceA()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="radioChoiceA" duration-ms="380" started-at="2018-07-29T18:56:36Z" finished-at="2018-07-29T18:56:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceA -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="beforeMethod" is-config="true" duration-ms="171" started-at="2018-07-29T18:56:36Z" finished-at="2018-07-29T18:56:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:36Z" finished-at="2018-07-29T18:56:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="radioChoiceB()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="radioChoiceB" duration-ms="343" started-at="2018-07-29T18:56:36Z" finished-at="2018-07-29T18:56:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceB -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:37Z" finished-at="2018-07-29T18:56:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="beforeMethod" is-config="true" duration-ms="168" started-at="2018-07-29T18:56:37Z" finished-at="2018-07-29T18:56:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceC()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="radioChoiceC" duration-ms="493" started-at="2018-07-29T18:56:37Z" finished-at="2018-07-29T18:56:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceC -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:37Z" finished-at="2018-07-29T18:56:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="beforeMethod" is-config="true" duration-ms="155" started-at="2018-07-29T18:56:37Z" finished-at="2018-07-29T18:56:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioDefault()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="radioDefault" duration-ms="57" started-at="2018-07-29T18:56:38Z" finished-at="2018-07-29T18:56:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioDefault -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-29T18:56:38Z" finished-at="2018-07-29T18:56:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="afterClass" is-config="true" duration-ms="1582" started-at="2018-07-29T18:56:38Z" finished-at="2018-07-29T18:56:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:cases.RadioButtonCase@2133c8f8]" name="afterSuite" is-config="true" duration-ms="0" started-at="2018-07-29T18:56:51Z" finished-at="2018-07-29T18:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- cases.RadioButtonCase -->
    </test> <!-- dynamic test 2 -->
  </suite> <!-- dynamic suite with linux/localhost/ie/10 -->
  <suite name="dynamic suite with linux/127.0.0.1/firefox/10" duration-ms="34700" started-at="2018-07-29T18:55:09Z" finished-at="2018-07-29T18:55:44Z">
    <groups>
    </groups>
    <test name="dynamic test 1" duration-ms="15332" started-at="2018-07-29T18:55:09Z" finished-at="2018-07-29T18:55:25Z">
      <class name="cases.TextFieldCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextFieldCase@2eee9593]" name="beforeClass" is-config="true" duration-ms="3518" started-at="2018-07-29T18:55:19Z" finished-at="2018-07-29T18:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@2eee9593]" name="beforeMethod" is-config="true" duration-ms="181" started-at="2018-07-29T18:55:22Z" finished-at="2018-07-29T18:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="intentionalFailTextField()[pri:2, instance:cases.TextFieldCase@2eee9593]" name="intentionalFailTextField" duration-ms="178" started-at="2018-07-29T18:55:22Z" finished-at="2018-07-29T18:55:23Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [This should fail] but found [Please fail]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [This should fail] but found [Please fail]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at cases.TextFieldCase.intentionalFailTextField(TextFieldCase.java:33)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[<a href='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailTextField_29Jul2018_01-55-23-225.png'> <img src='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailTextField_29Jul2018_01-55-23-225.png' height='100' width='100'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- intentionalFailTextField -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@2eee9593]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:23Z" finished-at="2018-07-29T18:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@2eee9593]" name="beforeMethod" is-config="true" duration-ms="157" started-at="2018-07-29T18:55:23Z" finished-at="2018-07-29T18:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testTextField()[pri:2, instance:cases.TextFieldCase@2eee9593]" name="testTextField" duration-ms="406" started-at="2018-07-29T18:55:23Z" finished-at="2018-07-29T18:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTextField -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@2eee9593]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:23Z" finished-at="2018-07-29T18:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextFieldCase@2eee9593]" name="afterClass" is-config="true" duration-ms="1315" started-at="2018-07-29T18:55:23Z" finished-at="2018-07-29T18:55:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.TextFieldCase -->
      <class name="cases.CheckBoxCase">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:09Z" finished-at="2018-07-29T18:55:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="beforeClass" is-config="true" duration-ms="3387" started-at="2018-07-29T18:55:09Z" finished-at="2018-07-29T18:55:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="beforeMethod" is-config="true" duration-ms="223" started-at="2018-07-29T18:55:13Z" finished-at="2018-07-29T18:55:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxAll()[pri:2, instance:cases.CheckBoxCase@3ab39c39]" name="checkBoxAll" duration-ms="1021" started-at="2018-07-29T18:55:13Z" finished-at="2018-07-29T18:55:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxAll -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:14Z" finished-at="2018-07-29T18:55:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="beforeMethod" is-config="true" duration-ms="141" started-at="2018-07-29T18:55:14Z" finished-at="2018-07-29T18:55:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxNone()[pri:2, instance:cases.CheckBoxCase@3ab39c39]" name="checkBoxNone" duration-ms="71" started-at="2018-07-29T18:55:14Z" finished-at="2018-07-29T18:55:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxNone -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="beforeMethod" is-config="true" duration-ms="179" started-at="2018-07-29T18:55:14Z" finished-at="2018-07-29T18:55:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:14Z" finished-at="2018-07-29T18:55:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="checkBoxOneThree()[pri:2, instance:cases.CheckBoxCase@3ab39c39]" name="checkBoxOneThree" duration-ms="701" started-at="2018-07-29T18:55:14Z" finished-at="2018-07-29T18:55:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneThree -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:15Z" finished-at="2018-07-29T18:55:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="beforeMethod" is-config="true" duration-ms="110" started-at="2018-07-29T18:55:15Z" finished-at="2018-07-29T18:55:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxOneTwo()[pri:2, instance:cases.CheckBoxCase@3ab39c39]" name="checkBoxOneTwo" duration-ms="635" started-at="2018-07-29T18:55:15Z" finished-at="2018-07-29T18:55:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneTwo -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:16Z" finished-at="2018-07-29T18:55:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="beforeMethod" is-config="true" duration-ms="195" started-at="2018-07-29T18:55:16Z" finished-at="2018-07-29T18:55:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkBoxTwoThree()[pri:2, instance:cases.CheckBoxCase@3ab39c39]" name="checkBoxTwoThree" duration-ms="649" started-at="2018-07-29T18:55:16Z" finished-at="2018-07-29T18:55:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxTwoThree -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:17Z" finished-at="2018-07-29T18:55:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="beforeMethod" is-config="true" duration-ms="177" started-at="2018-07-29T18:55:17Z" finished-at="2018-07-29T18:55:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="intentionalFailcheckBox()[pri:2, instance:cases.CheckBoxCase@3ab39c39]" name="intentionalFailcheckBox" duration-ms="654" started-at="2018-07-29T18:55:17Z" finished-at="2018-07-29T18:55:17Z">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:86)
at org.junit.Assert.assertTrue(Assert.java:41)
at org.junit.Assert.assertTrue(Assert.java:52)
at cases.CheckBoxCase.intentionalFailcheckBox(CheckBoxCase.java:62)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[<a href='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailcheckBox_29Jul2018_01-55-18-027.png'> <img src='/home/richard/git/SeleniumJava/target/surefire-reports/failure_screenshots/intentionalFailcheckBox_29Jul2018_01-55-18-027.png' height='100' width='100'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- intentionalFailcheckBox -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:18Z" finished-at="2018-07-29T18:55:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="afterClass" is-config="true" duration-ms="1209" started-at="2018-07-29T18:55:18Z" finished-at="2018-07-29T18:55:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.CheckBoxCase@3ab39c39]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:25Z" finished-at="2018-07-29T18:55:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- cases.CheckBoxCase -->
    </test> <!-- dynamic test 1 -->
    <test name="dynamic test 2" duration-ms="19364" started-at="2018-07-29T18:55:25Z" finished-at="2018-07-29T18:55:44Z">
      <class name="cases.DropDownCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.DropDownCase@725bef66]" name="beforeClass" is-config="true" duration-ms="3284" started-at="2018-07-29T18:55:31Z" finished-at="2018-07-29T18:55:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@725bef66]" name="beforeMethod" is-config="true" duration-ms="107" started-at="2018-07-29T18:55:35Z" finished-at="2018-07-29T18:55:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownDefault()[pri:0, instance:cases.DropDownCase@725bef66]" name="dropDownDefault" duration-ms="225" started-at="2018-07-29T18:55:35Z" finished-at="2018-07-29T18:55:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownDefault -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@725bef66]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-29T18:55:35Z" finished-at="2018-07-29T18:55:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@725bef66]" name="beforeMethod" is-config="true" duration-ms="122" started-at="2018-07-29T18:55:35Z" finished-at="2018-07-29T18:55:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownMustard()[pri:0, instance:cases.DropDownCase@725bef66]" name="dropDownMustard" duration-ms="222" started-at="2018-07-29T18:55:35Z" finished-at="2018-07-29T18:55:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownMustard -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@725bef66]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-29T18:55:35Z" finished-at="2018-07-29T18:55:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@725bef66]" name="beforeMethod" is-config="true" duration-ms="256" started-at="2018-07-29T18:55:35Z" finished-at="2018-07-29T18:55:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownOnion()[pri:0, instance:cases.DropDownCase@725bef66]" name="dropDownOnion" duration-ms="504" started-at="2018-07-29T18:55:36Z" finished-at="2018-07-29T18:55:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownOnion -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@725bef66]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:36Z" finished-at="2018-07-29T18:55:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@725bef66]" name="beforeMethod" is-config="true" duration-ms="151" started-at="2018-07-29T18:55:36Z" finished-at="2018-07-29T18:55:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="dropDownTomato()[pri:0, instance:cases.DropDownCase@725bef66]" name="dropDownTomato" duration-ms="388" started-at="2018-07-29T18:55:36Z" finished-at="2018-07-29T18:55:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownTomato -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.DropDownCase@725bef66]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:37Z" finished-at="2018-07-29T18:55:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.DropDownCase@725bef66]" name="afterClass" is-config="true" duration-ms="1686" started-at="2018-07-29T18:55:37Z" finished-at="2018-07-29T18:55:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.DropDownCase -->
      <class name="cases.TextAreaCase">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.TextAreaCase@2aaf7cc2]" name="beforeClass" is-config="true" duration-ms="3311" started-at="2018-07-29T18:55:38Z" finished-at="2018-07-29T18:55:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@2aaf7cc2]" name="beforeMethod" is-config="true" duration-ms="191" started-at="2018-07-29T18:55:42Z" finished-at="2018-07-29T18:55:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textAreaLongString()[pri:0, instance:cases.TextAreaCase@2aaf7cc2]" name="textAreaLongString" duration-ms="276" started-at="2018-07-29T18:55:42Z" finished-at="2018-07-29T18:55:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaLongString -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@2aaf7cc2]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:42Z" finished-at="2018-07-29T18:55:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@2aaf7cc2]" name="beforeMethod" is-config="true" duration-ms="153" started-at="2018-07-29T18:55:42Z" finished-at="2018-07-29T18:55:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="textAreaWithEnter()[pri:0, instance:cases.TextAreaCase@2aaf7cc2]" name="textAreaWithEnter" duration-ms="604" started-at="2018-07-29T18:55:42Z" finished-at="2018-07-29T18:55:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaWithEnter -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.TextAreaCase@2aaf7cc2]" name="afterClass" is-config="true" duration-ms="1090" started-at="2018-07-29T18:55:43Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@2aaf7cc2]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:43Z" finished-at="2018-07-29T18:55:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- cases.TextAreaCase -->
      <class name="cases.RadioButtonCase">
        <test-method status="PASS" signature="beforeSuite(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="beforeSuite" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:09Z" finished-at="2018-07-29T18:55:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[linux]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[127.0.0.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:25Z" finished-at="2018-07-29T18:55:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="beforeClass" is-config="true" duration-ms="3093" started-at="2018-07-29T18:55:25Z" finished-at="2018-07-29T18:55:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="beforeMethod" is-config="true" duration-ms="282" started-at="2018-07-29T18:55:28Z" finished-at="2018-07-29T18:55:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioChoiceA()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="radioChoiceA" duration-ms="361" started-at="2018-07-29T18:55:28Z" finished-at="2018-07-29T18:55:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceA -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="beforeMethod" is-config="true" duration-ms="200" started-at="2018-07-29T18:55:28Z" finished-at="2018-07-29T18:55:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:28Z" finished-at="2018-07-29T18:55:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="radioChoiceB()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="radioChoiceB" duration-ms="615" started-at="2018-07-29T18:55:29Z" finished-at="2018-07-29T18:55:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceB -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="beforeMethod" is-config="true" duration-ms="160" started-at="2018-07-29T18:55:29Z" finished-at="2018-07-29T18:55:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:29Z" finished-at="2018-07-29T18:55:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="radioChoiceC()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="radioChoiceC" duration-ms="420" started-at="2018-07-29T18:55:29Z" finished-at="2018-07-29T18:55:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceC -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:30Z" finished-at="2018-07-29T18:55:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="beforeMethod" is-config="true" duration-ms="124" started-at="2018-07-29T18:55:30Z" finished-at="2018-07-29T18:55:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="radioDefault()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="radioDefault" duration-ms="56" started-at="2018-07-29T18:55:30Z" finished-at="2018-07-29T18:55:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioDefault -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:30Z" finished-at="2018-07-29T18:55:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="afterClass" is-config="true" duration-ms="1475" started-at="2018-07-29T18:55:30Z" finished-at="2018-07-29T18:55:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:cases.RadioButtonCase@6833ce2c]" name="afterSuite" is-config="true" duration-ms="1" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- cases.RadioButtonCase -->
    </test> <!-- dynamic test 2 -->
  </suite> <!-- dynamic suite with linux/127.0.0.1/firefox/10 -->
  <suite name="dynamic suite with booper/192.168.0.7/firefox/10" duration-ms="40" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
    <groups>
    </groups>
    <test name="dynamic test 1" duration-ms="22" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
      <class name="cases.TextFieldCase">
        <test-method status="SKIP" signature="testTextField()[pri:2, instance:cases.TextFieldCase@28f67ac7]" name="testTextField" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeClass(PapaBless.java:329)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTextField -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@28f67ac7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@28f67ac7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.TextFieldCase@28f67ac7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.TextFieldCase@28f67ac7]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.TextFieldCase@28f67ac7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="intentionalFailTextField()[pri:2, instance:cases.TextFieldCase@28f67ac7]" name="intentionalFailTextField" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeClass(PapaBless.java:329)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailTextField -->
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:cases.TextFieldCase@28f67ac7]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
      </class> <!-- cases.TextFieldCase -->
      <class name="cases.CheckBoxCase">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.CheckBoxCase@357246de]" name="beforeTest" is-config="true" duration-ms="1" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="beforeClass()[pri:0, instance:cases.CheckBoxCase@357246de]" name="beforeClass" is-config="true" duration-ms="18" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeClass(PapaBless.java:329)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@357246de]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@357246de]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@357246de]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="checkBoxAll()[pri:2, instance:cases.CheckBoxCase@357246de]" name="checkBoxAll" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeClass(PapaBless.java:329)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxAll -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@357246de]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="checkBoxNone()[pri:2, instance:cases.CheckBoxCase@357246de]" name="checkBoxNone" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeClass(PapaBless.java:329)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxNone -->
        <test-method status="SKIP" signature="intentionalFailcheckBox()[pri:2, instance:cases.CheckBoxCase@357246de]" name="intentionalFailcheckBox" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeClass(PapaBless.java:329)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailcheckBox -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@357246de]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="checkBoxOneThree()[pri:2, instance:cases.CheckBoxCase@357246de]" name="checkBoxOneThree" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeClass(PapaBless.java:329)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneThree -->
        <test-method status="SKIP" signature="checkBoxTwoThree()[pri:2, instance:cases.CheckBoxCase@357246de]" name="checkBoxTwoThree" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeClass(PapaBless.java:329)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxTwoThree -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@357246de]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@357246de]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@357246de]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@357246de]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.CheckBoxCase@357246de]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@357246de]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="checkBoxOneTwo()[pri:2, instance:cases.CheckBoxCase@357246de]" name="checkBoxOneTwo" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeClass(PapaBless.java:329)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBoxOneTwo -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.CheckBoxCase@357246de]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:cases.CheckBoxCase@357246de]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.CheckBoxCase@357246de]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- cases.CheckBoxCase -->
    </test> <!-- dynamic test 1 -->
    <test name="dynamic test 2" duration-ms="10" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
      <class name="cases.DropDownCase">
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:cases.DropDownCase@ea4a92b]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="dropDownMustard()[pri:0, instance:cases.DropDownCase@ea4a92b]" name="dropDownMustard" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeClass(PapaBless.java:329)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownMustard -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@ea4a92b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.DropDownCase@ea4a92b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@ea4a92b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.DropDownCase@ea4a92b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="dropDownDefault()[pri:0, instance:cases.DropDownCase@ea4a92b]" name="dropDownDefault" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeClass(PapaBless.java:329)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownDefault -->
        <test-method status="SKIP" signature="dropDownTomato()[pri:0, instance:cases.DropDownCase@ea4a92b]" name="dropDownTomato" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeClass(PapaBless.java:329)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownTomato -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.DropDownCase@ea4a92b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@ea4a92b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="dropDownOnion()[pri:0, instance:cases.DropDownCase@ea4a92b]" name="dropDownOnion" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeClass(PapaBless.java:329)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownOnion -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.DropDownCase@ea4a92b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.DropDownCase@ea4a92b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.DropDownCase@ea4a92b]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cases.DropDownCase -->
      <class name="cases.TextAreaCase">
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@3c5a99da]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@3c5a99da]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.TextAreaCase@3c5a99da]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.TextAreaCase@3c5a99da]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="textAreaWithEnter()[pri:0, instance:cases.TextAreaCase@3c5a99da]" name="textAreaWithEnter" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeClass(PapaBless.java:329)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaWithEnter -->
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:cases.TextAreaCase@3c5a99da]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.TextAreaCase@3c5a99da]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="textAreaLongString()[pri:0, instance:cases.TextAreaCase@3c5a99da]" name="textAreaLongString" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeClass(PapaBless.java:329)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textAreaLongString -->
      </class> <!-- cases.TextAreaCase -->
      <class name="cases.RadioButtonCase">
        <test-method status="PASS" signature="beforeSuite(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="beforeSuite" is-config="true" duration-ms="4" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[booper]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[192.168.0.7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="beforeClass()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="beforeClass" is-config="true" duration-ms="6" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeClass(PapaBless.java:329)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="radioChoiceB()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="radioChoiceB" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeClass(PapaBless.java:329)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceB -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="radioChoiceA()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="radioChoiceA" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeClass(PapaBless.java:329)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceA -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="radioChoiceC()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="radioChoiceC" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeClass(PapaBless.java:329)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioChoiceC -->
        <test-method status="SKIP" signature="radioDefault()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="radioDefault" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at bricks.PapaBless.beforeClass(PapaBless.java:329)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at GrandpaBless.main(GrandpaBless.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radioDefault -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="SKIP" signature="afterSuite()[pri:0, instance:cases.RadioButtonCase@1b40d5f0]" name="afterSuite" is-config="true" duration-ms="0" started-at="2018-07-29T18:55:44Z" finished-at="2018-07-29T18:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- cases.RadioButtonCase -->
    </test> <!-- dynamic test 2 -->
  </suite> <!-- dynamic suite with booper/192.168.0.7/firefox/10 -->
</testng-results>
